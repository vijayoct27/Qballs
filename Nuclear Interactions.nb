(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    369624,       7610]
NotebookOptionsPosition[    366260,       7494]
NotebookOutlinePosition[    366650,       7511]
CellTagsIndexPosition[    366607,       7508]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PhysicalConstants`"}]}], "Input",
 CellChangeTimes->{{3.7026599174107428`*^9, 3.702659920282866*^9}, {
  3.707578062616406*^9, 3.7075780627309227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\\
)\[NoBreak] is now obsolete. The legacy version being loaded may conflict \
with current functionality. See the Compatibility Guide for updating \
information.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707578065594265*^9, 3.7105062105315323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic Collisions in Lab Frame", "Subsubsection",
 CellChangeTimes->{{3.70439758295687*^9, 3.7043975846021852`*^9}, {
  3.7046500341470222`*^9, 3.7046500373350277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m", " ", 
        SuperscriptBox["vi", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "m", " ", 
         SuperscriptBox["vf", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], "M", " ", 
         SuperscriptBox["v", "2"]}]}]}], ",", 
      RowBox[{
       RowBox[{"m", " ", "vi"}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]}]}], "}"}], ",", "vf", ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "v"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7043956982810183`*^9, 3.70439578376477*^9}, {
  3.704395820560055*^9, 3.704395852925693*^9}, {3.704509543602092*^9, 
  3.704509563726329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(\\*RowBox[{\\\
\"Solve\\\"}]\\)\[NoBreak], so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7043958260514793`*^9, 3.704395853329617*^9}, 
   3.704509568536331*^9, 3.704571395293263*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7043958260598097`*^9, 3.7043958538832006`*^9}, 
   3.704509569081953*^9, 3.704571395829649*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second solution is physical one", "Subsubsection",
 CellChangeTimes->{{3.7043980437290154`*^9, 3.7043980559534397`*^9}, {
  3.704574584179956*^9, 3.704574588758279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efin", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "m", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "m", " ", "vi", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["vi", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["M", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["m", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "M"}], ")"}]}]], ")"}], "2"]}], "/.", 
    RowBox[{"vi", "\[Rule]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", 
       FractionBox["\[Epsilon]", "m"]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7043960422641973`*^9, 3.7043960544458313`*^9}, {
  3.704396240710936*^9, 3.704396279919651*^9}, {3.704396340045801*^9, 
  3.704396370510132*^9}, {3.704396445968672*^9, 3.704396514333053*^9}, {
  3.7043967352607117`*^9, 3.704396742762102*^9}, {3.7043968693853273`*^9, 
  3.7043968697025843`*^9}, {3.704397182522834*^9, 3.704397182658051*^9}, {
  3.704398005085311*^9, 3.7043980412580748`*^9}, {3.70439878158025*^9, 
  3.7043987979006968`*^9}, {3.704399752419772*^9, 3.70439975350599*^9}, {
  3.704509994202764*^9, 3.7045099942736397`*^9}, {3.704572323167429*^9, 
  3.704572323462879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"etransfer", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox["Efin", "\[Epsilon]"], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704396546902505*^9, 3.704396607194059*^9}, {
  3.704396761924859*^9, 3.704396782931272*^9}, {3.704396814323419*^9, 
  3.704396879598176*^9}, {3.704396967581319*^9, 3.704396984124893*^9}, {
  3.704397018870875*^9, 3.704397048373542*^9}, {3.704397080568088*^9, 
  3.7043970810537663`*^9}, {3.704398800183436*^9, 3.704398802788703*^9}, {
  3.704399755475451*^9, 3.7043997683233967`*^9}, {3.704399805605715*^9, 
  3.704399809694181*^9}, {3.70439989540063*^9, 3.704399909864231*^9}, {
  3.7044000245512333`*^9, 3.704400071471487*^9}, {3.704400135746211*^9, 
  3.704400144247656*^9}, {3.7044004096083508`*^9, 3.70440045654058*^9}, {
  3.704400519616852*^9, 3.704400542127236*^9}, {3.704400627018744*^9, 
  3.704400630721491*^9}, {3.704571410513069*^9, 3.704571411851252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{"etransfer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7044022745721273`*^9, 3.704402275170223*^9}, {
  3.7046431189752283`*^9, 3.704643136431507*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["M", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", "+", "M"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
   3.7046464293566523`*^9, 3.7046500467900877`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Proper calculation (lab frame angle not exactly isotropic, unlike CM angle) \
yields \[Zeta]= ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["M", "2"], "+", 
     SuperscriptBox["m", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]], "~", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}]],
  CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
    3.7046464293566523`*^9, 3.7046500467900877`*^9}],
 "for heavy nuclei"
}], "Subsubsection",
 CellChangeTimes->{{3.7046500515776463`*^9, 3.704650119513261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.70440410874854*^9, 3.70440411616311*^9}, 
   3.704404547012455*^9, {3.7045096674135942`*^9, 3.704509670484754*^9}, {
   3.7045123769536*^9, 3.7045123821119337`*^9}, {3.704512611686779*^9, 
   3.704512614126163*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["How many elastic collisions before lose O(1) of energy?", \
"Subsubsection",
 CellChangeTimes->{{3.705885897668036*^9, 3.7058859056366777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.5"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "100"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7058859103272743`*^9, 3.7058859324218063`*^9}, {
  3.705885976319331*^9, 3.7058859764544487`*^9}, {3.705886027126842*^9, 
  3.705886033957623*^9}, {3.705943088548449*^9, 3.7059430887606573`*^9}, {
  3.705943195355322*^9, 3.7059432031155157`*^9}, {3.705943902371518*^9, 
  3.705943902503972*^9}, {3.707845046068416*^9, 3.707845046199988*^9}, {
  3.707845185226728*^9, 3.7078451884638042`*^9}, {3.7078458212813377`*^9, 
  3.707845821374362*^9}, {3.708289196874199*^9, 3.708289201169088*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7058860342969112`*^9, {3.705943196581669*^9, 3.70594320370866*^9}, 
   3.7059439028797827`*^9, {3.707845046696259*^9, 3.707845051529893*^9}, {
   3.707845185883759*^9, 3.707845188745452*^9}, 3.70784582172502*^9, {
   3.708289169244665*^9, 3.708289201698689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "41.76187795018794`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.705885932763235*^9, {3.705885973524386*^9, 3.705885977018015*^9}, {
   3.705886027829247*^9, 3.705886034303774*^9}, {3.705943196590994*^9, 
   3.7059432037176113`*^9}, 3.705943902888917*^9, {3.707845046704797*^9, 
   3.707845051539077*^9}, {3.707845185892404*^9, 3.7078451887539253`*^9}, 
   3.707845821733531*^9, {3.70828916925389*^9, 3.708289201707345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.1"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.705886049855261*^9, 3.705886050221634*^9}, {
  3.705943107644319*^9, 3.705943116657132*^9}, {3.705943191643855*^9, 
  3.705943193162631*^9}, {3.705943472991119*^9, 3.70594347313236*^9}, {
  3.705943905592835*^9, 3.705943905655376*^9}, {3.70784505351272*^9, 
  3.7078450536885*^9}, {3.710501953729549*^9, 3.710501953840839*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.705886050718212*^9, {3.705943108367778*^9, 3.705943119066016*^9}, 
   3.7059431937456837`*^9, 3.705943473521803*^9, 3.705943905939335*^9, {
   3.7078450539696283`*^9, 3.7078450550749893`*^9}, 3.708289178506966*^9, {
   3.7105019444601927`*^9, 3.710501954261179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "14.383478270034349`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7058860507249393`*^9, {3.705943108380752*^9, 3.705943119074711*^9}, 
   3.7059431937544947`*^9, 3.705943473530431*^9, 3.7059439059484653`*^9, {
   3.707845053977713*^9, 3.7078450550841503`*^9}, 3.7082891785156183`*^9, {
   3.7105019444699907`*^9, 3.710501954269981*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dedxelasticmeson", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["50", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxelasticnucleon", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["10", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxnonelastic", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["n", "Z"], "\[Sigma]"}], ")"}]}], ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513538766163*^9, 3.7045135539076567`*^9}, 
   3.704514583862818*^9, {3.704653197664641*^9, 3.70465322775366*^9}, {
   3.7046569486914463`*^9, 3.7046569600981073`*^9}, {3.704657075972364*^9, 
   3.704657092396399*^9}, {3.704657123457366*^9, 3.7046571242309227`*^9}, 
   3.704657404385747*^9, {3.7046574439806223`*^9, 3.704657444087554*^9}, {
   3.704657726936661*^9, 3.70465772711018*^9}, {3.704658280463488*^9, 
   3.70465828562953*^9}, {3.704660621160759*^9, 3.7046606273574343`*^9}, 
   3.70466077608735*^9, {3.70588605545405*^9, 3.7058860617022257`*^9}, {
   3.705886186054516*^9, 3.705886227407016*^9}, {3.7075780760162067`*^9, 
   3.7075780830795107`*^9}, {3.708289209258444*^9, 3.708289224114139*^9}, {
   3.70834400503961*^9, 3.708344005374948*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In units of ",
 Cell[BoxData[
  FormBox[
   FractionBox["MeV", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], "cm"}], ")"}]], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.704574619732512*^9, 3.70457463963356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "4"], " ", "Barn", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", " ", "Fermi"}], ")"}], 
      RowBox[{"-", "2"}]]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "2"]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704514588859489*^9, 3.704514592946843*^9}, 
   3.704657484832375*^9}],

Cell[BoxData[
 RowBox[{"0.0025`", " ", 
  SuperscriptBox["ElectronVolt", "2"], " ", 
  SuperscriptBox["Mega", "2"]}]], "Output",
 CellChangeTimes->{
  3.704513724181877*^9, 3.704514595082625*^9, 3.704571537201365*^9, {
   3.704657485405818*^9, 3.7046574934856033`*^9}, 3.704657544678402*^9, 
   3.704658335364869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["ElectronVolt", "2"], " ", 
     SuperscriptBox["Mega", "2"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], ")"}], 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{"Mega", " ", 
     FractionBox["ElectronVolt", "Centimeter"]}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704657566969379*^9, 3.704657599499071*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5.`*^10", " ", "ElectronVolt", " ", "Mega"}], 
  "Centimeter"]], "Output",
 CellChangeTimes->{{3.7046575981931477`*^9, 3.7046575997617064`*^9}, 
   3.704658338614678*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic and Nonelastic stopping powers (\[Sigma] in barns)", \
"Subsubsection",
 CellChangeTimes->{{3.704657690998494*^9, 3.704657702060732*^9}, {
  3.705886102361073*^9, 3.7058861116458282`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.008"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.008"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.008"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.008"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.704513112032195*^9, {3.7045134498770247`*^9, 3.704513482349444*^9}, 
   3.704513579191454*^9, {3.704514413242275*^9, 3.7045144170409307`*^9}, {
   3.7046532603069563`*^9, 3.704653260443033*^9}, 3.704657552055846*^9, {
   3.704657744526149*^9, 3.7046577454312477`*^9}, 3.704658448553891*^9, 
   3.7048353739347363`*^9, 3.705884750609273*^9, {3.705942322879837*^9, 
   3.705942322988016*^9}, {3.7075780918725777`*^9, 3.707578100560158*^9}, {
   3.707765834171659*^9, 3.707765838128194*^9}, {3.707773007648993*^9, 
   3.707773029575079*^9}, {3.708288669218328*^9, 3.708288683881666*^9}, {
   3.708292232863494*^9, 3.708292233475561*^9}, {3.710500059078541*^9, 
   3.71050008383671*^9}, 3.710501558599949*^9, {3.710507271816463*^9, 
   3.710507300759535*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canvases for stopping power plots", "Subsubsection",
 CellChangeTimes->{{3.705932188927627*^9, 3.70593219683154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"canvasphoton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasphoton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], ",", 
        SuperscriptBox["10", "4"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], ",", 
        SuperscriptBox["10", "4"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "9"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "4"}]], ",", 
        SuperscriptBox["10", "4"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513918893631*^9, 3.7045139420762377`*^9}, {
   3.7045142304986773`*^9, 3.704514230761878*^9}, {3.704574665161747*^9, 
   3.704574687830915*^9}, {3.704833813057259*^9, 3.704833814220786*^9}, {
   3.7058853430377703`*^9, 3.705885370645385*^9}, {3.705885643600559*^9, 
   3.705885676648418*^9}, {3.707578106777104*^9, 3.707578116768587*^9}, {
   3.707764744887583*^9, 3.707764800231929*^9}, {3.707764857842807*^9, 
   3.707764873779258*^9}, {3.7077649086124487`*^9, 3.7077649627712927`*^9}, {
   3.707765222579644*^9, 3.7077652254806004`*^9}, {3.7077656542511387`*^9, 
   3.707765663814499*^9}, 3.707765752849141*^9, {3.707766356610561*^9, 
   3.7077663631847*^9}, {3.7077664759080963`*^9, 3.707766514837055*^9}, {
   3.70776655353336*^9, 3.707766575501569*^9}, {3.707769725410735*^9, 
   3.707769728402549*^9}, {3.707770810316902*^9, 3.707770812393553*^9}, {
   3.7077711602882023`*^9, 3.707771180296599*^9}, 3.707771213610237*^9, {
   3.707771280615444*^9, 3.707771287541771*^9}, 3.707771381689966*^9, {
   3.707771573369876*^9, 3.707771618427503*^9}, {3.707773409492894*^9, 
   3.707773555950324*^9}, {3.708289097445088*^9, 3.708289099987447*^9}, {
   3.710501180558084*^9, 3.71050118797084*^9}, {3.710501224676174*^9, 
   3.71050126171336*^9}, {3.7105012919076242`*^9, 3.710501322219295*^9}, {
   3.7105073702031*^9, 3.710507432411334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"photonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton", ",", "compton", ",", "photonpp", ",", "photonhad"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"photonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton2", ",", "compton2", ",", "photonpp2", ",", "photonhad2"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.70588566480058*^9, 3.7058856669276857`*^9}, {
  3.707578609739561*^9, 3.707578620794757*^9}, {3.707765933511084*^9, 
  3.707765939291894*^9}, {3.707766187762607*^9, 3.707766192966907*^9}, {
  3.707773323544589*^9, 3.7077733320633698`*^9}, {3.707774910511572*^9, 
  3.707774914940811*^9}, {3.707775144508655*^9, 3.7077751535802813`*^9}, {
  3.710501151684119*^9, 3.710501151817232*^9}, {3.710507729703883*^9, 
  3.710507729815445*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 16.11809565095832}, {
      18.420680368020108`, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVzns01AkbB/C5GDTJpeSe329mfsJocv+J1HxLFy8nl2xqqSyOclJvkk2W
hE2OtNalLfG6ZlsRpV6XXFtEqJHdimwht0Vlc93ajHnn/eM53/M5z3nO9+EF
nNwbxGIwGEHy+X8+vLrw3t1UKp6p+0u//50hwl/M2nfukIrvLk2+q1Ij8Hug
uZ7gqFRc+WOy8waKgNVsyD9RSVJxetVwl8SGQHpscf/zUqn4a/sw89NOBGZV
x2pFEql4eYvdhlYPAp45vOyLH6Xixfhgie4hAuq1Wb6bbJfF5zJ9t187TSDU
uXdz2v5l8Vh81+mlcwS6X64xmIpcFsfocHa/TySQMnf5dXbjsvh7lftrirII
TMd11M8PLYt79b1Oxd0gsEddMWcPWyY+dnQxc+1tAiqi84dku2Xi7D06jOh6
ApeOnBoI6JGJD5Q3pLf3E5icL2usm5OJV4Vwd0y9JVC07Vt37koG3EWXusYm
CCg8qzAPFDHwvLw+NnSRQMt74UfNMAYKjRcLFZRJbFu/7tTZLwz0Z9522kqQ
+DjNztJTZcIhoNfNkk8iv3qquZ5kIrlsRamuEYll5xpN5i4m1HpCl7qEJGpD
vGqSUpm4KvCz+NWWhFVFkizLiAWuQlequQsJvuPiDw3ubOTrKn6f+G8SPQpv
qvwC2HDo8NQoCiUR+7RlkPktG6qxnIj6MBIDh9Msd2WxkfHNB+rtGRJZcRte
SEbZMPBwC1qKIbG6PcBgKFIB/CofveQUEuy93SWsIg6kHVHOp0tJtJkeKQiq
5GCkrOGBahmJS0zptcdtHHy6amRSXC6/rxAmpExyoBHnp/uiQv6f+kU/PXNF
XJ9ZoaZTQwISR02rWkWYPFN5ubuVRLRLyTn/Z0q4/werKvwPEvPbEzweLq1A
s9/5a+McHuz+MyrLVONioo43uF2Jh+8WnO6c4nMRoD77JUeZB0YxS1XgzMXZ
npkmj5U8qKyK7UrI4ELk21ZbrM6DUe93u1yFK/HGYvgGpc+Dd0io48v9Kqj9
6Jbva85DTYavyft7qggricoy3cfDrutE74VbGmD+c1Dyr2s8OLuu8SjrWYN4
s7U/Jj7lwUakPXzZRAvTJw6nGLP4qJ4xEF7cr4OQUVl7zkY+qHGrZLpSD8pK
1LtffPi4HufeMqi0Dl/ueTcdjefjpuxERaEVAdbob019RXx0e7sdVG0jEeT4
05vKdj6088Yd+gZ46A8+O+AwzseIAyvBcJaPtJHXBWdZAtyY/tn3oQGF14n2
j04SAtzJcFl10toI88++DlezF+CuR4RrpP96RMXs1An3EsDW33hBlmSMn/JT
k/SOC6AY2BeZkWuCK+oi/9XxAjyJ1kiO7zTFgxIl3aFMAQYSXSNihoUQo+Cw
c5kA4ePK3YvzZrB+lWuf+FAA2UG3+52GIrS5xUjyngvwsvVKWKnNRny1bWTL
3XEBCnYENv7pbw7LMyNlGZ8FeO1zPSxziwU6Cj64ZHMpmDY0b45qt8Aw2cR/
pEch1Myia+UhS3Sv+yq+0YzCodWGjwsnLPE0sFpLZzOFnRyP5D/PWyH/1vx5
e1cKfxU4XTimaY0DKq/GrvhQEFdXT83lWmM6aXAkNphCUt9JbTNbG9zpyxnc
GEEhMqy4IvhXGwxtcrx54QIFs6rCuFEXWwh/MxU6pVHo47zVVh2yRdftvXsb
cuV7SZ7+1hAablsd+hmlFCaYVdmlJ2hk+/88R8t90/aJvm4ojfJge6UTcpM5
n/Tnw2kcvNVo8EpureOeBiUxNER1OxUqblNgcdnrtNJp6KRWNvuVy/t2HjGc
rqHx6fM5xQcVFK5GRuf61tEoMfl8bFpur7J0w44GGsJxu07BPQoSzSbDomYa
xoPDESlyt4xoEz5PaEx+sEsNvE+hPK6DaBukMaO/vkalksLxysE862EaXt46
rdvkNp1cIApGaTwaeNd5Ru4iDz4ZPUnDs3WpfUjuLCKKtJqjcbOeE/vfKgoH
vNLy8xZo1Gn8/c2k3GsTfyFXfaKx+LfyZsNqCqnTv5MTSzRWlx4bSpR7D38q
f5+Mxj7PK6X1cnO9GbwWph0+PL0cOiP34yStAgsFO2wfyzdfX0MhoWEDL1fR
Drc2KUz5yP0//He8Xg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkWs0lAkAhl1XynWkyDBmzDAzzMyH8RHWvNiNpYxq2+lmJCkyzbQnlxZb
0Ulu2zlySW2tTqM7bVdKQlbMLEo303ZjVagMpZpInLU/3vP8fc7z0tcrliUY
6OnpLZnZ/+wOvZlim18ZxMla+oFeRsHl3dMHs7VZIpFnc0lTBQWeh+7vDdEW
iVYM8IUxhynYymqcZmgPi7KjzVIrlBRYJnv722irRY+Z7TqLixT0mo9I5mgb
RAVdgV8mb1MQFtux0UTbKRp2Yuv3zLLBpIm/3Fj7VHTu5rRFQZYNGn+/+Nc2
5oiI66CiJaXPhaX5wzavDTqRVcmmwFNxtlgTFeiSVDwl8s/8aCIOm4dz80NK
3WsMsDr9iEqG+ejJDmpjiL/By2Jq2Ru2HR4FnO38FDQbCc11P/Uy7TFU27Vv
E9UC7Fi0B1AXoHsFs7n6iRUk1MrQcQMH2I/bK226KcjU2l9xn3IAqbl+xF85
F6bPNns1DVDxuNxPR2yZh6eBp6X1HY5I3qH1s5Xaoeq84S6PVid0H4squcZb
gJ4QYc30WRoYo4OaSCYVu1KaB5XLnTHpsDajxtoJtTtjor/edsapPVnCO89o
oB961WgUQsfRws0yxZAz9jZOnlQ10tEzJouQ3KWDMfa1PNCbAUN5oWNtFwPX
BEV6sgsMpKw6UJl1ywU/s/YHi3kuiIr/haesZkLK3Z3Xf9QFtOz08zjJQthC
gwhPJybW3IgUBRW7IkEisyZKmHicZP6rMs0NVbwl5/uNWRBz3/65U8Ge+a1B
HZ3DgsC0cuS6hAPxlO1ruY4F469yhmI5F/W6qZzwFFfQYj2MCyLcEXZq7ceH
o65Q9jV9MPL0gGnSiWSbeDc4pik0Oi4Pbd47Ysz63KDP/dQWPpePq+bBK678
yAYnKjHBYIKPzsoMJqWdjbDcz+Ne7wV4EhAi54ZykCjnd8bJCNAGP94Yq+Xg
pIui/NVrAtLDPnlpQi4chg5ttI/1xL11cSvPnObiwoZvLfTveSLxmaHefqo7
Qt5uIaqivDARL2T4HHTHrOz8lZ9bvNA0IY7IM/eA2tl70jjYG7sOTgyXF3qg
evvyVFWDN+Lf229aZcJDa6/0kz8hROZK1mBHBg+a6PHRxBoh9qkb/534zAPt
bta7RQwf9PwQ2q+R8ZFvul31qNQHyAmqT+rlYyRS38HVmsTx1nazujUC5B1J
3eayh4RoXmDC5TsCnFB5STl7ScQET4jr7wrQ+mE0XJBPIlNW6998XwC9iM1O
Ab+RqGshrDo1AqTrpOplZST4Ctb1F70CbBSH03KOk3BUWVjbvBMgVN+ho+8W
iamGrc/9ZhFY5/HoykA7iaJld+4HmBLYISk7OqwmZ7rx1EGzCdTXWKaNd5FY
aPP20ndmBLxWG9GtekikJiXkR1sRcL6kTRMNkBi2XS1MtCMQ9PxM3PdDM35n
r3KS7QmsNU1cHPmGxOzg+TT5AgIVsf10yQgJtuyBaQqVgKWZplOuIxHfEtW7
05mAh29pXco4iTFJzYMcOoGI9UuPZXwhka2d8/ceBoHcqx3pudMkKu3UlwuZ
BKpe5K0v0vMF/5zbmX0sAi0Wi5bsN/DFjdDcymJXAn0LDf0qjHyx+J+XpaVu
BKY3NDP++MYXT+ShBQfYBP4D2vEGkg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkpXQl
Z8PkR7FHlOJQbmwe0zWzhrXK9JNS+TFkPbLo1zX0w3ZdsY61P16P1/9PbtTO
kGjKxMRk5fv+f5nFilxuAoW6tU8C12QyMOQfnuSdSsGQO+EpL2RANXE2xuYw
hSO+651lGgbs660jnqspuBvOzGPVM/CTQrHuZi2F61pzG0MLA1rfO/eM5ym0
ZCWW8rsZqLGXbhPdpnA+opf3+SMGylupfSUvKdRbVUmvTjdHtuvJ8hiJGdQJ
H20qWmWOcF2Pjmo2Q6LH3u+EPeagFH5f+HRNwwfahzKFbgZCYhxPa98wEHP6
Yly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZyms8r89NloPCoIYpbMBhoP
uHCrbOH8TduA1XFb1F11uMjT2OHL+5aGwWY7WEyF9xpu2ENz76Jb6YA93I3W
M+qesZDyLMiv+S4LZswSbs/D+ZDxlAMN7+bjesD1C+3mbDRsT5XPMzqC0xq9
wGEaB/m7iurd5nLQlbFUc5bFBa/gFBoXcqE4GeS1XMDDUZGD/wSPh36/FvFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbHnjj6teIUrfnlQvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUXzjgjuZDzyqD0j2g
D+Oc2prqgSXxbV+/SF+EUPVi9TvlIpScHszLUQlRM8brm8wRYpRqv5ZX4Im+
zv0Hm7I9MTPpyFJuoBeMUZ2/JqzxQuX2arG40wtpXPVo2B0vcASJ29jrRHhp
Y+LcvFqEIlZP+VcdIkQwO4x3e0WYsq3aWxEmRuONUJvbn4mxsds1t6hfDObR
5VeUg2KcKbPzkW31RkhBu6o01huvi0/pI0e8kR3M3HVC5w3++ge6iHgJGub+
bLYqSYIwx9zUWXoJujVzuu6OSbC39unKimQphuTW3/65U4qs2KEPq/+WYtgt
iaV+K0WBaEWhPJVgqOFQq9d+gqzmSF/DBMHaaL0q/gDB2I42vaeR4MLcSHG1
ikDuKK6NmyI4sUdUYZ9BsFQ13W7AjMYaUf/uyTyCV0u0w1esaJzTOrNvlRFE
NIwXF7JpFFa1JCt+I5Boj416+NGYDBEINJcINJsmNTEBNBKoYw/uXSGYxYzd
UBlII2iLYtXaNoLhOJ/LtsE0jOyZHGkXQaXrwxMToTTi1JvaqUcEVlWe/m3R
NPo+vpYue0KQElL61jSWRsC4kCh1BDpTsx984mksCKM0f40QXN7c51CXSKPX
7ntlp55gPzvtRfE+Gn7X5nhYviF4fPtpVUcKjR+TVUP+4wShaZ9utFDROPz7
J6ub3jsI7ztdVaXTeJt5znTsvUPZ4YKUxkwaMWKnJgFFw8LnjfBVFo2eofyE
bdNo7Bve/JifQ2N5oYF7kkHjcenN0q15NP4DId7s3A==
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, 0.}, 
     PlotRange -> {{-0.9210339996043925, 19.3417143676245}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 9.210340371976184}, {
      18.420680368020108`, 9.210340371976184}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
7sMj8H9g/pRD
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVj30wlAkAh3l3nbSqPa1Zm6NdLLtbrXexrz44v02yfd7ZvWZUhlqhk0ko
ol1hOnXhOqloc8xeXyrdhJBL9r3UUD5CHyRd9qpzV8qYJGS36/545pnnz0eg
SVTFEFZWVsrP/O9TdiGHBAkEVoW7jEdvYdOm4E1JvvsIeF4/av0knE1rp2pi
2XkE+p69zB3+lk1zq2ZFvNETOMxcYm9RsunquLiwuxcJBIrzC+co2HRlUGe/
+ToB3Ohr37OYTZ/nyrfJOggEhwlnDHiz6dIWIq1khIAyvSmzwpVN53qVlcb6
MXDuqKk3Z2IOvWnowRDRxEBPz8X8v3fOoYm45ZnLupmQqAPHL2+eTatiXS5V
fvgC/WrNnQC5PR15ILtn+8eZ6JRbDFmyGfSkuEX65tVs+P58LWRawaTriiSh
rJIvkSXc0H528pNR+GvrU/sTc9H8eiCp3HrCuH9g5vhgkyMamBWCssa3RkP/
DdHJp1yovfhODQVPjOn/hC5v6uWB7iMIjepKUIBb6tPaaWdIxdU8O5/nQbU7
9kXNM7tAt/TtsRP60aD8XUerRBw+ZrCPnU4OnQpyKyhHnYcAERmWgpEYaxTJ
nIKn3NzAtzcVf4q0wdRrTe55yh2N71lnr162Q4CUF8ha7IFblhf7g2tmQdNj
a73VT4jfWu6FruthQ5ffasNf6YkXy8LC2t47IKVzTHc8xAtdxguKujEOojzf
Ubs3iVCReK4mxZUL70GxeUW8GMrnc+H4NQ+PBe1Ue5wEpbHhNe5LnJGejqrG
jAUYcFRUMKNcMBbOL4/etxA9D6wOqLbMh1q/WD+dugitl5wCb17i4/yo2yPL
QSm+YjDSbzUK8Khr7w/1ud5Y81e4SHfdDWZN1+8J60gk9mY5ld9zh06gHw7v
/NzfcbRp3R4YYVsJm9bKoPYdHFZ0ChHBumfufSjDIlFm2Z5BT9TdUbM7NvjA
dOZgc9SgF1hFiubUQR/k+UeLa96LoCpo057c7gvewrTSCRsJctewdhUP+SK7
YjxnjLEAtZyrjNVJfni2VHlxI/fzh8Ghu3fUD7wNNiF7nBbBFDXr7J+Jcvh3
Tw3ncKR4JUri6SfkWBV98+Gk0Bum2sMt5F4Kp5qmSoocSKyPGdPGZ1Cw27lt
fQeHRCMn0ueMlkKaSyfDlkuiOEX2CzebQpjWsDPDmcQ6WV+y5UcKtkuVK7Z6
kGioFLq2n6KQUnt8REqRKDxN744zUlhTSa68u5GERSWRGP6gcG2z/iMjgkQC
cexZfzMFTxazKjCSROjWuNXrWylYx/c6V2lImF1n8+XdFOq9MkeLd5D4Xr+5
jXhOweN0W2mMjsSjVbezAl5SKFTJVeX7SayYlFKpQxQs1uW2j7NJzA8nDP++
pvB4S3Ly2lwSDx0vpHaNUTjiylP6HiGx/LbDwpkfKJg7cswJhSSu7Naagicp
xOuGq88Vkci7/83aejOFkAGjy7wSEhM5DdajnyhU54nvq/UkYn3c6yWEP/jL
ig4VlJJ4YMpP2Mb0x0+vpgNbykgoCscFZV/44+PJ2HdWBhL/AduW9NM=
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -9.210340371976184}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-9.210340371976184, 9.210340371976184}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {9.210340371976184, 9.210340371976184}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-9.210340371976184, 
      9.210340371976184}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.7105077307870407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"electronall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron", ",", "electronpauli", ",", "electronpauliflat", ",", 
    "electron", ",", "electronflat", ",", "electronbrem", ",", "electrondpp", 
    ",", "electronhad"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"electronall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron2", ",", "electronpauli2", ",", "electronpauliflat2", ",", 
    "electron2", ",", "electronflat2", ",", "electronbrem2", ",", 
    "electrondpp2", ",", "electronhad2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705886294227656*^9, 3.705886309689898*^9}, 
   3.705886354455186*^9, {3.7059295081654882`*^9, 3.70592952681656*^9}, {
   3.706591208668486*^9, 3.70659120946497*^9}, {3.707578151211833*^9, 
   3.707578154097561*^9}, {3.707578534107463*^9, 3.7075785360290823`*^9}, {
   3.707770599686041*^9, 3.707770620060073*^9}, {3.707773274966692*^9, 
   3.707773314613207*^9}, {3.707774917389535*^9, 3.7077749200210876`*^9}, 
   3.707775155723225*^9, {3.710500580655548*^9, 3.710500580781083*^9}, {
   3.710507723168262*^9, 3.710507723303005*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 16.11809565095832}, {
      18.420680368020108`, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs0lHkYB3DkloRBNMTc3pdxyTuoTqtlnlNWRthk2bOphq7URqLYMiIH
Q5HpJkVjBqWplJTr6liEyopJRK1cKnKNxp1p3z3H2feP97znc77f5/m95/fS
9obsOKCkoKAQhD//vYcXSnozLBbZEd3jUQwyBXiq/Mfjdovst3k1kSNGFNDV
8RO2cxbZh8hH2jwpFLhFtkmu9F9kk2/a3S9gUKDZupWblLrI/lI+XxFkTQHE
m7qCNrjI1nyTYPi3IwUahaUB20Vy9kQqSeDiT4HUzPDEdjUF2JwQofcthwJd
6/PWbTipCG4FlVibLhX88+tUHAXKMDKw0b4jjQpKnCvPdSLUQInpO1cho0K8
BaJsc0MDpk3Vte950UDfiaSe/nAl9F6KE5dm0yCgyufMQVcdUHF8ubOhhwZ3
FJdtuNVOgqZ8n95iKh0UO1UPurvrgbbAJvKCDx3cpIe9DLv14XmWwqHYJDpc
+8ij8X83ACvbeAV5CR2mUvoPc7sMocCa8/nrBzr89GthiF8IGTYHcpK01BmQ
W9IyUvnJCMRdncP9lgxYbifaXvfLGqgPU1Ifc2MAt7E5+FuvCahGFaYKjjCg
dtFXNdGXAn3RajFb+AxIuX3znjCcCgZP9jbczmOAw+6gBk8HGlxWCTWcqmJA
yJ4P1MIJGtQkL3yz6WBAVohKe145HXodVq7ZOMEA78a25x4nGDD3zkc5SR0B
zeLvBa7WCJQ72LXFmiBQ+eDt+JsJBH6bXbD0sUdgSrYr1OAeCqsaS8f7XBAw
dxN4fgk3gy+t5f1b/RDoHjwWGMIyhxLmln1ZRxHIXJ0f7jpgDlvkgztmoxHw
8r3QVfSACf80/8ixECCQ+oEWLw2ygE2jz2oFIgRqIvcnxdlbwtB6J3bDIwTm
b8rPJM5agsbDmi5KDQIVOs5FTo+swC+mfXykBYGwiz84809ZQ0auxJ7fg0AR
t5MUv34tRO8JLcsZw7+3TNrSOrwWuK9rnaYWELBFTo8VF9nAqHNmfNwKFGQd
TRz3oxgUbUvdumE1Cl9N02X8Yxh0B4DVedwj+7jCZ2GEB/PN3ZQiiP7nkTGZ
0ykMbB3Id/tw99mVCk/zMDhldqgqnYxCd0SMW2kM4fd/uk7K4jCw5PboeRuh
0KFIyrZNxMBkcihShudtLh1uwckYhO3XcjYwRkF6TjQpSSHyV81B2f1pGGyf
w1RP43njKrttyGXCz4TV2VnXCT+18J4yEBGuCDYWeecSLi3q25Z2G4PhKPm5
qyYoPJ65O9UowSB1b0Q0irvQMVy0vICwpF55+uxjwrleV9wXyglnX909vfEp
BkNL+7LeoeITf2HgkBAUomGKwnXqqPujWsJXDxRPj9bj96H5wjMW9yVJtNjq
JeG0MRePwCYMUto53vO4z6/TnsltIfYn/dEu7mnFYF1yf+wsBYWEp0IP07cY
eJFsSdFUFM4uC5zZ+Q4D44i4O5F4fsaVlZPeRfSjUmY8Wnvw+1jqR0qrZnQ+
EfkJw6QcjwEMzIy14BINheO7vDyThzB4sfnhPoSOQrCIPFs3ioFHwlCaKp4f
+dyTs2yCcKCVxBMmCe8/dnw2aobYF/DEIbdsHoOXS/v2zCn9PCUn8vvCT1Fk
RRb01PHBh4GCdTVHWqLE+j+XfLxv7qvMAmXx+63l+DxTTZcnU2FB71L/lsVJ
6UU1Yh5x7zS3Xc4Cb3GZZBJ3TrAT75UGYbpALD2qSTi7SJWpqcWC6ppQniuK
gmnbYZ5EmwXf1+pdKzZDIXOmSepKYkF5xkDnPJ4bGdsz+3UJZzim8+L1WSBf
6q/2n5cyDFhg39E1cgPB//9ZLrPakNivn1fD8ycT8xfrzV/LjYi+zuA5ZtYa
4vwLml95m0wJ/wvB2MmI
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDP13hGdvUVB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AOtzU8M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIGD9fuUhHMLmB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AEXub2M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0fk71AkAx3FESMwIyZExh9uYL+o7Qr4ftZVlG11WjodCNbmmw/3ooFxR
IVLJaps2HkZrawsdSCVXT9SGlaTsMsk4thybsO0P7+f1B7yZQaJtexTk5OQ2
f+t/29c/jNLJKHYR8vU0C0aGqN9PzF9MkiVSZRFqYeZaUsr20su0dbIsalg8
97hmjZQ6YFI7z5JdpkLp7+N6U6UULczeUUsmoSI/lPUzmR+ot+qj3mqy+1Rs
oXOlxGuY2hTYuldZ1kalLgR6NtSOULPKjpFKsl6qI/hlY0zTOFVbePPRYc4o
peWq1HpQYYqiqb9qtAuZot7oVAQ3DHyh/ATO7P05cxRtZMIjR7JA3dBdl2dV
oYBbH+lzBZEK6ExyaWR5LgbrTbBRbo8iup3K2yZdloDjI2FFJShDeufZmX2G
GujxeiTQ0ViCdi9OveQ1HTsEOht2Ry+F3oyeWKt9GXZ1+Bvl02kgu+4VOYq1
oVc61l9TR0fPeYcpImI5es0uNKpMaCLsqMxBJ2AFhsLvFXk4a6H9quBcDVcf
r3hf/ww+qA3W2FCXB8cQS6urlA/U62DWwD+hQtMIl4/7Nvup6qI0JXHV8zcM
0J7qjxs6r8CVzNBwkdQYLS+8VF6k66Hzn3B37w4mhP43Uvzr9LEoMnPlnWcs
CMqTPvfQDBHlU1Cc+ISNs47O0w6+KyEIjueKJRzc3KQdGH7GCIyk2EqUmMBI
f1/1uV4G/B54UC45puDfDnNyO2WMnv3qR8QxZsg6UhBCspnwtPz46zGROU6W
Hk81amaCp1o8es/bAqLcGd+JYBaUvkayRNstMd/HNa9VY4MRaK10yt0Kd1t/
rEuoZEPcX/dJ0dYa+2I1VFnuHKyMEXVNWXJRnXLC49E4B/KWk41u2jaY3ZYG
zywTWAiEexT+tUFY/dGFFo4pNqVOz9hN8HAs274KLaYQRtq07Q4nkMKIZf4c
YoYStuj83x8I8DTjTs6qmcNAemmvXqAtmh8qX0KpOX4LWash/8IWOcsy46Nd
LbDuYwRxTWCHuSetW68NWUAlKWPndIMd/BwKex8kW6LZ2H5WydUe/urmuzos
rSCJ2x7ddN8ep5JLK/54boXHbwMmHYlVKL9TVdGw3xpdW2bGhBWrINp88noZ
nQtGR+L4RtZqcMRvtx6RcJGhGtfUnbcayhdtnlIbbDDqIW9gqkni9ITj6q/D
Nkgvij7MTiGhpNrpJU7h4XqTXYBFGonuArO/vNJ5ePxpzI2XQaLcNP6QSiYP
cu6hRk6nSWz5zvBsRDYPsVMBzdvySVw8FtTEL+Rhr6cbI/kXEtypUce2Sh7W
yxu09j8hsWNA2XjyNQ+7rLtvDz4lYXLI50ZJHw9HvfOvjDSTmJErd/Z9x8Pd
ClrMzDMSRUYCn7pBHux8FZn0ThJSn7zcjG8fjG/JYqhBEmuF2QpnFxFw6Svb
vUFKooRX871UkYC/qvAHj2ES9Ol32a6LCVwIfM/0HiUxkGLP+KxCgLa0qy1y
ikSauNPJR4OANT+vKmqGxHjoQvJNGgH3oK1XE76Q8LEzb1HTJJBa3RqbOk/C
+mH8zlotAtcG0oOy5PjIT79arKtDoEFj4+ZcBT4WPFsHDywn0L9mkcMFRT6E
up+5LboE5kPqWT8t5qOjzzCarUfgP6lyEmo=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx3lYzHkAx/H6RcuEFElKc3TOqNFM3348Yn8fFa1jskW7PW2PVJqxGhSV
JLvsVs6eEKKLEXK062rK0YaHNDRlOkxpDSUkOUrzRGmatX+8n9fz5kZvCIml
TExMfvjW/+aPXbCLK6dw032o3sTxAdPhH57gvZWCVZ1kFdvyIZM2dFU6cS+F
arpb+WFcLWN7eXzE+zwKSSfSLapYauaKTBb88DwFJxYnKmtMHVPK1LcZblK4
tzvrc7V9PVNi67NaVEchYezXrBHhI6aghtp89COFmFFxuorzGibTrahASsxw
1Wwhi9/QyIR3NXdRVWYIoYZjLBxbGErm95tvwyjsN8psNRXPmRDp9Auln80x
1sC+VZr0hlmZvqNxzVcWCueE/R3kp2cG+TXC928noDGjU/ozd5gpzxEEWhy1
QsRto/XjUAouJ1W6cUcmwVfni9Zgc/z+lDXQXmWDD8G347cXs6Bo+8f9mM4W
4iBXbW/7BGx5E+hX1WKHPlKYXrjWCnN5yTrlsD3K1teyD2dPgjJua+Q0w3R4
XtMoBrNtsC/+4GX3yRzs90w97XXTFrys4yh35qJSeujukqd2yBFN9R/i8VB0
MUPV1GqPoZ7ozBLaCXJn+2VCE0fMFdrNs5jtjJRm/2epphxEN35nGkVcUJQi
PqkxcLBtn2o0Z6Errov7z2Rb8rCpXr/t8AI3XExks0dbOiHStZ9ODHdHvnp6
a6eTM2a28w0Ba/mIy1xRVObtgidcNa2WCWCjGmjxFbliyxZcrkydASU7LsQj
wA36MM7xmK0e8DIuRlOAO5bnzc4bTvZENmJ85eCjpI+nHdkpRGeuZPP6YAG0
mpSMisyZsN5c7Or24wwYojU35BIv0PLaKYtWe2AbN+9dWP23716ZypV64uNE
E5eqpSJMUwl6eqKFiLB4ZGh5LIK+UlXATpqJ8gfLJ9aFitHs0N2ePscLFjnz
7ya3i8F/rc0RVnshJKs27dgab8S3r5IES0TIXGIRn9vljVNFJ7BMLYJycpnZ
4gSCJtmiZtOfxGhUWDe09BH06ksU2VoxOiLHn362wQfGKyeTjqzwxlv3BLu8
Lz4Yk2b+NljnjQ7lnhqvFBrGMZyjbyIIgmL1aWtTaciv7ZbwIgkqJ68Un0qj
0SbrpyKiCHI3iQptd9BQ3r+/7lEsgUTUunFkN4249HX+5esJrpe6OKrzabQY
b3z4czvBgeLbibJbNC4OhC5gnyIYCREIFHdoOJy5NRR2hkBOHXredpfGnlD+
pYNnCQKjZIuDVDRiy4anmf9FYHCcwPFpoGG/sbj3nZLg17xfaqlOGjvf9+bf
qCHQLqrePvcVDX1BeLD+AUHAoJBO7qIRvfSeuVBNwA6jFN09NOZdyE1QaAge
25xL1uhp9K/5PnDXEwK/amsP1mcaq6aeHb7zL8GlxLQO/0Ea9TVWV77qCPY2
LVtaYaBxzvWVw4YXBF/+uG7aZ6QxRRvUePYlgVTsVCGgZiE949rOF68Jmjv2
yVePmoVPhDfPoZtg/oEBbpH5LES+3PsptIfgPw4O/eg=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 16.11809565095832}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      16.11809565095832}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIGD07KAZSa1fA4PutZ3TNNH8MU/HOr6
6IDgt+ytYpichuBLrZwkuK0TwVf8L7VBYw2CrxZhcqDtIoIfen5tdtoXBL/J
c0eHoZQhnK+gZ2zsY4/gPzfgq3yRiOCvNasyKGhH8OdEuTVXrkLw/7xoSr50
BsGPqgrYKvYJwX+kWbfojogRnJ95x4axzwrBT/iZ/bYvHsFvNPldItiE4C8o
ks6rX47gvzw3myn/FIJvoLeWw+sDgv/iu96cElFjOP/kfYHTChYI/spTzdk7
YhH8TZfDll9sQPB13GcVWC1G8JfszVvddwLBdwta3JjyGsF//jLjpKqgCZz/
4/W8eWZmCL4xjyn/yQgEP0c/5qNbHYJ/vuBxnttCBH+RzO3KqYcR/JLTyd/O
v0Dw82f48PVwmyLCM+PYdGNDBL8nbMGemBAEX2H9q7yrZQj+Jq5jkyznIPh5
LYxB8vsRfA3Gc00fniD4wS+4HAW5zOD85W+Xz9qsg+D/+no11TEIwS+XSTkT
UIrgp6xNOrB+OoIf4PhJ9dceBD/180O1Y/cRfNeJk9WNPiP4qvquGvPYzOF8
ALi+R/s=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9H8BLisxVA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDlvNPGVYFCh540LW+Y5o+gi/+4VDX
RwcEv2VvFcPkNARfauUkwW2dCL7if6kNGmsQfLUIkwNtFxH80PNrs9O+IPhN
njs6DKUM4XwFPWNjH3sE/7kBX+WLRAR/rVmVQUE7gj8nyq25chWC/+dFU/Kl
Mwh+VFXAVrFPCP4jzbpFd0SM4PzMOzaMfVYIfsLP7Ld98Qh+o8nvEsEmBH9B
kXRe/XIE/+W52Uz5pxB8A721HF4fEPwX3/XmlIgaw/kn7wucVrBA8Feeas7e
EYvgb7octvxiA4Kv4z6rwGoxgr9kb97qvhMIvlvQ4saU1wj+85cZJ1UFTeD8
H6/nzTMzQ/CNeUz5T0Yg+Dn6MR/d6hD88wWP89wWIviLZG5XTj2M4JecTv52
/gWCnz/Dh6+H2xQRnhnHphsbIvg9YQv2xIQg+ArrX+VdLUPwN3Edm2Q5B8HP
a2EMkt+P4Gswnmv68ATBD37B5SjIZQbnL3+7fNZmHQT/19erqY5BCH65TMqZ
gFIEP2Vt0oH10xH8AMdPqr/2IPipnx+qHbuP4LtOnKxu9BnBV9V31ZjHZg7n
AwAqUY2n
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Hyc074pZAEUhYFvkJgb/A0wYWJQ=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVjHs0VAkAh8clxaQzacJMh4zxnMtkxrjZtppfiK1IO46tUDZbRq09paw8
RqpTeqCE0FRkl5VMu9nCzm5xy2mp5FUeKSKV0FQ2K6PGbPvHd77z/fPxInfK
thEMBuOrz/zvsyYrj/JiCIQJrXKU3Vx6wCc01iOZgNepzMK5bVxaMXU1ipVO
YKSqn8+/w6UtK83CNUoC53s8yiU3ufTvcvnXdy8RCNKnCf3UXFolbe7R/UVA
lvNgu+oKly6z9Nwquk8gxMm21Pwilz7XQOwteEsgNEi94Gkel05zKjwXJTHE
tqLRWQlxXDp06OEQUWuIZOm6wfJFXJqQe+/7ss0IZamcArNfOLQsyrpC9cEY
en2FQUe2Fb350IH26I+m0L7TaiayLGitS4NQMzIHrjZddZIzbLo6R+DPLJiL
3QtZrAvx5rTDT429s/PmwXDu7sTCBBad+sR0or92PmSXI27lFs2mi3tuOJ/p
tcScSm24feQsOvGVv3dtFwcRp1+49PxgRC+1i++t+rQA3bxj70f4DLrq++QI
rs4a9611fT5+k3UZu7Irndm2SM369UKL+G2dXWYRqu15wAl1hCb4SV2OyMpn
ys4OJvqupPySCunUaGRaGcVHhONGlfW/z6RLhZxlTC97SEv70lWHx6SR7TMN
tkgcsOvv4IrQaK00JaNxhq2fI0rvqaJdPjKwp3k85fRKJygebFqlnzT6/HlP
xYU6w9VjvVtSgAkW9bvofHe4IIYr9ruRboZHvCaqSS7A8axNFhqahcREVF5P
InFX6sdsfmmO8Q22Rd8lu4KenjG04BUbwUov5ad4N+w7QPUGPrVA2Zhd5/QR
IRzdmSEyAw46WxMO16QtwqE31Vfrp7nQRbb+GRPojqZu49yZTtZI4Slfb2j+
3O1uYX8IFuIti+FQGyDC6sbIQsdsW4QzW3RdHSLY32CsCy3hofpOMOt+iBjd
X5j+6FtiB2bOivr4fjEONr3oyVfzIcu8pzgT7QHWTW1g7x17pK1h7sof8kDC
skTJowYHVLGvGa6OlaCz5W7Y8seOaC82b+sak4A1cmRi4xMnDESYlfbt9IQw
KqVQ3u2MEedYjnLSE5j0PdI37IKBquMN7gkUhOYJg8xhAdZuG1fsSKIwK3bN
2lSNANfZm8UlCgrPW2zU/4wJkL9HdN7yAAVl5u0Tj6YECBR1754+RsHYZN6S
stkk1CoHm6azFPr0l7O83Umc+pmOk9dROKEZXJa4l8S0TCAovkkhOqDm4utk
EjFE7tOeegq+FcfnfbufhP8W+eq1jRSmokXDfsdI6Gzm2Hq2UYh6vi+XfZbE
dmXYPWKQwvLHnNHfakl0rrq9f+kLClZLNCH8ehK+WiEVP0RhvICm8xpILNxA
FA+PUrj0jTwvpZVEx/zy+NZxChbt11aseUbC+7a5q+kHCu/cj6pqX5K4EqcY
8NFSaDoZZikeJZH+ICigRkfhYCChsRonMXlQbTCmpxCu6lifMUkiSsyvERCL
4cUsv6X/ROLhQEbMVqPFYO9QuO0xcMWKUxO8QuPFeNMYVPByhiv+A/AYBbg=

         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -11.512925464970229`}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-11.512925464970229`, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-11.512925464970229`, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.710507724786685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nucleonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon", ",", "protonpauli", ",", "proton", ",", "nucleon", ",", 
    "elasticnucleon"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nucleonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon2", ",", "protonpauli2", ",", "proton2", ",", "nucleon2", 
    ",", "elasticnucleon2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.704513803952091*^9, 3.7045138230540257`*^9}, {
   3.704513948536606*^9, 3.704513948814498*^9}, {3.704653721000185*^9, 
   3.70465372112542*^9}, {3.705885699054138*^9, 3.705885718124003*^9}, {
   3.706591220601418*^9, 3.706591220745357*^9}, {3.707578161324291*^9, 
   3.707578163393965*^9}, {3.707578739435869*^9, 3.707578739881011*^9}, {
   3.70777326604653*^9, 3.707773268884601*^9}, {3.7077749261809998`*^9, 
   3.707774950189661*^9}, 3.707775158698888*^9, {3.708288718620987*^9, 
   3.708288719939405*^9}, {3.710507740401231*^9, 3.710507750424079*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 16.11809565095832}, {
      16.11809532201759, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9a2x3u4iFqgw29G0hfbSs8Pql0X/5/8C13VYug==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4UjY66x3YUQLSD/pmB
7Xw/Qfdr+wJ+FEAxmtOHQu2MP21hSTw+hRRAcCW+/iLtnD/FNQS+tJMUQA9r
MzoT7aw/dt55waGwFEDfDe5XC+28P9cvZch76hRAR1/LZgftzD+a0jvWL14V
QPsHOm4F7dw/Hxjp8ZdFFkC+m7LDcyTuPxjLexNWOxhADw3VxjJk9j/jurpM
1A8aQBSqRqDngPY/JSIXgwEXGkAaR7h5nJ32P2aJc7kuHhpAJIGbLAbX9j/p
VywmiSwaQDj1YZLZSfc/7vSd/z1JGkBi3e5dgC/4P/gugbKnghpAta0I9c36
+T8No0cYe/UaQLpKes6CF/o/TgqkTqj8GkDA5+unNzT6P5BxAIXVAxtAyiHP
WqFt+j8SQLnxLxIbQN6VlcB04Po/F90qy+QuG0AIfiKMG8b7PyIXDn5OaBtA
W048I2mR/T82i9TjIdsbQOBtUduMsP0/GNPZ0eriG0BkjWaTsM/9P/ka37+z
6htAbMyQA/gN/j+7qumbRfobQHxK5eOGiv4/P8r+U2kZHECcRo6kpIP/P0cJ
KcSwVxxAIGajXMii/z8oUS6yeV8cQKSFuBTswf8/CZkzoEJnHEBWYnHCGQAA
QMsoPnzUdhxAXqGbMmE+AEBPSFM0+JUcQG4f8BLwugBAV4d9pD/UHEAwr/ru
gcoAQDjPgpII3BxA8j4FyxPaAEAZF4iA0eMcQHZeGoM3+QBA26aSXGPzHEB+
nUTzfjcBQF/GpxSHEh1AQC1PzxBHAUBADq0CUBodQAK9WauiVgFAIVay8Bgi
HUCG3G5jxnUBQOPlvMyqMR1AjhuZ0w20AUBnBdKEzlAdQFCro6+fwwFASE3X
cpdYHUASO66LMdMBQCmV3GBgYB1AllrDQ1XyAUDrJOc88m8dQFjqzR/nAQJA
zGzsKrt3HUAaetj7eBECQK208RiEfx1Anpnts5wwAkBvRPz0FY8dQGAp+I8u
QAJAUIwB496WHUAiuQJswE8CQDHUBtGnnh1A5EgNSFJfAkASHAy/cKYdQLY0
Fa3/agJA+xGQcUesHUApNWJW
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 9.210340371976184}, {
      16.11809532201759, 9.210340371976184}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
u8LHnA5DDEWrd2f+oq2fPmk776RD/98TgXpnepAMhWdLzh469JQ9V7tI9qAI
G71VB2zo0Jk60PGJ3ovWNL4eZ7OlQ6uru6XTtV6k/rjluvleOnz76yQf/rgP
Uc7nM/Ps6PClLL7xS28fMvuj+snUng7Vqc3R4uv70Zz6pupm7DLXvTOZb/tR
Do/w0KQDHfL/Wn7+XjOAPrHi/3IdoENeWdRFKaFBJGRkbX0FOze1StfNbhAZ
sG1x43Ciw3NX40dzHYPo+sCezHnspL9bTsnNDqG9hTvzyp3pYOgXcz3vxgiS
q5F7tHiYDgaHdDwcc0fQ9i6NGocjdNhqXWdEbRhBNfHjqm+w9bUY86aSo2ig
cV2ihysd9Majj7SmjqLt2y8pFLnRgdWhCv9VjqJmKeUsXnc66Hz/xFQaGEVC
wYdS9mNr5nDW+miMIeWJrb1T2Kp+YRvZCscQ4Rr1n+gxOqgcWi38tHUMsZ3P
43fEVrYuGbakjqM3xz/rPcRW1KKmxBqPo2GHZm85DzrIjgfzqX4dR1IOLbwi
nnSQ7pDoqx0fR0N/T3Huwpb6nv/xpMgEOv7ubcUlbGbOTCDpMIHePLZMm8IW
9PPv3P13AvVHpXt+9KKDpXc+xZZjEpl7hq2bwL7kQZGyU5lExDPG71XH8Xo/
FGXjdHwSpY//XH8Wu2/P4zKPqUlk5e9Vr+BNBwWrvj/HxaZQ64VHdyywD1qo
L/tsnEJrfSeO+GP/MCrUPX1uCklbuxqS2B9YdWmhK6bRQpedtekJOixqMksj
lKbR5tzi4WPYeusP/o40nUYntB6/isR+vmZA/MbVaSS360xlOfZ9MfqVeJEZ
5EO55aTnQ4d6IdMniXo4VzT7xezG5he4XpJsP4O0K1O4PbHDOSUX0hNmkJLD
WHEctu+cltdrxVk01mgQNYn9bCrw8tvts+jckhh1pS9e32NkSuGxWVTbP10u
hX2g36z1w/NZ1Pxpz55t2Pe6b8yV1uLP285J2WDXdTSIVI7Nosn1M1tdsU1/
Hdr5hTWH7H43JYZjhzWme3zbN4c2Kd5qu4NdXDccUX9mDlX93nnhMTbrc1Bx
c9EcqnURHCaxfSrf/2ptn0P2Bx8VV2NnlrLP/ibmkeFVo/lGbLmiWxo9xvNI
XN4/exjbMb/Jot99Hh1VQZpz2DGvZY4NRc6jwO54ObofHb5mHwkfzZxHEteZ
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
D/e4uTY=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx31QkwUAx/ExFYslBzjkTRkbwsbkbex5Huyg9uPFCBWVcSJvB0jKm1wq
eEtklCiOgmkiKTkCw1LC4OTFbUEMMiRNTWHC8KXZpokIkU53COhG9sf3Pvdl
Z+0Ub6fTaLTIN/1v3dtrPmcX0JE31uf/cYpBZIxK2S0soePTm8wh5QmDSDrX
me1QRcdUc8lZP51B5NK+JG1KQUdS+YOSemejqCMnJ/7qOToupcfGO242isTZ
K35seWmL0y0OaXHRJlF6eZk295UdusdvnxtYNyua9bscODVhjxm3DkHOcRpU
NfwYxteO2OGC6qN3F8Ln9BX9OyeWIpaQ9tbo3sJnf9pNG3qdYfmB9jSMtwSN
dzW8k3oXfCsW8nUdDigej4nsHXVDcaYm6lWLE8I5Er3ytQfCFJP3nw8xodxR
kuFuWQHlw2eZW7TLIN91rJ3H9IJLsmLbEYsrOIdPQbWSjehjFw40e3qgRuAa
NcfhwPfemQqBxwrMTWbJmihvmDeG2csjWQgPdHuPsXolwiduaZpPeyFLu9hm
K+GDrCO/ls03sFEqv7LI6wNflH54UNbbxkHRDXPp8TVcFFWetwrbvJHh+4La
k8JDxoNWtdPASgQZ/CzR+X4I+ubv0ofDPrjDvk5dz+Hjjl6mztf6orgY7T37
VqGYfCVIfcSFOcnr1Ecl/jAz77HoYzwkKFYrXksCkJD4wr3O6IcmE0dnrQhE
U6s+sf45H7rBvYfUsiDo5ELbRNMqWLIGuwvigjFXljr9yaIAlLIV/yTdePPW
f5M3LQ7EUweaT+96Ae7ru6+6LwxCGuOmZXREgLQ8//e5jGCofk9w+GNzCFTc
9k3Lq4LBqInolxhCwDA1LPjNWQDx4WvSk7lCiCd5mvF6AWTrGLtqHwsha85t
G1seAiXzwoK1uwkoCx2jT54NgbbRaWjUREA7v9ORyxXCmLHkzP2dJIya/EcB
Z4SY4O12U8yQmJDdSH4SQMCorLwcvJeCcen44v2tBDZsN0vz91HY0B+v6TpP
oIeZHvK9lEJP4c+FL9oJ1BYJ6l3KKNQOHdFnqwjECW4XWr+gEPcl2RnXR6Cr
xcfzeh2FLruD6R5DBKq/+2VPTh+FahtPpcpMwCrm8xsvUrC2VeQ/myZQQP/q
r7v9FAoyTSz+LIGYrTlrN1yhENN3qbLeQsDiae9FDlGwSHdkltuSyFOkXqM/
pJA38xND7EpCFzuwP/wRBV0T52KVO4no2UBK8phC9Ba5ZGA5CVYSvfHJJAWW
KsO4mk1ixLlZMmimMFJkq2bxSUQOOPnbvaQQ6b2rINmfRNseqTFqlkKb9g67
JpBE1a2N69UWClWCVrmtkMTMgS4b0zyFGcOySJAkskO81Xx6KLKP7n9ZHEpi
2Cgv2LYwFMOiiZbOd0lEVE+zG2xDEfE0IWsqjMR/2cfU8g==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4vygV8C6v8v7SD/pmB
7Xw/fiGQeB6O/L8xmtOHQu2MP814GnUxcfy/cCW+/iLtnD9uJy9uVzf8vw9r
MzoT7aw/qYRYYKPD+7/fDe5XC+28PyU/q0Q73Pq/R1/LZgftzD8ZtFANaw35
v/sHOm4F7dw/Ap6bnspv9b++m7LDcyTuP0ekoTCkMeu/Dw3VxjJk9j/PS1TN
ZBvZvxSqRqDngPY/t9eNZ5Go2L8aR7h5nJ32P6FjxwG+Ndi/JIGbLAbX9j95
ezo2F1DXvzj1YZLZSfc/Jqsgn8mE1b9i3e5dgC/4P4IK7XAu7tG/ta0I9c36
+T9lkgsp8IHFv7pKes6CF/o/Qqp+XUmcxL/A5+unNzT6PxbC8ZGitsO/yiHP
WqFt+j/E8df6VOvBv96VlcB04Po/QKJImXOpvL8IfiKMG8b7PzU/9MANnqy/
W048I2mR/T8Xy0UipcusP+BtUduMsP0/1910Eg5YsD9kjWaTsM/9PyzWxpNJ
SrI/bMyQA/gN/j+dxmqWwC62P3xK5eOGiv4/p6eym673vT+cRo6kpIP/P9A0
IVPFxMY/IGajXMii/z/vMMoT473HP6SFuBTswf8/Di1z1AC3yD9WYnHCGQAA
QE4lxVU8qco/XqGbMmE+AEDRFWlYs43OP24f8BLwugBAaXvYrlAr0z8wr/ru
gcoAQHn5LI/fp9M/8j4FyxPaAECLd4FvbiTUP3ZeGoM3+QBAqHMqMIwd1T9+
nUTzfjcBQOhrfLHHD9c/QC1PzxBHAUD66dCRVozXPwK9WauiVgFACmglcuUI
2D+G3G5jxnUBQChkzjIDAtk/jhuZ0w20AUBoXCC0PvTaP1Cro6+fwwFAdNp0
lM1w2z8SO66LMdMBQIdYyXRc7ds/llrDQ1XyAUCpVHI1eubcP1jqzR/nAQJA
udLGFQlj3T8aetj7eBECQMVQG/aX390/npnts5wwAkDpTMS2tdjeP2Ap+I8u
QAJA98oYl0RV3z8iuQJswE8CQAhJbXfT0d8/5EgNSFJfAkCN4+ArMSfgP7Y0
Fa3/agJA05IAwOZV4D8MrpEP
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -9.210340371976184}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-9.210340371976184, 9.210340371976184}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {9.210340371976184, 9.210340371976184}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-9.210340371976184, 
      9.210340371976184}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.710508095201174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pionall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion", ",", "pionpauli", ",", "pion", ",", "meson", ",", 
    "elasticmeson"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pionall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion2", ",", "pionpauli2", ",", "pion2", ",", "meson2", ",", 
    "elasticmeson2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.707774953653801*^9, 3.707774970470236*^9}, 
   3.707775160738758*^9, {3.708288762336705*^9, 3.708288763886136*^9}, {
   3.710500387190267*^9, 3.710500388107522*^9}, {3.710501409448793*^9, 
   3.710501411172181*^9}, {3.71050778547287*^9, 3.710507795473349*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 20.72326583694641}, {
      16.11809532201759, 20.72326583694641}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
//LN/WHOF5g0/tevE7UincSM8/8BSpAhfA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
bPwvv3HcrMId+sb/9P0PnVusHA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz6PUyZ5bg0MQLSD/pmB
7Xw/6Cfh+uQbDEAxmtOHQu2MP0D8m3xbKgxAcCW+/iLtnD/wpBGASEcMQA9r
MzoT7aw/Uvb8hiKBDEDfDe5XC+28PxWZ05TW9AxAR1/LZgftzD+a3oCwPtwN
QPsHOm4F7dw/pWnb5w6rD0C+m7LDcyTuP8tngJVFyxFADw3VxjJk9j+WV7/O
w58TQBSqRqDngPY/2L4bBfGmE0AaR7h5nJ32PxomeDserhNAJIGbLAbX9j+c
9DCoeLwTQDj1YZLZSfc/oZGigS3ZE0Bi3e5dgC/4P6zLhTSXEhRAta0I9c36
+T/AP0yaaoUUQLpKes6CF/o/Aaeo0JeMFEDA5+unNzT6P0MOBQfFkxRAyiHP
WqFt+j/F3L1zH6IUQN6VlcB04Po/ynkvTdS+FEAIfiKMG8b7P9WzEgA++BRA
W048I2mR/T/qJ9llEWsVQOBtUduMsP0/y2/eU9pyFUBkjWaTsM/9P6y340Gj
ehVAbMyQA/gN/j9uR+4dNYoVQHxK5eOGiv4/8mYD1lipFUCcRo6kpIP/P/ql
LUag5xVAIGajXMii/z/b7TI0ae8VQKSFuBTswf8/vDU4IjL3FUBWYnHCGQAA
QH7FQv7DBhZAXqGbMmE+AEAC5Ve25yUWQG4f8BLwugBACiSCJi9kFkAwr/ru
gcoAQOtrhxT4axZA8j4FyxPaAEDMs4wCwXMWQHZeGoM3+QBAjkOX3lKDFkB+
nUTzfjcBQBJjrJZ2ohZAQC1PzxBHAUDzqrGEP6oWQAK9WauiVgFA1PK2cgiy
FkCG3G5jxnUBQJaCwU6awRZAjhuZ0w20AUAaotYGvuAWQFCro6+fwwFA++nb
9IboFkASO66LMdMBQNwx4eJP8BZAllrDQ1XyAUCeweu+4f8WQFjqzR/nAQJA
fwnxrKoHF0Aaetj7eBECQGBR9ppzDxdAnpnts5wwAkAi4QB3BR8XQGAp+I8u
QAJAAykGZc4mF0AiuQJswE8CQORwC1OXLhdA5EgNSFJfAkDFuBBBYDYXQLY0
Fa3/agJArq6U8zY8F0DJ1GtS
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      20.72326583694641}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {20.72326583694641, 20.72326583694641}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 20.72326583694641}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707775161205503*^9, 3.708288764403833*^9, 
  3.708289255457758*^9, 3.7082892968292437`*^9, 3.708292244979699*^9, 
  3.708344025227751*^9, 3.7103508964247837`*^9, 3.710500107105405*^9, 
  3.710500388661186*^9, 3.710501170077609*^9, 3.710501339207707*^9, 
  3.710501411887267*^9, 3.710501564921658*^9, 3.710506830697893*^9, 
  3.710507795969468*^9, 3.710508126060598*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 9.210340371976184}, {
      16.11809532201759, 9.210340371976184}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF13c8ld8fAHCee8vmunZRCAkJudfu+aRBVrJSRJHxtRIyUoqMsiqitFMh
aSgr5NEgJFkppZARZe/td3q9ev2ef3i9X5/POc85554p5XTEwgVjYWExRX/+
/jeMtwrM9cTKzeXyNQO+Y3D6iHdelR1W7hA1W2vdjcELi+ixdmOsfLeat7fw
HwwUxIp8eJWw8pG0z080ZjDgzljt5jnAWu4Ybszg4afA9nPq9yPaWMsbsviM
54QpcNLLtCutlrV802vXR+/FKTCkdsqxKoe1fJvmWIaEPAU+Ej/3ynqzltut
5a1K0KMA+935FN0DKF/K7kWOPgUgWrDZ0pS1PMghUzPPgAJPTXaaR2xE9btl
vQnbQ4Gk1geG7YMs5eNvD1zjPUwBm3FfrTQflnJWtm44FkWBxJZzQU8dWMrt
eiv5zM9R4N2L9Px3Zizl4r/evRdLoIDm6WbVKWWW8tcGTdahlyiweZWvVcaP
ZWJ+VdveU+kUuNdxp765bJlYt3rNtq/3KSCY2WRCubVMfORxOSP3gAJTmzV2
HHRcJoq5uUUvPaFAsekSY1XHElFxJq6ppoQCioIqzwzLlwiu4sLnhWUUuP71
kHLQ7SVC6j4MXX6FxsetQq754BJxaDfVfvM71N/weJHEzkVCR1dBp60BtTdv
1Sxr1wJxXoTz2LoeChzXVDM9U75AKCXlPE78RQGl0l13qDcXCJftjRVD/RS4
8CZ4F9u+BUJLfq1z4hAFbBtb0rg/zhPhxnUz5tMU4LQZGkzImSc8e0cq3Gcp
UNq6Qp8vFsX7fViD5ikg1an+m3/HPLE08Dg4aJkCv4eTtEVK5ghzHrcNPGxU
uO6fnXjlyhzxJN1F9Ts7FcymX/0UC5wjRCyW5u5xUuHZ0kisuOocUdpR4iXO
S4VQnt3fpDJniS5F2ebHglTgVuQ6oZQ8Q3zdI/j0lCQVyh5L1z/ynSFYTkjv
a5Oigq+atswmsxliRqS7VW0dFZq1/qtV5ZghkkMPNH6QpcINw3fiGqemibcR
vhfKFKhgXvvDt8h+mojZbj0woEgFzHzqrZb2NHHMUGlMaCMVXNHs0p2cInKF
I+1sN1FB2fXMy62eU0ThsTiFO5up0NF/lf+N4RTRWLXSMVOdCknez1y2y00R
Afolo1kMKkwFdPIYdE4SZh+EI29qUIE4gzuY7J0kfskbxVjroO/fmV+y2TZB
mDF3qVH0qcCWdz9Sat0E4eIlrFeCXFa5m3MAmyBkHSM0fbdRQXHgrlD463Gi
euesWsN2KqzUMFF6uHWcEGcfifY1oMLLXVO5x6TGCabkB3d+QyoE2N/WANZx
4u1F/7QnyJ3hE/qfyseItOAgevcuKpTWXt+3jI8R4+JZZ5VNqODfvrO9eu0Y
Ybjkz1aCrDA2cvjS8igR8Vx8/Q5TKlwW2eG7gRglXF83+ViYUcHPaTDacsso
kfghZ62FORU2zOjlZeqOEPOj1mcHLdH4cPZp+YmPEIHfWDfbWlFho47MqZCZ
YUImOp36Cpk9ujblbtAwYa1yUSvBGvV3tcSb6WNDBHBKPKLtpYLS1qN18Ywh
4vSKXZbeyGmuFa1Sk4OEn9aCTRVyQK73iHHAIEFnSF0IsUXjY1AmcdtvgKi6
+8i/eh8VrnjRNzDUBoiO9LW5YvvReCW5qteM/iEOSb4OdUf+2cZrPOH7h1iu
v1jHaofy/RyDDY/8JqQc6cvr7KlAvcnSNOLZRzT1POlTcKDCTPZKu2qlPmLa
V43pgjxYyN11Z/AX4UFf73ETuaVBdNziyC9ivaZKCo8jFR6sUBXI9+sl2LPv
O7Uj36RrXEvY3EuIjgrt5j+I5stavXWuEz1EeUI3ro98QmvXZpHAHkIhx0P3
DrKZ9yHLkJBuoj0tdsnyEBX0j7t926PdTaQkVnmGIWvEeDsrzHcRiotx05nI
kndC/L+d6CJ4ynMDZ5DHmi8m653+SZRa8bicd6JCb+fl1cJbfxImH/4TfY78
bejG3SHWn0Ra91rWFuS37NnPb53pJLaGi58Uc0a/t+7rJtaYDuLUOX/Xy8jx
u6rsvhp0EN4G3Nz5yKdt6rqesXcQOWpdcw3ITR15v94JthM1VL+XHIepEGzY
sz5+9XcilntQ4CjyIadRDb0bbcT1nVe3nkM2OrFoMLSmjbhi1VB9G1niqZC7
ufQ3YkylbvQD8muRnVmCG1qJ1MnMT5IuVHioalFUkf2FcBGI5VFHvmTsUBWo
9IXY5jzxeCey26nAvi+bPhP+Z4HhgWyeFjFzLreFOPXppEQosvbzRHadzS1E
7am5Y3HI3L8y5G8wPxGO+wTCspEnWZ5rmhU1EyOHPqi8QP6xijBc1momWnKx
/e+Qn5p9dj+k10REKtYI/UROc+8KphONhBQHPBxCjogYPvsGGon46pnSOWTr
ArYHstsbCIry4/38rlTYXpEtKl1ST6gUpFSJI6s1m55do1ZPeAf33FmPDJWd
wwyLj0RirG6fKrJE9/qPylBH/NqoekMHeY7V5/F65Q9EzKj56+3ILWvzEiTF
a4niJsl9psgX7MCEPlNNVHwv7rRH9g6JVuTqrSKsLF1anJGNLtdyUpvfEdGv
Tut7IK/Pp/9eeFVJ2Kr/t94XmdpkWz35pILY2OUXfQy5c+Rm1tCNt0S+2e+D
x5HLeHtifsW9IdwPCBaFIV9VUnTrCHlNSAQrJ0QgBxkd3dnq9orIu+/TGYVs
5V4o22hdTkAGpeAs8iHueY7UmDJiNa8QdxzyKsOYqhjnUqLA8U13PHLzGYGY
ELyYqJaV35qInEjc2uG5uogw5LaRPo9sOK9IPTCdT1jN2p77a0yj6LVZ03Mi
TZYZ9NclftvD4Uku0bt5YOBv+X77O6cOCz8hWHb5/0lAtm9+sWBQl02YSb/0
//u9euPGEMXoDMJVKT86Fnnbm99TvFvSiW1pIPu3vV7HVvZ1/7lGfDq2xfxv
fywPa/x8aJdMbCVi2P/21z+jvqgnNYr4FjRs9nc8WPhr8upaDxEOJfoyf8er
V+dz6YJlCK7cZHju73jKlXN4+NYk4LW73oT9HW+l0Sbto8cu44ZL3is8kdeF
75H8hN3GJ5nLEi7ITzm07o4a3cMl8tZXOyDrJknK8SZn4b9eJbHZIj9smE65
e/EpLvLrNexCHkvx/Jyb/ww/PPpGdyuy5v520fLWPHw2+VSdJvLbn5XX2qRe
4OJvXfLlkIdna+o5W8tx7cXztxbRfKW3RY7y/3mFP9ukZDuGzCzbQhdbfI3X
SYVn9yKfiHhmuV6qAlfMnpWoQ2bnutqy7b9qfMz9vtEVZMVBy2mj0Bocu5r1
7Ryy2UceUYuE93h6mibH3/WXkhy+72DuB7xBQ1jHHpk/Ud2nbKEeP990mmUV
Mm2bgeaNEw1439CKhxx/PbMPO7HQgFtq+LPMov2A1+lUqtZCI05XD89pQeZk
1pTlzTfjDZR13InIHH/aziaHfsLZCwtoocjst4ct/OY/4bkDbeVuyCs5hX5t
mm/B6yRYZAAZ++HI93DuCy6d8HNyAO1frMl+reeOt+Ilww57PyOzGEbddZ9r
xfXiXA6/Ql7KzdaQm/uKHzz/9fQl5PmoScc7s234thCLV0zkudQdX4xPdOAZ
cpcNPNF+enzUTE+ntANfk7JkbY48a2ybrrDQgd/NHeJhIM+weHpxnOjE848m
hSyi/XrK4wLLu9CfOKtGlFbs3/17yzd5/dBu/Ay7sVQyOg/80roTVEu68bEj
mtl+yKPjg2OS8934CvPtX/Ygj2SxvFw+3oMbMEyk+ZCH6HJ7Xh7vxZ+UP3aO
QufPn17fEM3jfbju4X44iM6rvsrHyhFEH97ncP4ZE7k7Y6DrPbUft+lJzOVG
/uHqbuZ4vh+P3y1gXXiACo29juui7/3Gjc80rGVDLu41+9BUN4A/0Z6Su4DO
z8LK+AgJwUF854aR1Y7IeRk1Gm77BvG7HmVJG5Efu+5Mn+saxIu5zmHV6Py9
06sXJDU7hM93LTTOovN6u3/qhcKLI/gAF7uPPjrP9Z0ZnvZ5I7hDsLswB/JW
y+YdrJ9H8PzEAdWP6Pzfspk+byQ+iqfkQtk+ZM3xBJcfGaO4nG8Er7sNWl/+
UdorSsdw5fRjKe7oviHgH9Bt0TuBL30aeT2yG83PI8UsNuyT+Hfnkpl7yGc9
WST2KUziF48En7ZFXnKOt3b0mcQJP7nTL9F957fVvUrPqUncy5ciegrdh14z
m7MiV07jj7yC97cbUWFRbVVFjPw0Hty5eSkGWXPTwc5Yo2mcZTLu2ybkx+sH
xC4mTuOy3t66J9H966ooNe6G8Axe+TLSjRfdz/zmNnsXyM3iY69ZWtl3UOHR
VMi5F4azeLjD+p330H2vb4y4X+oxiz8Ita7fguzwx/jH68ezuEkVi/pRdD80
anPe/ZE5h/N68bC+30oFqbJk1b6d8/iZWbMe8y1ovwsfnxRzW8TDHnPYpTLR
ehjO6GiKXsT3VihvWYWsa7//fULGIv5Jii5xA91fHzBf3WbtXcSDY6IqbqH7
bcSfROP+w0u4C4ty5BU1KjCsFe4UOS3jX7jflVsro/3y9fc4v4hlXPbEglUV
uj+nb7oYqJS+jHNmBJVrIfNyzhjf7lzGaZJeAmJK6P7W7jS/TYUFlmVtnas3
UMH0kkqG4hMWSF3e89+QDOqvUew1doIFBA3zcVPkSNbuCz11LOBkEvsmG93v
i30uh94aYoGDd3dVHZJG++uuJXMBZVaYDuUMJNai9bv0fn4uhxX6vLM/MFeh
94Wb256abAwSUzIClnmokIPXfV0swWCKq9lcHDlThHFY9QMGY3sd5DS40Xvl
HRZ0ZRgDIeupbFf0Polef/O6qzoFQvJWpOaspML+X82/MPQu8zoal/txiQJW
hM5R5kcKrPYo7axepMDuy+lz/3VQYNAgtPTVAnrfGvjyNGDoXcN2wT57jgLK
mVybb6F7uxTVKddhigKYm36YTgMVxO+GtpsNUmBhywO2Iz/ROSL9TlFqgALT
wrSL6eNUiO37Vj3ymwIDld/vcgivgKjEjq6YPgq0yIVUf96/Am7ptfZd6qJA
du8TwYDuFRC8dL5XppUCFq4SD3OmV0KOomPuCHo/1kwVXythY4PA9oLe0HIK
6MfYxteIsIGu0SNhKoHes1nJ3n0abCAyI7OHqxS9X39zqMgEs4GsvvW1iXwK
fPKeyrs2wwY3JaJ/bUTvWbOl5PvZ7OxwrbHdJDqTApWJqqkvRNkhvUdp3zf0
/i144hX0WZMdMnc/sAhF7+PU0Z9aAiHscHgfDZKuoffmsY9lsbPsALyGQyLo
fV2/wvtJGgcHhAEjVjOOAoapnLezxDig1OhipDV6j2sV7giv1OKA5FXxUZHo
vb5qtmQbdpwD8q7Y2xScpMC3E1lVIXMc0BamfcvVmwIOkeGN7vOcUFqY8GV4
FwUmro51yXFxgbt2oto9AwrE5TpPdq/igtreFwtWOyhQ9GOH6CFtFM+Vm3gI
FKBrcTrsC+GCuGE7bhUNClQMJvXvmuYCIdOTKZfXoff03nssiuPc4G3abrJl
DoPX3kL0fowHWDblp6VMY7AvMnpdJp0H5gt+bv8zgUF0rvvOdWo8YOM5yExC
86yda2P86qM8UH+Nd0VjNwZJ5fki3MM8oCfWaqj+EYPZDe+UB3/zQqxk8G2z
exgMHdrRzLrAC/iUiJ3fHQy6096ECPPwgcbeUqcrNzGo5yh/i2/ig4lbal/+
XMEgq79of5I/H8j8Xqh4noCBzYPsaI0FPti2Q134ZxAGGb6CwhkraZBt2TCu
eQyD2/FN7ip8NGhJn5hL9sMg9e0e3h2SNHj6LnjcxhuDCHWzfT76NPA8uSNM
wBn1T9BguDyaBgFe5ndP7sbASmWlvvF5Gvzay+22zhQDM5OKS58u0+Dlb9OB
OiMMtkdu0/6dRQOrNLkrGjsxUJnAowTe00DQ+/XwHj0MFGnLn2800eA5t6iu
vA4GckplCvJtNLg4fm2BqoWB+GHdet1BVP5GsHKjOgbszZqrXfn4wbjr2qWX
ShhQRqa9R0T44cSy9ZtqBQyWuArLj0vyw8h0O9t3eQwmtjFcz6vyw9PpVWvE
ZNH4P1fNLbLkh1PFvBH9EhgUJCsYcF3hh+H0m/vnaBiMcEWZUm7zw94Dpfpp
fBgoRLZbzmfyQ52u81acF4MbAZcO/inkhySe3NzbXBhEWi+FvP/MD0Uf9W8W
r8Sg7IPt6Tft/CCzV+RE8goMZnY8jy75xQ8T6a+r/akYeDLdkx9O80O3OP7d
CMPAQqQxJ06EDgrqlpOWS6wQf17p+Zm1dDh8+Lvzf4usUMkW8yJ0PR1eMmYT
ohdYQWtGp9JTgw5jPAXML3Os4OebWuuMo3hYQQU3ck7fSKOdAR2K97Op7ppl
BcnW++3Ge+lwW3y5uHWaFfbvYend5ojiMbv7NiJfqt4/oONGh2z3bXyxU6zA
Vsw3qxhEBz0vXpf9k6wAah7L607RoWtz6+26CVY4nv12hXgMHc5VKo8YIQ9d
DaFzX6aDrA57p904K8gLNItSb9FhTUpNwsgYKzjFKa9dyKDDePmlwwnI1ynn
ZCce0+FG7kkPNeRPoV2KAwV0cBtxudc+ygq8E3pq3WV0qH80LZyCbOh1RbOt
kg5zTRmVFsgR3WNbmutQf1flFooil9qb7qhtoYOFxJqh3hFWmGrONH77A/Xn
KOH9ElnFFLMo7aWD1ysV7evIHhX2tnlDdEjv/mxzBvmuXqFDzhQdqEvdlX7I
bfn8LveW6MCfZpHggSys7OV5faUAvK/uyflr84zKo5d4BWCjmbK8P3LsGqng
eGEBcM6NZo1EfpsaGha5RgCe+Arq3EBe4m2JPCEnAOukq1rKkDVjVOIClAWA
48aBlj7ko8uxF72YAsAnY6+zGvUnO6jn8uEtArDlojCbDXL3MH7TfqcA3D/z
UDsNeY371XtWZgLwM3HF525k246JbBMbATDy+tamicYzyXZ37nYHAVje+NQk
Bfl9/YNCXVcByPJvkptDpu6ilqn7CAD1ziFPN/R7bXnl8FYpUACUhbev+o4c
rPWiRiZMAIr/U91sh37fZ7kCDeLRAhB+71F+J7JsetV37lQBKLzjNsGG5gvv
ww3KT28KgGnO95B85JnnsWGWmQKws2+5zQvNr5oKk7VXiwRALStEfXaGFfLq
Hh3ReyUAWydBpg7Nzxufecs7qlF7Oy715aD569tff3D9NwEIaur5GYPm+/4x
1dyaLgE4YgP0SLQets0nsfoMCIDZoS72WLRehHms0/MWBaBTZErnOQsGpSqt
XVslBYHlkKDOcbT+MrS01XvkBUFwJ8i/RevzvP61yLOqgtDVplUgwo6Bk9UB
2Y/6gqD1reb6N04M2II7Xe1dBOGs2EDHp7/7wWn9wmVvQViQK5T2omPw9dxd
truBgvCcqP3IJYhBzjWXrP4YQSh602HiJoLWM9HfH5gtCAIbRIcS1mCgW2Wk
veq5IKiPK2b6SGIg2/Aw9mWJIAz7q521lUb7w09vReoHQVCqvXLdQA7tLyvH
vC4OC0JW2aPFi8oY9JnODT9UF4I1ni2n6gCDRhs72K0nBF2/+cZ0t2FQ4lh6
YWyHEJz/dbTz+Q507zkapqq1VwidD1vYStD+q56C+VeGCIF8wkeBjdYYnGrj
nOooE4Lx1qDeS54YBGd9arF7JwSSnjSnIB8MfANuF7Z8FAJrr1L9Q0fR+HAz
Q2o7hKDKd37RCJ0f23UPLRRiwlDUVNMZcAbtx9cLsfM7hUGnw91Q+AYGF+wO
8+nVCcN5O4+Tip8wOLt+00hhizAYZ4r81/4Fg/Dx2Xq1dmHARJ2Hr7Rh4Bd3
Pkl+RBgSq2fOi6Pz0KqkWEiQLgJJLLdOHh7HQHQ1v/gfaxFYp6Y72E+nwJ2v
L+XTvouArvzwKydrCnzBZF6G94hA9fTvSad9FKApxu7xGBSBI5wMH9cDFAgL
tTmusygCi5t1FgNdKGAvPvz+u7gofF3+tOflMQqIOEgekbYXhdFPct+bUymQ
0BmR//CrKGQ0K4j//IrugX0G+mWfxWDYF9ZquKP7s3Tg9/yF1VBBS84yuLMC
8j1DHVctSkD/0pp20RcrId43KVdeUBL0BO87bv7ABtIJt6BARgpWqrx0u1/K
DsmqotvmpKVBPVzd7f0pDpj74xSdyVwHRoqm2X5MTtBVFtPj0pSBMg/O1UlV
nODUyMZ6SF0WTonw8Jtv54KT8VUrJHfKwfybquWFIi7wr5s4mbJjPRy9HE7d
JsYNjnLjzID98qBdVlwVGcQNmzo2LG732AA5D9Y/TqvlhlapWmatmwJMtwYH
sIjwQEgI5JYeVwT2TpNfp515YMJW8pZzqBJo3zP6XZzJA5ZXNa8uBG6EuDD5
rSJ9PJA5Kt2yFKMM3Qk3Eo8p8kJLfXBUYfQmaNu7eEXXnRcWneqLvUxVwL13
no8vixdOSl0dsK1TAXHRjSltnbwwTGORLTNRBdvJS71Tonxgz/Vx8fMnVZAb
0CSELPmgoNqS9sFaDYp6HdZ1xvABV/LWN4EdakC7WjRykeADi4T3J9LcN4Pj
lkqr2gk+iDbm8r38azOI6ba8SKPTIF8wj2J0VB3UNn2t11WiQeMdesPnUXVo
VpJ1kNhGg05Hnvs/jjCAb8YwV2c/Db2PfiSx+jFAunomsBJZIezpaZkA0mY8
ET4GgaT9rlvaewQzoC+o8mKoPQ1SFWWNEo4zoP+fi4unNJ6eYMAXqyvavXY0
+LGrSrYpjAHG856pVshYa5rA1GkGGCkMfBA8QAM5d09WsTOkjaZ1h3WiSPtE
8353iEHlh+iyz5CThTpqws+RLrqXW3QvjgGTJXIq9x1p0Lb5TMa7BAbcXq5t
sHSgAcsbq0u/z5NxGQu5CJ4kBtyKeOZnfZAGhp3TR1Quof5FyCtzHaKBl2/1
ActUMv/C8lXjwCtkPC/RSyvtKln+i8SW9aXXGRCqfjryrBMNFnL4hNpvkvmS
up0YdocB04Gjo+bONNjx/tmIzF0y7rE/8ofBfQZ4PnF/WYmc2G9d65FJ+lnw
+uKEB+h71I0qn13QPZVtNvPpQwY0RGucljxMg7nUmpSmR2R8jdz1M1NPUP//
WT/f+6jYMwZcu/D8EuFKA9ftuKNuHgPqDyQVTqPysU00U8cC0o+dfmpHFKHx
9T92P9cNzZ/R5/L3i8nyU6ejhKtKyfgq2l7qnzIG6Htq6T52p8GWW/JjPK/I
9jgpz7WrvGHA9X/lY16+/2BZgX7ff+VzTG6UBL5jgF1AxnKNBw3qv/k8SKtm
wNZ/9U14wOXS9+T3ROf4o9o/MIDfMP/8oCcNdM91+WH1pA+K5h+UbWQAM2rC
vOA/GkRmRpsZNpPxLKatrmcL6RGreZHcrwyg/bOm/83xqR+k7THfTrFONN4q
jCgnHxqcvrj1o24XA7Sjtp9c602De5ICLx17kH9U5BUdoUH1k+7siF9kfGhL
wZX7/QwIrE5tzvKjAb0uJrrqDxrvf/UxD+wL+DPIAK1/5fcPKDjxjpD1hYUu
7FYdI+PpnHV6VhMMEN6hFSZzlAaVabcUg6ZI/5Y/KnZ1hvSa8xsCrsyRtpjs
rEtdINsTbXd1Q8oSAz6VPdyzKwCt31cWkckszP97aD1X+0WM+f986cQ3Wheo
TDj2VcOTM5AGNhOhlxJXMv9f/7n96sPx7GT50vKBXXGcTAj4lz8id//eOW4y
LpNwYDmGl7TtuND+aBpZf/y+urxIOlm+nIjmOyNIxidkcY9wYTIuHz/99pQo
Ew5uY0SuPI7m+/BJXxdNJtqfvxRVhtPgqjXzvbM2EwQkO9I7w2hQVzIk66TL
hNrgjcRoENqfpDNPH9zCBPq/OPOs4zcHIPNvWtVfsNtOxldIbd1pa0haM2b2
to0Raa/B3HkrE7L8bUsPG0szsj3NL6Rz95iTZpf8xmVuwQSPRc37q6PQ/I5O
djWzIu07YPzKxIbMv2dBFTe2ZUKM+kGGxQm0HxWVBu7aT+Zzrz3WYGBPGqI2
Ku10YMKK2dc/2M/RwP9PT/T2g2Q8Y8/NTn0nsv6vhTa6Ww+T9fOu4buMu5L5
+pHvRvXcSQf+PmWi60HWn22umantRfpHwQirlg9ZP13igb2GL1l+55lDhQw/
JvgeNBltSKDB8X4xunoAWf7x7kYvtUAy3pkf+04lmAl2k3NDE8novHKZOOFx
nMwvFXRQu3eC/D0U3r779T2MLH/ZX/WGSDhp6rprFnvOkO3xa6Syx0WR9XWE
+7x8G0Pmm6p+8Vs6R+YXd2yV14xnwturNlvjrqP5eOHh96OJpFNxoeSHF8h8
ynCYYU8SWZ/vzb7FNSlM2P+vPz9MLZ7bXmbCkX9xk8US96Q0sr4XObJraq+R
7ZOzP9+04iYZv8Q1exa/TZbHSpy2hKST+Uc8asef3SO/1ybGfDCQQZY3qr7l
IPeAbF9RMIfgwYdkfbLy/tVpj8h40ue2sKYnTKjx9pLme4jO35id6jzPmED9
9z0f5tP+nXlk/d96xG6dLiDLG6acsSouIttTsH2QY6KYzJeZsCE2viTzL94t
D3AjyN+/4UuX3p56Mv+/q3bvsS6yvpZdFad1e0hz6gc8S/rFhDf/8p9lXfnz
pJ9sb/dtA4mVA2R+PJuXzbohsv7y5VVnQ0ZIu7vir1LHyP5/EnoQWD9Bxk+e
+PBkcIp04MtXBw7OkvlrZHpTT86TjmvabVK4SPZ3JuIF6+gyGXdVW1eogGn8
382d8V6HqRr/r3/rxSmpmytJ/w8yKyjF
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
939u7gm7dJ5z7//673swJ/mMi/D/Afeaib8=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx31QkwUAx/ExFYslBzjkTRkbwsbkbex5Huyg9uPFCBWVcSJvB0jKm1wq
eEtklCiOgmkiKTkCw1LC4OTFbUEMMiRNTWHC8KXZpokIkU53COhG9sf3Pvdl
Z+0Ub6fTaLTIN/1v3dtrPmcX0JE31uf/cYpBZIxK2S0soePTm8wh5QmDSDrX
me1QRcdUc8lZP51B5NK+JG1KQUdS+YOSemejqCMnJ/7qOToupcfGO242isTZ
K35seWmL0y0OaXHRJlF6eZk295UdusdvnxtYNyua9bscODVhjxm3DkHOcRpU
NfwYxteO2OGC6qN3F8Ln9BX9OyeWIpaQ9tbo3sJnf9pNG3qdYfmB9jSMtwSN
dzW8k3oXfCsW8nUdDigej4nsHXVDcaYm6lWLE8I5Er3ytQfCFJP3nw8xodxR
kuFuWQHlw2eZW7TLIN91rJ3H9IJLsmLbEYsrOIdPQbWSjehjFw40e3qgRuAa
NcfhwPfemQqBxwrMTWbJmihvmDeG2csjWQgPdHuPsXolwiduaZpPeyFLu9hm
K+GDrCO/ls03sFEqv7LI6wNflH54UNbbxkHRDXPp8TVcFFWetwrbvJHh+4La
k8JDxoNWtdPASgQZ/CzR+X4I+ubv0ofDPrjDvk5dz+Hjjl6mztf6orgY7T37
VqGYfCVIfcSFOcnr1Ecl/jAz77HoYzwkKFYrXksCkJD4wr3O6IcmE0dnrQhE
U6s+sf45H7rBvYfUsiDo5ELbRNMqWLIGuwvigjFXljr9yaIAlLIV/yTdePPW
f5M3LQ7EUweaT+96Ae7ru6+6LwxCGuOmZXREgLQ8//e5jGCofk9w+GNzCFTc
9k3Lq4LBqInolxhCwDA1LPjNWQDx4WvSk7lCiCd5mvF6AWTrGLtqHwsha85t
G1seAiXzwoK1uwkoCx2jT54NgbbRaWjUREA7v9ORyxXCmLHkzP2dJIya/EcB
Z4SY4O12U8yQmJDdSH4SQMCorLwcvJeCcen44v2tBDZsN0vz91HY0B+v6TpP
oIeZHvK9lEJP4c+FL9oJ1BYJ6l3KKNQOHdFnqwjECW4XWr+gEPcl2RnXR6Cr
xcfzeh2FLruD6R5DBKq/+2VPTh+FahtPpcpMwCrm8xsvUrC2VeQ/myZQQP/q
r7v9FAoyTSz+LIGYrTlrN1yhENN3qbLeQsDiae9FDlGwSHdkltuSyFOkXqM/
pJA38xND7EpCFzuwP/wRBV0T52KVO4no2UBK8phC9Ba5ZGA5CVYSvfHJJAWW
KsO4mk1ixLlZMmimMFJkq2bxSUQOOPnbvaQQ6b2rINmfRNseqTFqlkKb9g67
JpBE1a2N69UWClWCVrmtkMTMgS4b0zyFGcOySJAkskO81Xx6KLKP7n9ZHEpi
2Cgv2LYwFMOiiZbOd0lEVE+zG2xDEfE0IWsqjMR/2cfU8g==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz6xq/m5pjULwLSD/pmB
7Xw/Wdc+ODAnC8AxmtOHQu2MPwADhLa5GAvAcCW+/iLtnD9QWg6zzPsKwA9r
MzoT7aw/7wgjrPLBCsDfDe5XC+28PyxmTJ4+TgrAR1/LZgftzD+mIJ+C1mYJ
wPsHOm4F7dw/m5VESwaYB8C+m7LDcyTuP6wvHwiKrAPADw3VxjJk9j8TUKGV
jQMAwBSqRqDngPY/IgPRUWbq/78aR7h5nJ32PxtmX3ixzf+/JIGbLAbX9j8S
LHzFR5T/vzj1YZLZSfc//re1X3Qh/79i3e5dgC/4P9TPKJTNO/6/ta0I9c36
+T+B/w79f3D8v7pKes6CF/o/fGKdI8tT/L/A5+unNzT6P3bFK0oWN/y/yiHP
WqFt+j9si0iXrP37v96VlcB04Po/VxeCMdmK+78IfiKMG8b7Py0v9WUypfq/
W048I2mR/T/aXtvO5Nn4v+BtUduMsP0/VT/GFsG6+L9kjWaTsM/9P9MfsV6d
m/i/bMyQA/gN/j/J4IbuVV34v3xK5eOGiv4/uWIyDsfg97+cRo6kpIP/P5pm
iU2p5/a/IGajXMii/z8WR3SVhcj2v6SFuBTswf8/kidf3WGp9r9WYnHCGQAA
QIroNG0aa/a/XqGbMmE+AEB6auCMi+71v24f8BLwugBAWW43zG319L8wr/ru
gcoAQNVOIhRK1vS/8j4FyxPaAEBRLw1cJrf0v3ZeGoM3+QBASfDi69549L9+
nUTzfjcBQDlyjgtQ/PO/QC1PzxBHAUC2UnlTLN3zvwK9WauiVgFAMDNkmwi+
87+G3G5jxnUBQCn0OSvBf/O/jhuZ0w20AUAZduVKMgPzv1Cro6+fwwFAllbQ
kg7k8r8SO66LMdMBQBE3u9rqxPK/llrDQ1XyAUAK+JBqo4byv1jqzR/nAQJA
hdh7sn9n8r8aetj7eBECQAK5ZvpbSPK/npnts5wwAkD6eTyKFAryv2Ap+I8u
QAJAdlon0vDq8b8iuQJswE8CQPI6EhrNy/G/5EgNSFJfAkBuG/1hqazxv7Y0
Fa3/agJAykPtl06V8b+9HZ1y
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -9.210340371976184}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-9.210340371976184, 9.210340371976184}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {9.210340371976184, 9.210340371976184}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-9.210340371976184, 
      9.210340371976184}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707775161205503*^9, 3.708288764403833*^9, 
  3.708289255457758*^9, 3.7082892968292437`*^9, 3.708292244979699*^9, 
  3.708344025227751*^9, 3.7103508964247837`*^9, 3.710500107105405*^9, 
  3.710500388661186*^9, 3.710501170077609*^9, 3.710501339207707*^9, 
  3.710501411887267*^9, 3.710501564921658*^9, 3.710506830697893*^9, 
  3.710507795969468*^9, 3.710508126471403*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton.pdf\>\"", ",", "photonall"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron.pdf\>\"", ",", 
    "electronall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion.pdf\>\"", ",", "pionall"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon.pdf\>\"", ",", 
    "nucleonall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton2.pdf\>\"", ",", 
    "photonall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron2.pdf\>\"", ",", 
    "electronall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion2.pdf\>\"", ",", "pionall2"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon2.pdf\>\"", ",", 
    "nucleonall2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70777510737917*^9, 3.707775131585671*^9}, {
  3.7105134353191557`*^9, 3.7105134551898746`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["$$$$$$$$$$$$$", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.7060593812350616`*^9, 3.706059385481599*^9}, {
  3.710502245744701*^9, 3.7105022486474657`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xhad", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", " ", "\[Sigma]inel"}]], 
       RowBox[{"Log", "[", 
        FractionBox["\[Epsilon]", "10"], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]inel", "\[Rule]", 
         RowBox[{"0.1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]el", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", "*", "\[Sigma]"}]], "*", 
       RowBox[{"Sqrt", "[", "10", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", 
         RowBox[{"1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7059417325703278`*^9, 3.705941734089673*^9}, {
  3.705942481098905*^9, 3.7059424812484827`*^9}, {3.705943959443667*^9, 
  3.705943961182448*^9}, {3.7059471483075314`*^9, 3.705947148786978*^9}, {
  3.705947207793386*^9, 3.7059472079054747`*^9}, {3.7105020479850693`*^9, 
  3.7105021791007*^9}, {3.7105035793080053`*^9, 3.7105035816738653`*^9}, {
  3.7105081398855143`*^9, 3.7105081400187187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Xhad", ",", "\[Lambda]el"}], "}"}], "/.", 
   RowBox[{"\[Epsilon]", "\[Rule]", 
    SuperscriptBox["10", "6"]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.705945716937483*^9, 3.705945755799615*^9}, {
   3.705946410532455*^9, 3.705946427577038*^9}, {3.7060325196014433`*^9, 
   3.7060325225371637`*^9}, {3.7105018300920277`*^9, 3.710501862804953*^9}, {
   3.710501914016526*^9, 3.710501914279923*^9}, 3.710501970585722*^9, {
   3.710502187533626*^9, 3.710502190284931*^9}, {3.71050222788789*^9, 
   3.7105022335907393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.1512925464970226`*^-6", " ", "Centimeter"}], ",", 
   RowBox[{"3.162277660168379`*^-8", " ", "Centimeter"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705947315261444*^9, {3.706032501127593*^9, 3.706032550030827*^9}, 
   3.70603258285816*^9, 3.706063987222834*^9, {3.710501833567007*^9, 
   3.710501863138879*^9}, {3.71050191454672*^9, 3.7105019261077623`*^9}, {
   3.7105019624907217`*^9, 3.7105019709577627`*^9}, 3.7105021905907393`*^9, {
   3.710502229253213*^9, 3.710502233935169*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Electrons and Photons", "Subsubsection",
 CellChangeTimes->{{3.706059348466249*^9, 3.70605935380217*^9}, {
  3.7060593908497257`*^9, 3.706059390969508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["Elpm", "\[Epsilon]"]], " ", "\[Epsilon]"}], "X0"], ")"}], 
    RowBox[{"-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "\[Epsilon]c", ",", "\[Epsilon]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706059448735363*^9, 3.70605945549938*^9}, {
  3.706059582918623*^9, 3.706059604588517*^9}, {3.7060599385677767`*^9, 
  3.7060599578500547`*^9}, {3.710502025387974*^9, 3.710502026025921*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["\[Epsilon]"], "-", 
       SqrtBox["\[Epsilon]c"]}], ")"}]}], 
    SqrtBox["Elpm"]], ",", 
   RowBox[{"\[Epsilon]", ">", "\[Epsilon]c"}]}], "]"}]], "Output",
 CellChangeTimes->{3.710503230070257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "X0", " ", 
       RowBox[{"(", 
        SqrtBox["\[Epsilon]"], ")"}]}], 
      SqrtBox["Elpm"]], "/.", 
     RowBox[{"{", 
      RowBox[{"Elpm", "->", 
       FractionBox[
        RowBox[{
         SuperscriptBox["me", "2"], "X0", " ", "\[Alpha]"}], 
        RowBox[{"4", "Pi"}]]}], "}"}]}], "/.", 
    RowBox[{"X0", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"4", "n", " ", 
         SuperscriptBox["Z", "2"], " ", 
         SuperscriptBox["\[Alpha]", "3"]}], 
        SuperscriptBox["me", "2"]], ")"}], 
      RowBox[{"-", "1"}]]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"me", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"Z", ">", "0"}], ",", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71050229377032*^9, 3.710502315426525*^9}, {
  3.710502366708797*^9, 3.710502408158175*^9}, {3.710502442707308*^9, 
  3.7105024651848383`*^9}, {3.710502548326982*^9, 3.7105025784284887`*^9}, {
  3.7105026593550663`*^9, 3.710502733624035*^9}, {3.7105027706367683`*^9, 
  3.7105027969248466`*^9}, {3.710502839714679*^9, 3.710502870062058*^9}, {
  3.710503249266605*^9, 3.7105032496872683`*^9}, {3.710503332245306*^9, 
  3.710503356627955*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["\[Epsilon]", "n"]]}], 
  RowBox[{"Z", " ", 
   SuperscriptBox["\[Alpha]", "2"]}]]], "Output",
 CellChangeTimes->{3.710503529556312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xem", "=", 
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"], " ", 
        SqrtBox[
         FractionBox["\[Epsilon]", "n"]]}], 
       RowBox[{"Z", " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "*", 
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], 
       ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Z", "\[Rule]", "6"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["1", "137"]}], ",", 
       RowBox[{"n", "\[Rule]", 
        RowBox[{"0.8", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "3"]}]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", 
        RowBox[{"\[Epsilon]", " ", "Mega", " ", "ElectronVolt"}]}]}], "}"}]}],
     ",", "Centimeter"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710503389615067*^9, 3.7105034464378557`*^9}, {
  3.710503565401925*^9, 3.710503575052148*^9}}],

Cell[BoxData[
 RowBox[{"2.479589668292241`*^-7", " ", "Centimeter", " ", 
  SqrtBox["\[Epsilon]"]}]], "Output",
 CellChangeTimes->{3.710503575268528*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 675},
WindowMargins->{{222, Automatic}, {-8, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 234, 4, 57, "Input"],
Cell[817, 28, 452, 10, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306, 43, 176, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[1507, 49, 1236, 35, 94, "Input"],
Cell[2746, 86, 613, 11, 50, "Message"],
Cell[3362, 99, 1721, 52, 132, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5132, 157, 175, 2, 43, "Subsubsection"],
Cell[5310, 161, 1684, 42, 134, "Input"],
Cell[6997, 205, 1171, 22, 60, "Input"],
Cell[CellGroupData[{
Cell[8193, 231, 621, 18, 82, "Input"],
Cell[8817, 251, 263, 7, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9129, 264, 694, 21, 86, "Subsubsection"],
Cell[9826, 287, 438, 11, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10301, 303, 150, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[10476, 309, 810, 17, 41, "Input"],
Cell[11289, 328, 797, 15, 50, "Message"],
Cell[12089, 345, 504, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12630, 359, 649, 15, 41, "Input"],
Cell[13282, 376, 801, 15, 50, "Message"],
Cell[14086, 393, 416, 8, 35, "Output"]
}, Open  ]],
Cell[14517, 404, 2357, 61, 190, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16911, 470, 290, 10, 59, "Subsubsection"],
Cell[CellGroupData[{
Cell[17226, 484, 569, 17, 70, "Input"],
Cell[17798, 503, 317, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18152, 515, 496, 14, 95, "Input"],
Cell[18651, 531, 209, 5, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18909, 542, 202, 3, 43, "Subsubsection"],
Cell[19114, 547, 9362, 251, 1067, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28513, 803, 123, 1, 43, "Subsubsection"],
Cell[28639, 806, 7885, 204, 877, "Input"],
Cell[CellGroupData[{
Cell[36549, 1014, 832, 17, 78, "Input"],
Cell[37384, 1033, 25347, 503, 314, "Output"],
Cell[62734, 1538, 26789, 528, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89560, 2071, 1124, 20, 120, "Input"],
Cell[90687, 2093, 43000, 850, 314, "Output"],
Cell[133690, 2945, 44346, 873, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178073, 3823, 983, 18, 99, "Input"],
Cell[179059, 3843, 40611, 777, 314, "Output"],
Cell[219673, 4622, 45458, 857, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265168, 5484, 660, 14, 57, "Input"],
Cell[265831, 5500, 44082, 834, 314, "Output"],
Cell[309916, 6336, 47443, 889, 307, "Output"]
}, Open  ]],
Cell[357374, 7228, 1488, 42, 246, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358899, 7275, 188, 2, 57, "Subsubsection"],
Cell[359090, 7279, 1633, 45, 201, "Input"],
Cell[CellGroupData[{
Cell[360748, 7328, 593, 12, 38, "Input"],
Cell[361344, 7342, 545, 10, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361938, 7358, 162, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[362125, 7364, 746, 19, 124, "Input"],
Cell[362874, 7385, 364, 11, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363275, 7401, 1471, 39, 118, "Input"],
Cell[364749, 7442, 240, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365026, 7455, 1050, 30, 182, "Input"],
Cell[366079, 7487, 153, 3, 40, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
