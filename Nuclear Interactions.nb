(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    373455,       7675]
NotebookOptionsPosition[    370095,       7559]
NotebookOutlinePosition[    370485,       7576]
CellTagsIndexPosition[    370442,       7573]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PhysicalConstants`"}]}], "Input",
 CellChangeTimes->{{3.7026599174107428`*^9, 3.702659920282866*^9}, {
  3.707578062616406*^9, 3.7075780627309227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\\
)\[NoBreak] is now obsolete. The legacy version being loaded may conflict \
with current functionality. See the Compatibility Guide for updating \
information.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707578065594265*^9, 3.7105062105315323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic Collisions in Lab Frame", "Subsubsection",
 CellChangeTimes->{{3.70439758295687*^9, 3.7043975846021852`*^9}, {
  3.7046500341470222`*^9, 3.7046500373350277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m", " ", 
        SuperscriptBox["vi", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "m", " ", 
         SuperscriptBox["vf", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], "M", " ", 
         SuperscriptBox["v", "2"]}]}]}], ",", 
      RowBox[{
       RowBox[{"m", " ", "vi"}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]}]}], "}"}], ",", "vf", ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "v"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7043956982810183`*^9, 3.70439578376477*^9}, {
  3.704395820560055*^9, 3.704395852925693*^9}, {3.704509543602092*^9, 
  3.704509563726329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(\\*RowBox[{\\\
\"Solve\\\"}]\\)\[NoBreak], so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7043958260514793`*^9, 3.704395853329617*^9}, 
   3.704509568536331*^9, 3.704571395293263*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7043958260598097`*^9, 3.7043958538832006`*^9}, 
   3.704509569081953*^9, 3.704571395829649*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second solution is physical one", "Subsubsection",
 CellChangeTimes->{{3.7043980437290154`*^9, 3.7043980559534397`*^9}, {
  3.704574584179956*^9, 3.704574588758279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efin", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "m", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "m", " ", "vi", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["vi", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["M", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["m", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "M"}], ")"}]}]], ")"}], "2"]}], "/.", 
    RowBox[{"vi", "\[Rule]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", 
       FractionBox["\[Epsilon]", "m"]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7043960422641973`*^9, 3.7043960544458313`*^9}, {
  3.704396240710936*^9, 3.704396279919651*^9}, {3.704396340045801*^9, 
  3.704396370510132*^9}, {3.704396445968672*^9, 3.704396514333053*^9}, {
  3.7043967352607117`*^9, 3.704396742762102*^9}, {3.7043968693853273`*^9, 
  3.7043968697025843`*^9}, {3.704397182522834*^9, 3.704397182658051*^9}, {
  3.704398005085311*^9, 3.7043980412580748`*^9}, {3.70439878158025*^9, 
  3.7043987979006968`*^9}, {3.704399752419772*^9, 3.70439975350599*^9}, {
  3.704509994202764*^9, 3.7045099942736397`*^9}, {3.704572323167429*^9, 
  3.704572323462879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"etransfer", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox["Efin", "\[Epsilon]"], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704396546902505*^9, 3.704396607194059*^9}, {
  3.704396761924859*^9, 3.704396782931272*^9}, {3.704396814323419*^9, 
  3.704396879598176*^9}, {3.704396967581319*^9, 3.704396984124893*^9}, {
  3.704397018870875*^9, 3.704397048373542*^9}, {3.704397080568088*^9, 
  3.7043970810537663`*^9}, {3.704398800183436*^9, 3.704398802788703*^9}, {
  3.704399755475451*^9, 3.7043997683233967`*^9}, {3.704399805605715*^9, 
  3.704399809694181*^9}, {3.70439989540063*^9, 3.704399909864231*^9}, {
  3.7044000245512333`*^9, 3.704400071471487*^9}, {3.704400135746211*^9, 
  3.704400144247656*^9}, {3.7044004096083508`*^9, 3.70440045654058*^9}, {
  3.704400519616852*^9, 3.704400542127236*^9}, {3.704400627018744*^9, 
  3.704400630721491*^9}, {3.704571410513069*^9, 3.704571411851252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{"etransfer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7044022745721273`*^9, 3.704402275170223*^9}, {
  3.7046431189752283`*^9, 3.704643136431507*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["M", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", "+", "M"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
   3.7046464293566523`*^9, 3.7046500467900877`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Proper calculation (lab frame angle not exactly isotropic, unlike CM angle) \
yields \[Zeta]= ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["M", "2"], "+", 
     SuperscriptBox["m", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]], "~", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}]],
  CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
    3.7046464293566523`*^9, 3.7046500467900877`*^9}],
 "for heavy nuclei"
}], "Subsubsection",
 CellChangeTimes->{{3.7046500515776463`*^9, 3.704650119513261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.70440410874854*^9, 3.70440411616311*^9}, 
   3.704404547012455*^9, {3.7045096674135942`*^9, 3.704509670484754*^9}, {
   3.7045123769536*^9, 3.7045123821119337`*^9}, {3.704512611686779*^9, 
   3.704512614126163*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["How many elastic collisions before lose O(1) of energy?", \
"Subsubsection",
 CellChangeTimes->{{3.705885897668036*^9, 3.7058859056366777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.5"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "100"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7058859103272743`*^9, 3.7058859324218063`*^9}, {
  3.705885976319331*^9, 3.7058859764544487`*^9}, {3.705886027126842*^9, 
  3.705886033957623*^9}, {3.705943088548449*^9, 3.7059430887606573`*^9}, {
  3.705943195355322*^9, 3.7059432031155157`*^9}, {3.705943902371518*^9, 
  3.705943902503972*^9}, {3.707845046068416*^9, 3.707845046199988*^9}, {
  3.707845185226728*^9, 3.7078451884638042`*^9}, {3.7078458212813377`*^9, 
  3.707845821374362*^9}, {3.708289196874199*^9, 3.708289201169088*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7058860342969112`*^9, {3.705943196581669*^9, 3.70594320370866*^9}, 
   3.7059439028797827`*^9, {3.707845046696259*^9, 3.707845051529893*^9}, {
   3.707845185883759*^9, 3.707845188745452*^9}, 3.70784582172502*^9, {
   3.708289169244665*^9, 3.708289201698689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "41.76187795018794`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.705885932763235*^9, {3.705885973524386*^9, 3.705885977018015*^9}, {
   3.705886027829247*^9, 3.705886034303774*^9}, {3.705943196590994*^9, 
   3.7059432037176113`*^9}, 3.705943902888917*^9, {3.707845046704797*^9, 
   3.707845051539077*^9}, {3.707845185892404*^9, 3.7078451887539253`*^9}, 
   3.707845821733531*^9, {3.70828916925389*^9, 3.708289201707345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.1"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.705886049855261*^9, 3.705886050221634*^9}, {
  3.705943107644319*^9, 3.705943116657132*^9}, {3.705943191643855*^9, 
  3.705943193162631*^9}, {3.705943472991119*^9, 3.70594347313236*^9}, {
  3.705943905592835*^9, 3.705943905655376*^9}, {3.70784505351272*^9, 
  3.7078450536885*^9}, {3.710501953729549*^9, 3.710501953840839*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.705886050718212*^9, {3.705943108367778*^9, 3.705943119066016*^9}, 
   3.7059431937456837`*^9, 3.705943473521803*^9, 3.705943905939335*^9, {
   3.7078450539696283`*^9, 3.7078450550749893`*^9}, 3.708289178506966*^9, {
   3.7105019444601927`*^9, 3.710501954261179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "14.383478270034349`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7058860507249393`*^9, {3.705943108380752*^9, 3.705943119074711*^9}, 
   3.7059431937544947`*^9, 3.705943473530431*^9, 3.7059439059484653`*^9, {
   3.707845053977713*^9, 3.7078450550841503`*^9}, 3.7082891785156183`*^9, {
   3.7105019444699907`*^9, 3.710501954269981*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dedxelasticmeson", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["50", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxelasticnucleon", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["10", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxnonelastic", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["n", "Z"], "\[Sigma]"}], ")"}]}], ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513538766163*^9, 3.7045135539076567`*^9}, 
   3.704514583862818*^9, {3.704653197664641*^9, 3.70465322775366*^9}, {
   3.7046569486914463`*^9, 3.7046569600981073`*^9}, {3.704657075972364*^9, 
   3.704657092396399*^9}, {3.704657123457366*^9, 3.7046571242309227`*^9}, 
   3.704657404385747*^9, {3.7046574439806223`*^9, 3.704657444087554*^9}, {
   3.704657726936661*^9, 3.70465772711018*^9}, {3.704658280463488*^9, 
   3.70465828562953*^9}, {3.704660621160759*^9, 3.7046606273574343`*^9}, 
   3.70466077608735*^9, {3.70588605545405*^9, 3.7058860617022257`*^9}, {
   3.705886186054516*^9, 3.705886227407016*^9}, {3.7075780760162067`*^9, 
   3.7075780830795107`*^9}, {3.708289209258444*^9, 3.708289224114139*^9}, {
   3.70834400503961*^9, 3.708344005374948*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In units of ",
 Cell[BoxData[
  FormBox[
   FractionBox["MeV", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], "cm"}], ")"}]], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.704574619732512*^9, 3.70457463963356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "4"], " ", "Barn", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", " ", "Fermi"}], ")"}], 
      RowBox[{"-", "2"}]]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "2"]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704514588859489*^9, 3.704514592946843*^9}, 
   3.704657484832375*^9}],

Cell[BoxData[
 RowBox[{"0.0025`", " ", 
  SuperscriptBox["ElectronVolt", "2"], " ", 
  SuperscriptBox["Mega", "2"]}]], "Output",
 CellChangeTimes->{
  3.704513724181877*^9, 3.704514595082625*^9, 3.704571537201365*^9, {
   3.704657485405818*^9, 3.7046574934856033`*^9}, 3.704657544678402*^9, 
   3.704658335364869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["ElectronVolt", "2"], " ", 
     SuperscriptBox["Mega", "2"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], ")"}], 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{"Mega", " ", 
     FractionBox["ElectronVolt", "Centimeter"]}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704657566969379*^9, 3.704657599499071*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5.`*^10", " ", "ElectronVolt", " ", "Mega"}], 
  "Centimeter"]], "Output",
 CellChangeTimes->{{3.7046575981931477`*^9, 3.7046575997617064`*^9}, 
   3.704658338614678*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic and Nonelastic stopping powers (\[Sigma] in barns)", \
"Subsubsection",
 CellChangeTimes->{{3.704657690998494*^9, 3.704657702060732*^9}, {
  3.705886102361073*^9, 3.7058861116458282`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.704513112032195*^9, {3.7045134498770247`*^9, 3.704513482349444*^9}, 
   3.704513579191454*^9, {3.704514413242275*^9, 3.7045144170409307`*^9}, {
   3.7046532603069563`*^9, 3.704653260443033*^9}, 3.704657552055846*^9, {
   3.704657744526149*^9, 3.7046577454312477`*^9}, 3.704658448553891*^9, 
   3.7048353739347363`*^9, 3.705884750609273*^9, {3.705942322879837*^9, 
   3.705942322988016*^9}, {3.7075780918725777`*^9, 3.707578100560158*^9}, {
   3.707765834171659*^9, 3.707765838128194*^9}, {3.707773007648993*^9, 
   3.707773029575079*^9}, {3.708288669218328*^9, 3.708288683881666*^9}, {
   3.708292232863494*^9, 3.708292233475561*^9}, {3.710500059078541*^9, 
   3.71050008383671*^9}, 3.710501558599949*^9, {3.710507271816463*^9, 
   3.710507300759535*^9}, {3.710514739041901*^9, 3.710514739054528*^9}, {
   3.710519639820921*^9, 3.7105196398328037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canvases for stopping power plots", "Subsubsection",
 CellChangeTimes->{{3.705932188927627*^9, 3.70593219683154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"canvasphoton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasphoton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "9"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513918893631*^9, 3.7045139420762377`*^9}, {
   3.7045142304986773`*^9, 3.704514230761878*^9}, {3.704574665161747*^9, 
   3.704574687830915*^9}, {3.704833813057259*^9, 3.704833814220786*^9}, {
   3.7058853430377703`*^9, 3.705885370645385*^9}, {3.705885643600559*^9, 
   3.705885676648418*^9}, {3.707578106777104*^9, 3.707578116768587*^9}, {
   3.707764744887583*^9, 3.707764800231929*^9}, {3.707764857842807*^9, 
   3.707764873779258*^9}, {3.7077649086124487`*^9, 3.7077649627712927`*^9}, {
   3.707765222579644*^9, 3.7077652254806004`*^9}, {3.7077656542511387`*^9, 
   3.707765663814499*^9}, 3.707765752849141*^9, {3.707766356610561*^9, 
   3.7077663631847*^9}, {3.7077664759080963`*^9, 3.707766514837055*^9}, {
   3.70776655353336*^9, 3.707766575501569*^9}, {3.707769725410735*^9, 
   3.707769728402549*^9}, {3.707770810316902*^9, 3.707770812393553*^9}, {
   3.7077711602882023`*^9, 3.707771180296599*^9}, 3.707771213610237*^9, {
   3.707771280615444*^9, 3.707771287541771*^9}, 3.707771381689966*^9, {
   3.707771573369876*^9, 3.707771618427503*^9}, {3.707773409492894*^9, 
   3.707773555950324*^9}, {3.708289097445088*^9, 3.708289099987447*^9}, {
   3.710501180558084*^9, 3.71050118797084*^9}, {3.710501224676174*^9, 
   3.71050126171336*^9}, {3.7105012919076242`*^9, 3.710501322219295*^9}, {
   3.7105073702031*^9, 3.710507432411334*^9}, {3.710514981672676*^9, 
   3.710514995717244*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"photonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton", ",", "compton", ",", "photonpp", ",", "photonhad"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"photonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton2", ",", "compton2", ",", "photonpp2", ",", "photonhad2"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.70588566480058*^9, 3.7058856669276857`*^9}, {
  3.707578609739561*^9, 3.707578620794757*^9}, {3.707765933511084*^9, 
  3.707765939291894*^9}, {3.707766187762607*^9, 3.707766192966907*^9}, {
  3.707773323544589*^9, 3.7077733320633698`*^9}, {3.707774910511572*^9, 
  3.707774914940811*^9}, {3.707775144508655*^9, 3.7077751535802813`*^9}, {
  3.710501151684119*^9, 3.710501151817232*^9}, {3.710507729703883*^9, 
  3.710507729815445*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 16.11809565095832}, {
      18.420680368020108`, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Drc2KUz5yP0//He8Xg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkWs0lAkAhl1XynWkyDBmzDAzzMyH8RHWvNiNpYxq2+lmJCkyzbQnlxZb
0Ulu2zlySW2tTqM7bVdKQlbMLEo303ZjVagMpZpInLU/3vP8fc7z0tcrliUY
6OnpLZnZ/+wOvZlim18ZxMla+oFeRsHl3dMHs7VZIpFnc0lTBQWeh+7vDdEW
iVYM8IUxhynYymqcZmgPi7KjzVIrlBRYJnv722irRY+Z7TqLixT0mo9I5mgb
RAVdgV8mb1MQFtux0UTbKRp2Yuv3zLLBpIm/3Fj7VHTu5rRFQZYNGn+/+Nc2
5oiI66CiJaXPhaX5wzavDTqRVcmmwFNxtlgTFeiSVDwl8s/8aCIOm4dz80NK
3WsMsDr9iEqG+ejJDmpjiL/By2Jq2Ru2HR4FnO38FDQbCc11P/Uy7TFU27Vv
E9UC7Fi0B1AXoHsFs7n6iRUk1MrQcQMH2I/bK226KcjU2l9xn3IAqbl+xF85
F6bPNns1DVDxuNxPR2yZh6eBp6X1HY5I3qH1s5Xaoeq84S6PVid0H4squcZb
gJ4QYc30WRoYo4OaSCYVu1KaB5XLnTHpsDajxtoJtTtjor/edsapPVnCO89o
oB961WgUQsfRws0yxZAz9jZOnlQ10tEzJouQ3KWDMfa1PNCbAUN5oWNtFwPX
BEV6sgsMpKw6UJl1ywU/s/YHi3kuiIr/haesZkLK3Z3Xf9QFtOz08zjJQthC
gwhPJybW3IgUBRW7IkEisyZKmHicZP6rMs0NVbwl5/uNWRBz3/65U8Ge+a1B
HZ3DgsC0cuS6hAPxlO1ruY4F469yhmI5F/W6qZzwFFfQYj2MCyLcEXZq7ceH
o65Q9jV9MPL0gGnSiWSbeDc4pik0Oi4Pbd47Ysz63KDP/dQWPpePq+bBK678
yAYnKjHBYIKPzsoMJqWdjbDcz+Ne7wV4EhAi54ZykCjnd8bJCNAGP94Yq+Xg
pIui/NVrAtLDPnlpQi4chg5ttI/1xL11cSvPnObiwoZvLfTveSLxmaHefqo7
Qt5uIaqivDARL2T4HHTHrOz8lZ9bvNA0IY7IM/eA2tl70jjYG7sOTgyXF3qg
evvyVFWDN+Lf229aZcJDa6/0kz8hROZK1mBHBg+a6PHRxBoh9qkb/534zAPt
bta7RQwf9PwQ2q+R8ZFvul31qNQHyAmqT+rlYyRS38HVmsTx1nazujUC5B1J
3eayh4RoXmDC5TsCnFB5STl7ScQET4jr7wrQ+mE0XJBPIlNW6998XwC9iM1O
Ab+RqGshrDo1AqTrpOplZST4Ctb1F70CbBSH03KOk3BUWVjbvBMgVN+ho+8W
iamGrc/9ZhFY5/HoykA7iaJld+4HmBLYISk7OqwmZ7rx1EGzCdTXWKaNd5FY
aPP20ndmBLxWG9GtekikJiXkR1sRcL6kTRMNkBi2XS1MtCMQ9PxM3PdDM35n
r3KS7QmsNU1cHPmGxOzg+TT5AgIVsf10yQgJtuyBaQqVgKWZplOuIxHfEtW7
05mAh29pXco4iTFJzYMcOoGI9UuPZXwhka2d8/ceBoHcqx3pudMkKu3UlwuZ
BKpe5K0v0vMF/5zbmX0sAi0Wi5bsN/DFjdDcymJXAn0LDf0qjHyx+J+XpaVu
BKY3NDP++MYXT+ShBQfYBP4D2vEGkg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkpXQl
Z8PkR7FHlOJQbmwe0zWzhrXK9JNS+TFkPbLo1zX0w3ZdsY61P16P1/9PbtTO
kGjKxMRk5fv+f5nFilxuAoW6tU8C12QyMOQfnuSdSsGQO+EpL2RANXE2xuYw
hSO+651lGgbs660jnqspuBvOzGPVM/CTQrHuZi2F61pzG0MLA1rfO/eM5ym0
ZCWW8rsZqLGXbhPdpnA+opf3+SMGylupfSUvKdRbVUmvTjdHtuvJ8hiJGdQJ
H20qWmWOcF2Pjmo2Q6LH3u+EPeagFH5f+HRNwwfahzKFbgZCYhxPa98wEHP6
Yly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZyms8r89NloPCoIYpbMBhoP
uHCrbOH8TduA1XFb1F11uMjT2OHL+5aGwWY7WEyF9xpu2ENz76Jb6YA93I3W
M+qesZDyLMiv+S4LZswSbs/D+ZDxlAMN7+bjesD1C+3mbDRsT5XPMzqC0xq9
wGEaB/m7iurd5nLQlbFUc5bFBa/gFBoXcqE4GeS1XMDDUZGD/wSPh36/FvFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbHnjj6teIUrfnlQvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUXzjgjuZDzyqD0j2g
D+Oc2prqgSXxbV+/SF+EUPVi9TvlIpScHszLUQlRM8brm8wRYpRqv5ZX4Im+
zv0Hm7I9MTPpyFJuoBeMUZ2/JqzxQuX2arG40wtpXPVo2B0vcASJ29jrRHhp
Y+LcvFqEIlZP+VcdIkQwO4x3e0WYsq3aWxEmRuONUJvbn4mxsds1t6hfDObR
5VeUg2KcKbPzkW31RkhBu6o01huvi0/pI0e8kR3M3HVC5w3++ge6iHgJGub+
bLYqSYIwx9zUWXoJujVzuu6OSbC39unKimQphuTW3/65U4qs2KEPq/+WYtgt
iaV+K0WBaEWhPJVgqOFQq9d+gqzmSF/DBMHaaL0q/gDB2I42vaeR4MLcSHG1
ikDuKK6NmyI4sUdUYZ9BsFQ13W7AjMYaUf/uyTyCV0u0w1esaJzTOrNvlRFE
NIwXF7JpFFa1JCt+I5Boj416+NGYDBEINJcINJsmNTEBNBKoYw/uXSGYxYzd
UBlII2iLYtXaNoLhOJ/LtsE0jOyZHGkXQaXrwxMToTTi1JvaqUcEVlWe/m3R
NPo+vpYue0KQElL61jSWRsC4kCh1BDpTsx984mksCKM0f40QXN7c51CXSKPX
7ntlp55gPzvtRfE+Gn7X5nhYviF4fPtpVUcKjR+TVUP+4wShaZ9utFDROPz7
J6ub3jsI7ztdVaXTeJt5znTsvUPZ4YKUxkwaMWKnJgFFw8LnjfBVFo2eofyE
bdNo7Bve/JifQ2N5oYF7kkHjcenN0q15NP4DId7s3A==
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, 0.}, 
     PlotRange -> {{-0.9210339996043925, 19.3417143676245}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}, 
   3.710519856389924*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
eyZeqd6okiJiiEbWTUuVAv8HH5ydNg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkXk81YkCxSkUk+793d8lS8K1xE+2Sz+qyT0oCZFMaTEplSfLvSqkiTyU
YtJmSbJkmTRZIu8poauSLNEyRVmylHiai7FexIz3x/mcP8/5nqPpJdhxZJGE
hETogv7vr22fBCnEZlrpWU6uCu3pEf4nev5GpCiMV/dVTikjr0domvrHeRvR
Rd6hJHWiJqBHGKjzeJ4jSuPljtovZs50Cxl+ZutJUQFPtfBmfx6rW9glP+T+
g6iSx9kUdeDe+Q7hFs9G7yWil7zZFUrRfKf3wtkl6/nSog7eqfnlmqXuFcLH
N+8/O6E9xOsS9G+fOPeBx5B/X8s9PMlzpv2O//l1kLfP+Ueto1fneCc60pIK
bo3zilbYJBoULkJw1ZfU1KPfeS2RVrUcFxl8ruNH1LRI4sOG/JcTVnLoi2o/
d71WGgNlTZf+tXI5xufmtsjmyuL1Tu3qgnYmCkdD181ayWPPmuJ9Zz4zIcy8
EpjhLI/eRT9OuXxj4rXTnTzr/fIYv+dmNDbDxMTtVoUL4fJQlotOW6dCwGof
PcqulIfX457Q2t0E3jwbu2u0biFHN9O0+z2B8UT+Si8zBsLnqKaSTgIyNjFu
0rYMyLwr84nuI6A8nB53ZwcDSpHNmboTBDZubRIPHWNgY/ucfACbhZg5g/en
ixmIuewxOL2DhWWl47UNikwoi5VzyNcsZKrej/iSwERyhBTvQCsLK3PSVE1v
MsFaMtxW8ImFFOr8g/BsJuQUa1h2IhaurPMYVixh4rsZPypUjkSUu4zn1mYm
Qit2r3pOkJj/NDKT9H6B08b2EaFM4rR3e3JvBxNDrkqjd1eTCAoubj69sEu3
4OnBzk0kvBP2WhUtJeAxVTCn70SiV2Vz2wyDwMcz12+EuJHwzDYO2bKCwNt4
/zcMLxK7S6SKunUIOCu4B3gcJfHOcniroSGBxjRr2d8DSbhWf+w7ZU6gJl/R
2iaChMOrIjXSlgDMJDsvxZCo3XWj3NOBQNWjb6Ht8SQ2KKqUslwJrLdpYesl
kZjew5As/4lAWX11cVAaiQfpUi6eC79wXfOdnuSQCO6ZTpP2IHDvQ9KAfD4J
c53hwXxPAnf6fTXyykmUFHyMEXsT0BbsrByrJsEfaX6X4Usga5K3G3UkDM1r
OJv5BFKlFa58bCHxe0XR46vBBC5qCf/+YZxEdkP0JHWWgMCT7Ao0YiNxwND7
5ywCdGtF+vocNk5qR21+2k7AvEHtpNddNibVzLi7ugiYVUVsjythI2TFl1WD
vQRMcmwXtwnZCJKzExODBChBo8+pDjaOjcjmHxQTUF/SbvZQQQH+lVeZkgos
LLWYqV97QQEHfspq5zmz0JZsOWkSoIitZ6uPVVWz4HdGZKmwXwkssUqC8QLn
62znhHJDFWyKc6yWzGKDM9zf6qi9EgEmKb0OaQqYVfX4pZBYhTa7t6Wz1xRx
51yY+atOdRSf7r2y7NQK3PrV118woIGwmuWHEo8roWXU38H9jSbuGxDWYfuU
sZj/q1pZEwfdt43Z7e4qCNpzPTPsuRZcr21IznJRhfOhU4Y5Bdqg0tS06+iV
UI88WYw8HcyWq+YdMVXDvipHntVVXVhMDq89pLrQ46h8eE7IapRll5yok1CH
C/XtXoRADwaHLt/OnVaHsWzmUIW7PmSyso6PBGpA+jufI3CjcCw1dlnDkAbU
PddIxzkYYN5xINzdVxM53cIxKdM1qF7GnUjs1IRaiKB1kjJEeKtsf/xeDiSp
iVp7thEEJS8/0a840Hf2ObJo2gjRtjJFCdZa2BIzJeb+ZYxrXU1T+VVa8OEb
vTzob4KWuH9vCTLVRp6WILnvfyZQwBNCXKQN1YFUb2VPU8RKiXoMtHVQcnjj
csm3pgvcl2PJ6zqw+RZgkuvMRfGS6vwyUhdLI2N3Tz3lIiS9/Q/ZC7qo1zCb
lbY2g8XGcyFKMqtREOoWXFdpBpWk30baIlejpmv/xHoTc3C/Fwdum1iN1u3i
YZ9Cc2wOcPA7fVwP6m/CRuw4axEvavbb06+HWNnQug+JazGl02D7bY8+hhwl
VXUJGh4+bsmWLfq4kB58QuscjcnyF0NrHSjcruPu1z9Pg9139uMGJwo1Y8P2
xrE0uEybGmtnChIOvqs2xNPge1fe2LaDwsnJ/fU7kmj0sUo2HdlLwdvFXj3q
Nxrv/FJTE30p2EqqNnY/p1GiFmA3FkfhwJoP//36gkazPWU6fZHCGfekW3/W
0/jzRL/q35coPCpkhIibaOg1HPxLLoECd6+UJrOFxq2QXWmcmxQ0SkUhvK80
Lr3ijbrmU7D6dPfg5gEaBTPfO9wLKXjI+jg5DtJo0Hn04ud7FFI8ezXdh2jI
hJmnHy2lwFjW+pI/SSNcT98+soLCGovEB0FiGqluX7nnqyg4eLlm/zJD4+GZ
HLV4IYWYh40nY+ZpjL9TG0t5RiH38wWvixIWYEm0d2Y8p/B0ud22a4ssYGKQ
Upf7gkL3usWWKVIWcN61s/RuPYX5w9WcDBkL+EeyMoobKfwDjAVCuQ==
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVj2s0lAkAhvnGdCEt0orWZcZ9MHzDfKxy5s0lkXRSIdt1VqYLpyaMu6JN
YXK2ldtQrS5s97XtpDbMV62DSChpFRlplbStzFLWmLU/3vOc59dzXpZwX9hO
QktLa9Xs/mf5/IBjrFgCZYX1sVUXmbTSL0rsnkZgw6afDp+UMen0qRsxBvkE
bp0NLajNY9ImNfqb38sImI+qSntTmfQvItG6B5cIHOaXn1PvYdJXBO296jsE
crd4mD3YxKSrTfjR5EMCBUcefl+8iklXNBFJpR9me92aDFc7Jp1jf7oixoOB
64nRkTuUOnTU8JNhooGBXrmLfmOEDk2IfDOXderAnaIlUn8GHRZjfvnK5BwM
Uq+Dllpo01u/y+ra9a8urpJEQIPHlOKzYxP3/chCJP0pkco3flTcLOQE6pUa
gt0jlzUWv1LYnm3uW1C8CL7mTtwmfr3i4AvdiYGGxQjuL731SPBcUNlb71DW
ZwL+9iHxxaK/BClvAn0bekyRJjKz3O0+KVjOlvTJp5ciJ/RxfmCTRiDfm7bN
TG0OylvVEjvEgHT/DzUOxlaYtgns7PWeB/bxM7hpw8KGkjR9w4wFKCSX+E2x
2ZAaX883WGaAqXfCnGrKGlG5/kZ7hUZYzjX10fOyQb9+zUHeTmMIu+Zq7/Cw
BSe8YG7/li+RIW1mWq20w/YHXxhuzlqC+HZVRlGAPUJCd2kHHjLDNrtxKiHK
ATYz0fE6l76C64Cj2n+PI34Xd2kutFjgD1Yb1SbiQJqa/3WU0AopKaipS3WC
c5fmRnAiC6pIqzPfpjmjuuZl5VgiG+tlXrJpiQvmjE9W5ImtUT3GfjpzlIuo
4MFn0mwbPO1IPlKb44pcR69jAVm2UAs7fotd44arFtuTRUV2yGDJRiPbZ718
/LmgxB4fDLRsG0JInEhVhOiedMBmvUfqnm4Se/dtmfGpcsTNlvUGDzfyYDka
Y+1QxYFe4Yr7kgEeWjJ9c9PuOCHseGt62S53RMSHT9OtzshZrbe/ZNgdig/d
g3UtLpAb/8oIFnvAPNtel93HRVelUWfPmAciKobO+/S7QrlN/0L/Pj68F8RV
2ca5YcRBbCr7xIdfd4eZ8h83KOV5TW7JFLyFI81JiSRCd6rS96RSqDbckFmT
RKLOeCvvfDqFxXfr3d+lkCiJJ0+ZZFH42/LE6a2ZJNaQzw7M5FKo6vNMCDhK
4vYVW4u2cgpGm45YLiqb/X2OThApKIystZJcqyMxE8bhVN6lEKHJdXrTQCKW
OPmy9z6FxmvjA6y7JAJ3iIJDmyn8qN+0uqiRhNpioRW/k0J4axwrvZ3Ebtk3
rcQrCvdW3mkLGiDxNKjx0PLXFFwnbLIPD5Lw/8ylJMMUTl0o8KwfImEZSVS+
fUchWUd41u0tie7FFyUdKgrce/OSTT6S8G00ctadpFAuPuCyTkXi54R0pd9n
CvNZLwbzJkjkP14bUqumMHTw+pqZKRKfsm9rj2korHM1ZXipScTwrGs5hCcU
/dm3xBoST5TS2GgdT7gUjMZd1uZhxYkJ1uk5npD5hFu/ZvDwHyZ8/D4=
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}, 
   3.710519856805008*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"electronall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron", ",", "electronpauli", ",", "electronpauliflat", ",", 
    "electron", ",", "electronflat", ",", "electronbrem", ",", "electrondpp", 
    ",", "electronhad"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"electronall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron2", ",", "electronpauli2", ",", "electronpauliflat2", ",", 
    "electron2", ",", "electronflat2", ",", "electronbrem2", ",", 
    "electrondpp2", ",", "electronhad2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705886294227656*^9, 3.705886309689898*^9}, 
   3.705886354455186*^9, {3.7059295081654882`*^9, 3.70592952681656*^9}, {
   3.706591208668486*^9, 3.70659120946497*^9}, {3.707578151211833*^9, 
   3.707578154097561*^9}, {3.707578534107463*^9, 3.7075785360290823`*^9}, {
   3.707770599686041*^9, 3.707770620060073*^9}, {3.707773274966692*^9, 
   3.707773314613207*^9}, {3.707774917389535*^9, 3.7077749200210876`*^9}, 
   3.707775155723225*^9, {3.710500580655548*^9, 3.710500580781083*^9}, {
   3.710507723168262*^9, 3.710507723303005*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 13.815510557964274`}, {
      18.420680368020108`, 13.815510557964274`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs0lHkYB3DkloRBNMTc3pdxyTuoTqtlnlNWRthk2bOphq7URqLYMiIH
Q5HpJkVjBqWplJTr6liEyopJRK1cKnKNxp1p3z3H2feP97znc77f5/m95/fS
9obsOKCkoKAQhD//vYcXSnozLBbZEd3jUQwyBXiq/Mfjdovst3k1kSNGFNDV
8RO2cxbZh8hH2jwpFLhFtkmu9F9kk2/a3S9gUKDZupWblLrI/lI+XxFkTQHE
m7qCNrjI1nyTYPi3IwUahaUB20Vy9kQqSeDiT4HUzPDEdjUF2JwQofcthwJd
6/PWbTipCG4FlVibLhX88+tUHAXKMDKw0b4jjQpKnCvPdSLUQInpO1cho0K8
BaJsc0MDpk3Vte950UDfiaSe/nAl9F6KE5dm0yCgyufMQVcdUHF8ubOhhwZ3
FJdtuNVOgqZ8n95iKh0UO1UPurvrgbbAJvKCDx3cpIe9DLv14XmWwqHYJDpc
+8ij8X83ACvbeAV5CR2mUvoPc7sMocCa8/nrBzr89GthiF8IGTYHcpK01BmQ
W9IyUvnJCMRdncP9lgxYbifaXvfLGqgPU1Ifc2MAt7E5+FuvCahGFaYKjjCg
dtFXNdGXAn3RajFb+AxIuX3znjCcCgZP9jbczmOAw+6gBk8HGlxWCTWcqmJA
yJ4P1MIJGtQkL3yz6WBAVohKe145HXodVq7ZOMEA78a25x4nGDD3zkc5SR0B
zeLvBa7WCJQ72LXFmiBQ+eDt+JsJBH6bXbD0sUdgSrYr1OAeCqsaS8f7XBAw
dxN4fgk3gy+t5f1b/RDoHjwWGMIyhxLmln1ZRxHIXJ0f7jpgDlvkgztmoxHw
8r3QVfSACf80/8ixECCQ+oEWLw2ygE2jz2oFIgRqIvcnxdlbwtB6J3bDIwTm
b8rPJM5agsbDmi5KDQIVOs5FTo+swC+mfXykBYGwiz84809ZQ0auxJ7fg0AR
t5MUv34tRO8JLcsZw7+3TNrSOrwWuK9rnaYWELBFTo8VF9nAqHNmfNwKFGQd
TRz3oxgUbUvdumE1Cl9N02X8Yxh0B4DVedwj+7jCZ2GEB/PN3ZQiiP7nkTGZ
0ykMbB3Id/tw99mVCk/zMDhldqgqnYxCd0SMW2kM4fd/uk7K4jCw5PboeRuh
0KFIyrZNxMBkcihShudtLh1uwckYhO3XcjYwRkF6TjQpSSHyV81B2f1pGGyf
w1RP43njKrttyGXCz4TV2VnXCT+18J4yEBGuCDYWeecSLi3q25Z2G4PhKPm5
qyYoPJ65O9UowSB1b0Q0irvQMVy0vICwpF55+uxjwrleV9wXyglnX909vfEp
BkNL+7LeoeITf2HgkBAUomGKwnXqqPujWsJXDxRPj9bj96H5wjMW9yVJtNjq
JeG0MRePwCYMUto53vO4z6/TnsltIfYn/dEu7mnFYF1yf+wsBYWEp0IP07cY
eJFsSdFUFM4uC5zZ+Q4D44i4O5F4fsaVlZPeRfSjUmY8Wnvw+1jqR0qrZnQ+
EfkJw6QcjwEMzIy14BINheO7vDyThzB4sfnhPoSOQrCIPFs3ioFHwlCaKp4f
+dyTs2yCcKCVxBMmCe8/dnw2aobYF/DEIbdsHoOXS/v2zCn9PCUn8vvCT1Fk
RRb01PHBh4GCdTVHWqLE+j+XfLxv7qvMAmXx+63l+DxTTZcnU2FB71L/lsVJ
6UU1Yh5x7zS3Xc4Cb3GZZBJ3TrAT75UGYbpALD2qSTi7SJWpqcWC6ppQniuK
gmnbYZ5EmwXf1+pdKzZDIXOmSepKYkF5xkDnPJ4bGdsz+3UJZzim8+L1WSBf
6q/2n5cyDFhg39E1cgPB//9ZLrPakNivn1fD8ycT8xfrzV/LjYi+zuA5ZtYa
4vwLml95m0wJ/wvB2MmI
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDP13hGdvUVB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AOtzU8M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
YLcU8bxV/xfj/+ZO
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDhNSuleUuHA4PutZ3TNNH8MU/HOr6
6IDgt+ytYpichuBLrZwkuK0TwVf8L7VBYw2CrxZhcqDtIoIfen5tdtoXBL/J
c0eHoZQhnK+gZ2zsY4/gPzfgq3yRiOCvNasyKGhH8OdEuTVXrkLw/7xoSr50
BsGPqgrYKvYJwX+kWbfojogRnJ95x4axzwrBT/iZ/bYvHsFvNPldItiE4C8o
ks6rX47gvzw3myn/FIJvoLeWw+sDgv/iu96cElFjOP/kfYHTChYI/spTzdk7
YhH8TZfDll9sQPB13GcVWC1G8JfszVvddwLBdwta3JjyGsF//jLjpKqgCZz/
4/W8eWZmCL4xjyn/yQgEP0c/5qNbHYJ/vuBxnttCBH+RzO3KqYcR/JLTyd/O
v0Dw82f48PVwmyLCM+PYdGNDBL8nbMGemBAEX2H9q7yrZQj+Jq5jkyznIPh5
LYxB8vsRfA3Gc00fniD4wS+4HAW5zOD85W+Xz9qsg+D/+no11TEIwS+XSTkT
UIrgp6xNOrB+OoIf4PhJ9dceBD/180O1Y/cRfNeJk9WNPiP4qvquGvPYzOF8
AHfYV9M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0fk71AkAx3FESMwIyZExh9uYL+o7Qr4ftZVlG11WjodCNbmmw/3ooFxR
IVLJaps2HkZrawsdSCVXT9SGlaTsMsk4thybsO0P7+f1B7yZQaJtexTk5OQ2
f+t/29c/jNLJKHYR8vU0C0aGqN9PzF9MkiVSZRFqYeZaUsr20su0dbIsalg8
97hmjZQ6YFI7z5JdpkLp7+N6U6UULczeUUsmoSI/lPUzmR+ot+qj3mqy+1Rs
oXOlxGuY2hTYuldZ1kalLgR6NtSOULPKjpFKsl6qI/hlY0zTOFVbePPRYc4o
peWq1HpQYYqiqb9qtAuZot7oVAQ3DHyh/ATO7P05cxRtZMIjR7JA3dBdl2dV
oYBbH+lzBZEK6ExyaWR5LgbrTbBRbo8iup3K2yZdloDjI2FFJShDeufZmX2G
GujxeiTQ0ViCdi9OveQ1HTsEOht2Ry+F3oyeWKt9GXZ1+Bvl02kgu+4VOYq1
oVc61l9TR0fPeYcpImI5es0uNKpMaCLsqMxBJ2AFhsLvFXk4a6H9quBcDVcf
r3hf/ww+qA3W2FCXB8cQS6urlA/U62DWwD+hQtMIl4/7Nvup6qI0JXHV8zcM
0J7qjxs6r8CVzNBwkdQYLS+8VF6k66Hzn3B37w4mhP43Uvzr9LEoMnPlnWcs
CMqTPvfQDBHlU1Cc+ISNs47O0w6+KyEIjueKJRzc3KQdGH7GCIyk2EqUmMBI
f1/1uV4G/B54UC45puDfDnNyO2WMnv3qR8QxZsg6UhBCspnwtPz46zGROU6W
Hk81amaCp1o8es/bAqLcGd+JYBaUvkayRNstMd/HNa9VY4MRaK10yt0Kd1t/
rEuoZEPcX/dJ0dYa+2I1VFnuHKyMEXVNWXJRnXLC49E4B/KWk41u2jaY3ZYG
zywTWAiEexT+tUFY/dGFFo4pNqVOz9hN8HAs274KLaYQRtq07Q4nkMKIZf4c
YoYStuj83x8I8DTjTs6qmcNAemmvXqAtmh8qX0KpOX4LWash/8IWOcsy46Nd
LbDuYwRxTWCHuSetW68NWUAlKWPndIMd/BwKex8kW6LZ2H5WydUe/urmuzos
rSCJ2x7ddN8ep5JLK/54boXHbwMmHYlVKL9TVdGw3xpdW2bGhBWrINp88noZ
nQtGR+L4RtZqcMRvtx6RcJGhGtfUnbcayhdtnlIbbDDqIW9gqkni9ITj6q/D
Nkgvij7MTiGhpNrpJU7h4XqTXYBFGonuArO/vNJ5ePxpzI2XQaLcNP6QSiYP
cu6hRk6nSWz5zvBsRDYPsVMBzdvySVw8FtTEL+Rhr6cbI/kXEtypUce2Sh7W
yxu09j8hsWNA2XjyNQ+7rLtvDz4lYXLI50ZJHw9HvfOvjDSTmJErd/Z9x8Pd
ClrMzDMSRUYCn7pBHux8FZn0ThJSn7zcjG8fjG/JYqhBEmuF2QpnFxFw6Svb
vUFKooRX871UkYC/qvAHj2ES9Ol32a6LCVwIfM/0HiUxkGLP+KxCgLa0qy1y
ikSauNPJR4OANT+vKmqGxHjoQvJNGgH3oK1XE76Q8LEzb1HTJJBa3RqbOk/C
+mH8zlotAtcG0oOy5PjIT79arKtDoEFj4+ZcBT4WPFsHDywn0L9mkcMFRT6E
up+5LboE5kPqWT8t5qOjzzCarUfgP6lyEmo=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx3lYzHkAx/H6RcuEFElKc3TOqNFM3348Yn8fFa1jskW7PW2PVJqxGhSV
JLvsVs6eEKKLEXK062rK0YaHNDRlOkxpDSUkOUrzRGmatX+8n9fz5kZvCIml
TExMfvjW/+aPXbCLK6dw032o3sTxAdPhH57gvZWCVZ1kFdvyIZM2dFU6cS+F
arpb+WFcLWN7eXzE+zwKSSfSLapYauaKTBb88DwFJxYnKmtMHVPK1LcZblK4
tzvrc7V9PVNi67NaVEchYezXrBHhI6aghtp89COFmFFxuorzGibTrahASsxw
1Wwhi9/QyIR3NXdRVWYIoYZjLBxbGErm95tvwyjsN8psNRXPmRDp9Auln80x
1sC+VZr0hlmZvqNxzVcWCueE/R3kp2cG+TXC928noDGjU/ozd5gpzxEEWhy1
QsRto/XjUAouJ1W6cUcmwVfni9Zgc/z+lDXQXmWDD8G347cXs6Bo+8f9mM4W
4iBXbW/7BGx5E+hX1WKHPlKYXrjWCnN5yTrlsD3K1teyD2dPgjJua+Q0w3R4
XtMoBrNtsC/+4GX3yRzs90w97XXTFrys4yh35qJSeujukqd2yBFN9R/i8VB0
MUPV1GqPoZ7ozBLaCXJn+2VCE0fMFdrNs5jtjJRm/2epphxEN35nGkVcUJQi
PqkxcLBtn2o0Z6Errov7z2Rb8rCpXr/t8AI3XExks0dbOiHStZ9ODHdHvnp6
a6eTM2a28w0Ba/mIy1xRVObtgidcNa2WCWCjGmjxFbliyxZcrkydASU7LsQj
wA36MM7xmK0e8DIuRlOAO5bnzc4bTvZENmJ85eCjpI+nHdkpRGeuZPP6YAG0
mpSMisyZsN5c7Or24wwYojU35BIv0PLaKYtWe2AbN+9dWP23716ZypV64uNE
E5eqpSJMUwl6eqKFiLB4ZGh5LIK+UlXATpqJ8gfLJ9aFitHs0N2ePscLFjnz
7ya3i8F/rc0RVnshJKs27dgab8S3r5IES0TIXGIRn9vljVNFJ7BMLYJycpnZ
4gSCJtmiZtOfxGhUWDe09BH06ksU2VoxOiLHn362wQfGKyeTjqzwxlv3BLu8
Lz4Yk2b+NljnjQ7lnhqvFBrGMZyjbyIIgmL1aWtTaciv7ZbwIgkqJ68Un0qj
0SbrpyKiCHI3iQptd9BQ3r+/7lEsgUTUunFkN4249HX+5esJrpe6OKrzabQY
b3z4czvBgeLbibJbNC4OhC5gnyIYCREIFHdoOJy5NRR2hkBOHXredpfGnlD+
pYNnCQKjZIuDVDRiy4anmf9FYHCcwPFpoGG/sbj3nZLg17xfaqlOGjvf9+bf
qCHQLqrePvcVDX1BeLD+AUHAoJBO7qIRvfSeuVBNwA6jFN09NOZdyE1QaAge
25xL1uhp9K/5PnDXEwK/amsP1mcaq6aeHb7zL8GlxLQO/0Ea9TVWV77qCPY2
LVtaYaBxzvWVw4YXBF/+uG7aZ6QxRRvUePYlgVTsVCGgZiE949rOF68Jmjv2
yVePmoVPhDfPoZtg/oEBbpH5LES+3PsptIfgPw4O/eg=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {13.815510557964274`, 13.815510557964274`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, ImageSize -> 
                    {20, 10}, PlotRangePadding -> None, ImagePadding -> 
                    Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9, 3.7105198604481077`*^9, 
   3.710547789842683*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs4VPkfB3AzZ5jGJTPm5LYlt5YiZ1xql+J87KpchhZRWS2K1qVFRW1l
kG1+IWrYUInBuDVFZWy1KURuZaVZEcvkEmJdGndp7c/veTy/88f3+T6v5/3+
vv84R+dwmFsAWUZGJnrl/O+ufmEumyPmVaWGOjw+6/AJ1ztYtdwv4lWJlzYO
mlgjULjgsfdJy4Uq0bf1PtvsEFCI9vomICS8SqHydfJOJwSOjY6beyf74YcG
xvzt3BDYaaFf4fs5FneKqehiH0Sge5wdFJyWjE9Lu957+CJwmfWqv/JIJk5z
PZIUFIrAvXppt87bHFwfH0EjIhFQnz1n778swG1TP1FjohD44MrbOOIoxMlF
VUh6IgLPud1HF4+LcC+Pzi0NhQiU8eMSz8tW4/fih6eN3yHANgrYpPKqGneT
+dHUcgiBoQd7qvOuPcOnwqexXeMIaLYoztUa1eJFtOxd3ksIxH1O95Nzq8dN
Br1ucdUo4Hbw9teXspvxkKox+Sd7KXCGFnzyRWYbHhG8gRpaRYHGdVSrJ8tt
eA+vs8S6ngKquvkypX5v8F4X6FT4gwJlVpLkFIN2fLAr+7qgiwJjIW7FB0Qd
+ERNQF3VLAV8W6x6hl504a2xHzCBkSwImrgCEqcXjzQryJSkyULCZU8lrTtD
+J/RPNHgYTkICWz3qNOU4gY60BNdR4V9tLjUtd7zeIn6y7snN9KAIxdfLjX7
Bz+1f8NvFrbyINlWYLH9FAkeHYufPGSrAL7F9bLWKRSwiDsYNblDEcgOaU30
01Qw657uSFRWAu5mfYpJpjygFz7b2/QqAWrDWJNxTwlq1Hc3fZO5FvyqPWKO
2tNBrKe4m7RTGW6RkO2FHQyQNg/u5/QoA6lL7iibzQTHh9PiLgs6OIqDXdV6
UXiGUYzaztHh2nuOTvwxVcjNNXdiPKXDXPJwsI9EDYS606XBc3TYtf9+2Pdh
GiCxXSMyMWVA/sPX408HNaFnQJtiHMAAmlnud/X71oMiK/NKeRoDfJpbQ6f7
N4B8BonW38CA5/94yl303Ai1ycPcjBkGJBdl3+FHaIPn1LvtUl0VsDoU1Ohi
pQMK2vwj0S4qEPbDO+37Uzpgk5jXExepAllhsh0Fj3Wh4/s3x7dlq4B7c3uT
c6QefDdTyHxZowKKD/4ttTfWh1EOjRc6qAJP776VvpnShyyJFvUpjQlzM97H
Ve9sgl/DRi9wtjDBwDHFZSTiS/g0xC/pXPkuvaPhgWEsAzC5r7d+PIQJN9WL
I+w/GECdzEfV8wlMcPW8IhHdNQTSYfn0wmImXH6nwxUHbYYm5for/c+ZUPuz
f8Iv5lugxERjv6CfCUvZyzEXF7dA703fUvK/TKig24lsyowgSWTU16qOwslU
S7v4s8aQEcWy3mCBgsini8HdthVuyo3c7mejMPe7+HXb2Fa4p/k4ycsfBVP9
c5MPRCZg+ePkHCMahZnOFgf2TxikMm2Drl5F4aNWxkx8OAbd0v4+4zQUxo/4
8OtOEh4tNnAknyb6Q+OTMzZnMSCf0LZsXMkHzB7xz3Ew2GnTOE/NQKH3dKzj
o1gMrFfd/cR+duYXDPTqP/H3XUOhk8TIMb2IgeTL1qw7K3n77k7H0EQM1hhK
2HevoyC+lDsrTCbyV61BOcM8DKb+Fu85fAOF5nVmTvpXCdfxa3KybhCu3Ow+
p5qLgXTVFaFf5LrnE/kj0YATrwgD6o6xEe1sFMoXbs81CzEIW2yUOZCFwn3r
iFxaKWFhA2U+rpxwvmsa+/Njwjnph+a/rsRAbnUv669NeZHPMHAXmfVPrPiG
9gS77Dnh9IAH8xMNGCidL95aw0fhV2F0ntFLwrzJ3c6BLRjopgysy8xBIclC
eSH/NbGfcKYjr68Ng7yCWLJPHgr/qeQ7a73F4NmepgpHAQpxSOCC118YLH2V
N3omF4UYe5YgQ0L0o5IXnNv6MKhe7f8srl6gDxJ5pFqCwPkDBuU86cOvClA4
4e3qkvg3BqRblGHLQhRCczUW6ycw8FUM4FjnoxAy1CdApggHGgldYBYDn1X7
h59YjFog9vx+s8r/fYnY++ETee/cMpGX8AejNEgsILOVXA8Uo2Bc4yB+SGb9
Pxe+LzHwpLBALbww1a4IBUOqCmdGlgXIar9w8ylxKpV4r8/uMjClsSBph7Ax
8hYKglAbzit5wropeeKfFAnniOQMFdeygN8W29N6GwWt9mCOUJkFKVHcMu9S
FG4utIjtGSv20TWll6Cg+YW54bAK4evWGRwuSvTVfZfEeqoscOdmlGUJV/5/
nI9hjRqxjxbUcnw1iPepDQZ/LmsSffroJcOs9SxIXd27oviRs0OL8H8BK+57
og==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDxJrWTTHrRBwedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AFUpb/8=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIFDknWXzsM97AcedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AIBndEM=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
h7VnE/xuCvanP2mXyljhV8HOyzW9FP4P97rgnA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
w2KwgJ6nZAPZrB1ueV04/AMsn0je
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx39YzAcAx/Hz7RddcurOSanu6uq6um9dP76MPH36TcuZGClPcUtHu0my
hAvR0qZ7jFo40Y78mIXC1cSu72atrB8qdamHFPNcIUQr3Vxmf7yf1/PmydLj
NhAMBmPxx/73xLTIAp6CwKOyNfemLeXQA+EJGQG7CNwi7vbtjeTQSuO1VNZB
Aps9+SlHFnFobtX0tcNqArzYr4fOBHHoq3L58r8uEri3pXGzVsyhK0Jae003
CejNORcdBRz6PDcoRdJCoOfY+qe5Thy6tIHYfuwVgT7amChlcuh8z1OlqYFm
GGKJlxgG2XSCodNA6MzwofKwm0M5mybkYbsXtpvDeyThvnIOm45Lnftzxbgl
9mcMh0ZY2dNJebkdG/+1Ro5sIZlqMZOe8Gogh5/ZYp2LhLHY0ZauLhJFM4/N
xDDvzI/O+mm04HTjQ5sSe9hayDMdey3oPQ+sx/p1HCR8/zgss2AKren9VXj8
IRdi4UStRYmxbsdgdJiu2wGtr9tWZlx6UxfMz3qofe+I/fZ+bYKAv+u0X+5K
nmOaixfOXIYVTdcVbjlSJWS7QvfnwVrFit4QvqoM1e486Cq40kP+L0OKJLPD
jXw+DBNttXLmeIjxuSz/POUGlxaPrvYLH0KCSYdFzPnuOJquqB/vMYOsw2rK
+kABfBmeXdImK+QUNlq4RnmgdNBrMMbOBpmtozk/RHpiQfZXKaypLCR7vKW2
JQhhJ0zTt0js4NvvZYpI88LVE92y9OVs9PCaqWa5CJYuTvqc2FnYsQNVt3Z6
I6rVvClp62yMxruWfbHLB8GqP85VZM7BCvV89fssMYwz/intS3PC+RG+fvIA
idO6O+wnhc7Qt2V/U5Pvi7262k9Eka4wydpqFUv9UH7tsVfsGh5yeOoX8a0f
3y9L5Z7IxysWQ6CLlaBgRtjky9VuWMu8a+rukkBm3n+Fn+aO6jsrWC2f+2NW
7lCnTZoAzKLQ21n9/qDt6xes2+OBOFWT8vjGAEin9lw6e8gT+Z8ytxw1BKA6
L75YoxJCy75uFpMRCDb34k1LjRc6NHbt3SOBkErkq/inRRhInn62Lz0Iiktr
J31PeeOZMMNB/S4Iu0PcDeeu+GBA+12DXzYFxZrV4Z2XxZBuGFWm7aQQ9Yvo
cvQ1MW6xk/zLlRT43MnZN2vEOJopOcnNpXC/s/ylhhZjqeT+1slvKUR89uZ4
eocYNyoEzs0nKDhFq15bj4lx+Ay9TV5HoTnw9snQRSQm40QizW8UzhWVTNWG
klAQxY96b1PY92ZTpjCKRPR6eYy0kcL8StaSGctImJxtXYPaKZR7J40+WEdi
kzqxiXhCQcmfiMnOI6FfUr83+CmFVbnN2ucFJCImSCrLQMG/v8w1WUXCJZ7Q
DD2nMHgyaiyyhEQX56estlEKKx2KNfYXSITV2/lYj1Mgs+U2BypIVG5TDoRP
ULDuXrDdWEni4L1lsTUmCnTxQOzADRLv9t2YMvKBgvrt9ZqVOhKp/m41ImIe
suIK+I2/k+gcKFSkmM9DXFWiamEDidDDY7xTlvPgw/J9d7mJxH/GpPTY
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -11.512925464970229`}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-11.512925464970229`, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-11.512925464970229`, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9, 3.7105198604481077`*^9, 
   3.710547790313243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nucleonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon", ",", "protonpauli", ",", "proton", ",", "nucleon", ",", 
    "elasticnucleon"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nucleonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon2", ",", "protonpauli2", ",", "proton2", ",", "nucleon2", 
    ",", "elasticnucleon2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.704513803952091*^9, 3.7045138230540257`*^9}, {
   3.704513948536606*^9, 3.704513948814498*^9}, {3.704653721000185*^9, 
   3.70465372112542*^9}, {3.705885699054138*^9, 3.705885718124003*^9}, {
   3.706591220601418*^9, 3.706591220745357*^9}, {3.707578161324291*^9, 
   3.707578163393965*^9}, {3.707578739435869*^9, 3.707578739881011*^9}, {
   3.70777326604653*^9, 3.707773268884601*^9}, {3.7077749261809998`*^9, 
   3.707774950189661*^9}, 3.707775158698888*^9, {3.708288718620987*^9, 
   3.708288719939405*^9}, {3.710507740401231*^9, 3.710507750424079*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 16.11809565095832}, {
      16.11809532201759, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9a2x3u4iFqgw29G0hfbSs8Pql0X/5/8C13VYug==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4UjY66x3YUQLSD/pmB
7Xw/Qfdr+wJ+FEAxmtOHQu2MP21hSTw+hRRAcCW+/iLtnD/FNQS+tJMUQA9r
MzoT7aw/dt55waGwFEDfDe5XC+28P9cvZch76hRAR1/LZgftzD+a0jvWL14V
QPsHOm4F7dw/Hxjp8ZdFFkC+m7LDcyTuPxjLexNWOxhADw3VxjJk9j/jurpM
1A8aQBSqRqDngPY/JSIXgwEXGkAaR7h5nJ32P2aJc7kuHhpAJIGbLAbX9j/p
VywmiSwaQDj1YZLZSfc/7vSd/z1JGkBi3e5dgC/4P/gugbKnghpAta0I9c36
+T8No0cYe/UaQLpKes6CF/o/TgqkTqj8GkDA5+unNzT6P5BxAIXVAxtAyiHP
WqFt+j8SQLnxLxIbQN6VlcB04Po/F90qy+QuG0AIfiKMG8b7PyIXDn5OaBtA
W048I2mR/T82i9TjIdsbQOBtUduMsP0/GNPZ0eriG0BkjWaTsM/9P/ka37+z
6htAbMyQA/gN/j+7qumbRfobQHxK5eOGiv4/P8r+U2kZHECcRo6kpIP/P0cJ
KcSwVxxAIGajXMii/z8oUS6yeV8cQKSFuBTswf8/CZkzoEJnHEBWYnHCGQAA
QMsoPnzUdhxAXqGbMmE+AEBPSFM0+JUcQG4f8BLwugBAV4d9pD/UHEAwr/ru
gcoAQDjPgpII3BxA8j4FyxPaAEAZF4iA0eMcQHZeGoM3+QBA26aSXGPzHEB+
nUTzfjcBQF/GpxSHEh1AQC1PzxBHAUBADq0CUBodQAK9WauiVgFAIVay8Bgi
HUCG3G5jxnUBQOPlvMyqMR1AjhuZ0w20AUBnBdKEzlAdQFCro6+fwwFASE3X
cpdYHUASO66LMdMBQCmV3GBgYB1AllrDQ1XyAUDrJOc88m8dQFjqzR/nAQJA
zGzsKrt3HUAaetj7eBECQK208RiEfx1Anpnts5wwAkBvRPz0FY8dQGAp+I8u
QAJAUIwB496WHUAiuQJswE8CQDHUBtGnnh1A5EgNSFJfAkASHAy/cKYdQLY0
Fa3/agJA+xGQcUesHUApNWJW
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9, 3.710515961415608*^9, 3.710519864296764*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
z0k/Yf+f/w+NEEWL
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
nF2yIGHjmGmFZIH/8/8DB4dcjg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkH841HcAx8+Xfl6MG10KueP8uML98mGl7i01/ZKHsoTIpTs1q/zoCic0
WQqhWlznSq0pPG0qbiTbnp6mQouRsmxulkslz233KHJn7Y/X83qe158vlmRf
+C6KRqOt/cD/PjdnzTFWEgVXryi7jGiTWBsUlSzMpHCtKk9XmW4SKyZvSK1P
UBi28u/eWmESM+stY0aVFBYpXrXYNJnE12WysAc1FMJG1NXtT0ziOvHDfuMt
CmsqkpoF703iaqZvAr+TwvJ1yzorHKfFqjbqYPkYBbervf/IJNPifHe1Sioy
x0TivJUWr6fFUboeHdVqjjBDwB51Ng2UbNXh5V0WeJdaQ+srM0O41LG27u1M
rEs96rW2yRyxebndie/nIqJ0ZIvF7VmY8GzzHn1phTHiU3+sjo7GU9xgerkN
dopuW1/XfwTOxXsD877+GBeuTKn7x22Q/Wzu+GCrHSb/Wqm5ttgWVf23PSoG
mHDQ6kekK+cj/UXwqtY+exjeZJoX+i9AAFs+0DC1CBqPGvWX2xei4fPMuIVG
R/BSvnN+sd0BhfvL6j1snXFKF+m6uMAJ7KLzaHRlYUfJJyzHiA+dvyBoks1G
l+i6S/xmFiZfSfKriQv8x6akVjI2ArztV9D9XZHBv+GYkugCSfcss3gRBxd6
q7RtCa7IKrw3w/lTN9w6KRnOl3OQ+tCQdWaNO+q7imOnDrghzu1fkhblgUrP
Iubvx93hM+hpXL3HE18M3RmoVXrgKauDdMi4YHKkTGG5J9LTUd+SsQQaRX+p
Sy0Xhkjn8zszl0IQ05z9oHYJNiv9lVNyL5RWdmfsrF6Kaj37sekrbzw3tDTu
+sELjx8dOqrJ94FtD0PqpPGGUfKoOSmEB//7yz5Duw+yWMrXkQ95cHDRxRRK
eRizpnFaN/JRzAg5o/+bhxj6r8a+Xj7ez3PYS9/LR+P9zdadEQJEtF/Iob3h
g34q8I58UICa08XCmkMChBe1KyoShdAXLxjtoAmRv4G+/6xOCE5I5OCDbCEa
bG+ar08WYct8s7SsOSJ0VzG6+vQiJF+KC6QfF0EbZ3n5j32+yImPsmPM9sVL
j2R75TtfFHBbCzpLfKFtON7GO0SQo+nzS7Am2LTLoNiTQTAqDRytZBC02MYK
vlEQRM+vvdhnS3A2lV/JzCUgBw5bbrAnCOE/STEVELwWcIb4bIKmOo5TxzmC
yGspxdNCgtJLP6XJfiTgXbZ8rtxKYArncqt+JqjcclDZs40giTr9Z/8dArqF
NtQqhiA4XrZ+0z2CYcnN5twdBEYnK2ffLgKVc3RJ4m6C3crodmqIYLbqynKS
SfB43d2cgOcEBzYw9PuyCFZPeBO5jmBoMvPbq9kEiyOpqpFXBK3bQm0c8wh6
7a7KHxkI0pjjw+ZFBKvuMpbOfUug/SVOteIkwfdpCm3QBEGo/H7YwVKCE7+F
btQYCbi9qpaXZwjeHWky009/+JA3M8W1nEAqcNFwKT/MEO13j1US9GgLkxIs
/JA69PTZWRVBYOk4Sz3TD4NlQWVdaoL/AAm98rI=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4AQS70IfPZv7SD/pmB
7Xw/PZ5X5m1/2b8xmtOHQu2MP3j7gNi5C9m/cCW+/iLtnD/5tdO8USTYvw9r
MzoT7aw/6Cp5hYFV1r/fDe5XC+28P9gUxBbht9K/R1/LZgftzD9L0bNyQPnG
v/sHOm4F7dw/mX3TCwzPpz++m7LDcyTuP5fPUs3hKuE/Dw3VxjJk9j/3TUqX
087vPxSqRqDngPY/AcQWpR4E8D8aR7h5nJ32PwdhiH7TIPA/JIGbLAbX9j8R
m2sxPVrwPzj1YZLZSfc/Jg8ylxDN8D9i3e5dgC/4P0/3vmK3svE/ta0I9c36
+T+jx9j5BH7zP7pKes6CF/o/p2RK07ma8z/A5+unNzT6P6wBvKxut/M/yiHP
WqFt+j+3O59f2PDzP96VlcB04Po/y69lxatj9D8IfiKMG8b7P/aX8pBSSfU/
W048I2mR/T9IaAwooBT3P+BtUduMsP0/zYch4MMz9z9kjWaTsM/9P1KnNpjn
Uvc/bMyQA/gN/j9Z5mAIL5H3P3xK5eOGiv4/amS16L0N+D+cRo6kpIP/P4lg
XqnbBvk/IGajXMii/z8NgHNh/yX5P6SFuBTswf8/kZ+IGSNF+T9WYnHCGQAA
QJnesolqg/k/XqGbMmE+AECpXAdq+f/5P24f8BLwugBAyliwKhf5+j8wr/ru
gcoAQE14xeI6GPs/8j4FyxPaAEDSl9qaXjf7P3ZeGoM3+QBA2dYEC6Z1+z9+
nUTzfjcBQOlUWes08vs/QC1PzxBHAUBudG6jWBH8PwK9WauiVgFA8pODW3ww
/D+G3G5jxnUBQPnSrcvDbvw/jhuZ0w20AUAJUQKsUuv8P1Cro6+fwwFAjHAX
ZHYK/T8SO66LMdMBQBGQLByaKf0/llrDQ1XyAUAZz1aM4Wf9P1jqzR/nAQJA
ne5rRAWH/T8aetj7eBECQCAOgfwopv0/npnts5wwAkAqTatscOT9P2Ap+I8u
QAJArWzAJJQD/j8iuQJswE8CQDGM1dy3Iv4/5EgNSFJfAkC2q+qU20H+P7Y0
Fa3/agJAWYP6XjZZ/j8+9JKg
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9, 3.710515961415608*^9, 3.710519864746806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pionall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion", ",", "pionpauli", ",", "pion", ",", "meson", ",", 
    "elasticmeson"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pionall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion2", ",", "pionpauli2", ",", "pion2", ",", "meson2", ",", 
    "elasticmeson2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.707774953653801*^9, 3.707774970470236*^9}, 
   3.707775160738758*^9, {3.708288762336705*^9, 3.708288763886136*^9}, {
   3.710500387190267*^9, 3.710500388107522*^9}, {3.710501409448793*^9, 
   3.710501411172181*^9}, {3.71050778547287*^9, 3.710507795473349*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 20.72326583694641}, {
      16.11809532201759, 20.72326583694641}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
//LN/WHOF5g0/tevE7UincSM8/8BSpAhfA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
bPwvv3HcrMId+sb/9P0PnVusHA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz6PUyZ5bg0MQLSD/pmB
7Xw/6Cfh+uQbDEAxmtOHQu2MP0D8m3xbKgxAcCW+/iLtnD/wpBGASEcMQA9r
MzoT7aw/Uvb8hiKBDEDfDe5XC+28PxWZ05TW9AxAR1/LZgftzD+a3oCwPtwN
QPsHOm4F7dw/pWnb5w6rD0C+m7LDcyTuP8tngJVFyxFADw3VxjJk9j+WV7/O
w58TQBSqRqDngPY/2L4bBfGmE0AaR7h5nJ32PxomeDserhNAJIGbLAbX9j+c
9DCoeLwTQDj1YZLZSfc/oZGigS3ZE0Bi3e5dgC/4P6zLhTSXEhRAta0I9c36
+T/AP0yaaoUUQLpKes6CF/o/Aaeo0JeMFEDA5+unNzT6P0MOBQfFkxRAyiHP
WqFt+j/F3L1zH6IUQN6VlcB04Po/ynkvTdS+FEAIfiKMG8b7P9WzEgA++BRA
W048I2mR/T/qJ9llEWsVQOBtUduMsP0/y2/eU9pyFUBkjWaTsM/9P6y340Gj
ehVAbMyQA/gN/j9uR+4dNYoVQHxK5eOGiv4/8mYD1lipFUCcRo6kpIP/P/ql
LUag5xVAIGajXMii/z/b7TI0ae8VQKSFuBTswf8/vDU4IjL3FUBWYnHCGQAA
QH7FQv7DBhZAXqGbMmE+AEAC5Ve25yUWQG4f8BLwugBACiSCJi9kFkAwr/ru
gcoAQOtrhxT4axZA8j4FyxPaAEDMs4wCwXMWQHZeGoM3+QBAjkOX3lKDFkB+
nUTzfjcBQBJjrJZ2ohZAQC1PzxBHAUDzqrGEP6oWQAK9WauiVgFA1PK2cgiy
FkCG3G5jxnUBQJaCwU6awRZAjhuZ0w20AUAaotYGvuAWQFCro6+fwwFA++nb
9IboFkASO66LMdMBQNwx4eJP8BZAllrDQ1XyAUCeweu+4f8WQFjqzR/nAQJA
fwnxrKoHF0Aaetj7eBECQGBR9ppzDxdAnpnts5wwAkAi4QB3BR8XQGAp+I8u
QAJAAykGZc4mF0AiuQJswE8CQORwC1OXLhdA5EgNSFJfAkDFuBBBYDYXQLY0
Fa3/agJArq6U8zY8F0DJ1GtS
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      20.72326583694641}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {20.72326583694641, 20.72326583694641}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 20.72326583694641}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707775161205503*^9, 3.708288764403833*^9, 
  3.708289255457758*^9, 3.7082892968292437`*^9, 3.708292244979699*^9, 
  3.708344025227751*^9, 3.7103508964247837`*^9, 3.710500107105405*^9, 
  3.710500388661186*^9, 3.710501170077609*^9, 3.710501339207707*^9, 
  3.710501411887267*^9, 3.710501564921658*^9, 3.710506830697893*^9, 
  3.710507795969468*^9, 3.710508126060598*^9, 3.710515028583988*^9, 
  3.710519869727491*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
3tYbA98SWkG5JoZk1iVf1D4xBgbsTdVp2hhaJwKsfl4fA2ri045uhL6kxvxw
pZoxQBu1YXjpYEiya2Vv9dgYUNJ3b1qlj6HVtQWlZ1nj4IjyzjNNhH4lsqe9
31qPg81ZzRW392JIxPPML7PucRDfrTQudhhDJqcKuCz4JsBgS0CAjR2Grrhw
rbZUnADbhzQevCLu0+LRsAN2bhPgZ4nUhaQTGOrdn1ruMjkBuhVXbjUj7uc7
Tl1aEGUKKBs9Yc/fxtCCmkRZqPwUEHyeZmF9j+j/JvvOa4ZTICxpTq7iPqHn
9f3ikTemwN0Iyr96Yj4kiC2/fo81DRj9p1uSi4l5NKt+MlduBuS/C9r9/TeG
nk16X31tMAM68IU6iT5iHoy+fVjkPAMixhKFnIcxZNtn1Pbu+Qx4cr+jYeMc
odeWo3u/cmaB9km0X28FBUm/iVb9qzcHtl5XSLoNKKj68tiE+PEF8Ff3FPtj
CgVRhh511IYsgI+S/ue7n1CQ1mGryvBHCyBFdXJY8CUFPeGUJHN3L4C5LE8Z
1yIKCui7YdTz3yKoV9elX6ynIPYBxfv5Dv/AAez6vWY+XrQnRuXRhhdc8NXJ
oLZWT16Udfy4acVTHshwPmoybcGHzI6tTs+YokDtuqHOdlsBZBt0+ZvTnAA0
224+WMIWQuMJo11ygoKwIN2/7JaWELqeeXTil4QgrAsdeX1ilxDKb9MVO6Ip
CPepFH3lNhVC9K0CtpbegvBX4M1AblchVDYQ1bN7ShDq6dmUse8LIaWDqVwb
xoTghomcRnk+Knp3kknv4aFCo0LdZW404nskKGTdYzoVmvgC7ucMKgrJdNJb
p0aFPUqr9khKU1G74MawlaepsFhPV+TtViqKQq9EhYao8OqnK0PTJ6hoRuGD
8kAvDdru+FUmVE5Fg0d067jnafDehlvn6FVU9Cv+vTeLikM71cOvhL9RUTU/
KgWbcCjRrPl0spWK0nryraI8cTg96Wx6fIKKLJ48Ddk8j0OBXS/iv62lIUuG
/hAKEYaS4Nur8HM0tF+FstPopjD0jmXlRvrRkIlxWUz9LWH4GWczwy/TkE7Q
Ls3eNGGIVVZUn7hOQyrjIFikUhj2PO1zKkikIb66LSuP4Stgws87DZnvaSg3
WlFf8PYKyLxiHP6ZgqNhweA9y5JXwNjSf+vdBHCkGNRuPvd4BbTzsbpFoeHo
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
/633f0zz4Sc=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkH841HcAx8+Xfl6MG10KueP8uML98mGl7i01/ZKHsoTIpTs1q/zoCic0
WQqhWlznSq0pPG0qbiTbnp6mQouRsmxulkslz233KHJn7Y/X83qe158vlmRf
+C6KRqOt/cD/PjdnzTFWEgVXryi7jGiTWBsUlSzMpHCtKk9XmW4SKyZvSK1P
UBi28u/eWmESM+stY0aVFBYpXrXYNJnE12WysAc1FMJG1NXtT0ziOvHDfuMt
CmsqkpoF703iaqZvAr+TwvJ1yzorHKfFqjbqYPkYBbervf/IJNPifHe1Sioy
x0TivJUWr6fFUboeHdVqjjBDwB51Ng2UbNXh5V0WeJdaQ+srM0O41LG27u1M
rEs96rW2yRyxebndie/nIqJ0ZIvF7VmY8GzzHn1phTHiU3+sjo7GU9xgerkN
dopuW1/XfwTOxXsD877+GBeuTKn7x22Q/Wzu+GCrHSb/Wqm5ttgWVf23PSoG
mHDQ6kekK+cj/UXwqtY+exjeZJoX+i9AAFs+0DC1CBqPGvWX2xei4fPMuIVG
R/BSvnN+sd0BhfvL6j1snXFKF+m6uMAJ7KLzaHRlYUfJJyzHiA+dvyBoks1G
l+i6S/xmFiZfSfKriQv8x6akVjI2ArztV9D9XZHBv+GYkugCSfcss3gRBxd6
q7RtCa7IKrw3w/lTN9w6KRnOl3OQ+tCQdWaNO+q7imOnDrghzu1fkhblgUrP
Iubvx93hM+hpXL3HE18M3RmoVXrgKauDdMi4YHKkTGG5J9LTUd+SsQQaRX+p
Sy0Xhkjn8zszl0IQ05z9oHYJNiv9lVNyL5RWdmfsrF6Kaj37sekrbzw3tDTu
+sELjx8dOqrJ94FtD0PqpPGGUfKoOSmEB//7yz5Duw+yWMrXkQ95cHDRxRRK
eRizpnFaN/JRzAg5o/+bhxj6r8a+Xj7ez3PYS9/LR+P9zdadEQJEtF/Iob3h
g34q8I58UICa08XCmkMChBe1KyoShdAXLxjtoAmRv4G+/6xOCE5I5OCDbCEa
bG+ar08WYct8s7SsOSJ0VzG6+vQiJF+KC6QfF0EbZ3n5j32+yImPsmPM9sVL
j2R75TtfFHBbCzpLfKFtON7GO0SQo+nzS7Am2LTLoNiTQTAqDRytZBC02MYK
vlEQRM+vvdhnS3A2lV/JzCUgBw5bbrAnCOE/STEVELwWcIb4bIKmOo5TxzmC
yGspxdNCgtJLP6XJfiTgXbZ8rtxKYArncqt+JqjcclDZs40giTr9Z/8dArqF
NtQqhiA4XrZ+0z2CYcnN5twdBEYnK2ffLgKVc3RJ4m6C3crodmqIYLbqynKS
SfB43d2cgOcEBzYw9PuyCFZPeBO5jmBoMvPbq9kEiyOpqpFXBK3bQm0c8wh6
7a7KHxkI0pjjw+ZFBKvuMpbOfUug/SVOteIkwfdpCm3QBEGo/H7YwVKCE7+F
btQYCbi9qpaXZwjeHWky009/+JA3M8W1nEAqcNFwKT/MEO13j1US9GgLkxIs
/JA69PTZWRVBYOk4Sz3TD4NlQWVdaoL/AAm98rI=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz66jnw6hR4AwLSD/pmB
7Xw/YrrBuA4QAMAxmtOHQu2MPwnmBjeYAQDAcCW+/iLtnD+weiJnVsn/vw9r
MzoT7aw/7tdLWaJV/7/fDe5XC+28P2iSnj06bv6/R1/LZgftzD9eB0QGap/8
v/sHOm4F7dw/R/GOl8kB+b++m7LDcyTuP2glRBHRKvG/Dw3VxjJk9j9vzJBY
sLHjvxSqRqDngPY/ZZKtpUZ4478aR7h5nJ32P1hYyvLcPuO/JIGbLAbX9j9F
5AONCczivzj1YZLZSfc/Hfx2wWLm4b9i3e5dgC/4P8orXSoVG+C/ta0I9c36
+T9HFlP48wjZv7pKes6CF/o/MqKMkiCW2L/A5+unNzT6PxouxixNI9i/yiHP
WqFt+j/0RTlhpj3Xv96VlcB04Po/oXUfylhy1b8IfiKMG8b7P/nU65u929G/
W048I2mR/T9aJwl/Dl3Fv+BtUduMsP0/MStgvvBjxL9kjWaTsM/9Px4vt/3S
asO/bMyQA/gN/j/ONmV8l3jBv3xK5eOGiv4/oIyC80Aou7+cRo6kpIP/P2aV
5dHJLKe/IGajXMii/z/dpEHPUkijv6SFuBTswf8/nWg7mbfHnr9WYnHCGQAA
QI5NVx23a46/XqGbMmE+AECKuucMuduPP24f8BLwugBAYrksLFONsz8wr/ru
gcoAQKKxfq2Of7U/8j4FyxPaAEDpqdAuynG3P3ZeGoM3+QBAZpp0MUFWuz9+
nUTzfjcBQLI9XpuXj8E/QC1PzxBHAUDMOQdctYjCPwK9WauiVgFA9jWwHNOB
wz+G3G5jxnUBQDMuAp4OdMU/jhuZ0w20AUCvHqaghVjJP1Cro6+fwwFAyxpP
YaNRyj8SO66LMdMBQPAW+CHBSss/llrDQ1XyAUApD0qj/DzNP1jqzR/nAQJA
UgvzYxo2zj8aetj7eBECQG0HnCQ4L88/npnts5wwAkDV//bSuZDQP2Ap+I8u
QAJA531Ls0gN0T8iuQJswE8CQPb7n5PXidE/5EgNSFJfAkAGevRzZgbSP7Y0
Fa3/agJAk9gznNFj0j+dlY46
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707775161205503*^9, 3.708288764403833*^9, 
  3.708289255457758*^9, 3.7082892968292437`*^9, 3.708292244979699*^9, 
  3.708344025227751*^9, 3.7103508964247837`*^9, 3.710500107105405*^9, 
  3.710500388661186*^9, 3.710501170077609*^9, 3.710501339207707*^9, 
  3.710501411887267*^9, 3.710501564921658*^9, 3.710506830697893*^9, 
  3.710507795969468*^9, 3.710508126060598*^9, 3.710515028583988*^9, 
  3.71051987015526*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton.pdf\>\"", ",", "photonall"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron.pdf\>\"", ",", 
    "electronall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion.pdf\>\"", ",", "pionall"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon.pdf\>\"", ",", 
    "nucleonall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton2.pdf\>\"", ",", 
    "photonall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron2.pdf\>\"", ",", 
    "electronall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion2.pdf\>\"", ",", "pionall2"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon2.pdf\>\"", ",", 
    "nucleonall2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70777510737917*^9, 3.707775131585671*^9}, {
  3.7105134353191557`*^9, 3.7105134551898746`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["$$$$$$$$$$$$$", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.7060593812350616`*^9, 3.706059385481599*^9}, {
  3.710502245744701*^9, 3.7105022486474657`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xhad", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", " ", "\[Sigma]inel"}]], 
       RowBox[{"Log", "[", 
        FractionBox["\[Epsilon]", "10"], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]inel", "\[Rule]", 
         RowBox[{"0.1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]el", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", "*", "\[Sigma]"}]], "*", 
       RowBox[{"Sqrt", "[", "10", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", 
         RowBox[{"1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7059417325703278`*^9, 3.705941734089673*^9}, {
  3.705942481098905*^9, 3.7059424812484827`*^9}, {3.705943959443667*^9, 
  3.705943961182448*^9}, {3.7059471483075314`*^9, 3.705947148786978*^9}, {
  3.705947207793386*^9, 3.7059472079054747`*^9}, {3.7105020479850693`*^9, 
  3.7105021791007*^9}, {3.7105035793080053`*^9, 3.7105035816738653`*^9}, {
  3.7105081398855143`*^9, 3.7105081400187187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Xhad", ",", "\[Lambda]el"}], "}"}], "/.", 
   RowBox[{"\[Epsilon]", "\[Rule]", 
    SuperscriptBox["10", "6"]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.705945716937483*^9, 3.705945755799615*^9}, {
   3.705946410532455*^9, 3.705946427577038*^9}, {3.7060325196014433`*^9, 
   3.7060325225371637`*^9}, {3.7105018300920277`*^9, 3.710501862804953*^9}, {
   3.710501914016526*^9, 3.710501914279923*^9}, 3.710501970585722*^9, {
   3.710502187533626*^9, 3.710502190284931*^9}, {3.71050222788789*^9, 
   3.7105022335907393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.1512925464970226`*^-6", " ", "Centimeter"}], ",", 
   RowBox[{"3.162277660168379`*^-8", " ", "Centimeter"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705947315261444*^9, {3.706032501127593*^9, 3.706032550030827*^9}, 
   3.70603258285816*^9, 3.706063987222834*^9, {3.710501833567007*^9, 
   3.710501863138879*^9}, {3.71050191454672*^9, 3.7105019261077623`*^9}, {
   3.7105019624907217`*^9, 3.7105019709577627`*^9}, 3.7105021905907393`*^9, {
   3.710502229253213*^9, 3.710502233935169*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Electrons and Photons", "Subsubsection",
 CellChangeTimes->{{3.706059348466249*^9, 3.70605935380217*^9}, {
  3.7060593908497257`*^9, 3.706059390969508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["Elpm", "\[Epsilon]"]], " ", "\[Epsilon]"}], "X0"], ")"}], 
    RowBox[{"-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "\[Epsilon]c", ",", "\[Epsilon]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706059448735363*^9, 3.70605945549938*^9}, {
  3.706059582918623*^9, 3.706059604588517*^9}, {3.7060599385677767`*^9, 
  3.7060599578500547`*^9}, {3.710502025387974*^9, 3.710502026025921*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["\[Epsilon]"], "-", 
       SqrtBox["\[Epsilon]c"]}], ")"}]}], 
    SqrtBox["Elpm"]], ",", 
   RowBox[{"\[Epsilon]", ">", "\[Epsilon]c"}]}], "]"}]], "Output",
 CellChangeTimes->{3.710503230070257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "X0", " ", 
       RowBox[{"(", 
        SqrtBox["\[Epsilon]"], ")"}]}], 
      SqrtBox["Elpm"]], "/.", 
     RowBox[{"{", 
      RowBox[{"Elpm", "->", 
       FractionBox[
        RowBox[{
         SuperscriptBox["me", "2"], "X0", " ", "\[Alpha]"}], 
        RowBox[{"4", "Pi"}]]}], "}"}]}], "/.", 
    RowBox[{"X0", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"4", "n", " ", 
         SuperscriptBox["Z", "2"], " ", 
         SuperscriptBox["\[Alpha]", "3"]}], 
        SuperscriptBox["me", "2"]], ")"}], 
      RowBox[{"-", "1"}]]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"me", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"Z", ">", "0"}], ",", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71050229377032*^9, 3.710502315426525*^9}, {
  3.710502366708797*^9, 3.710502408158175*^9}, {3.710502442707308*^9, 
  3.7105024651848383`*^9}, {3.710502548326982*^9, 3.7105025784284887`*^9}, {
  3.7105026593550663`*^9, 3.710502733624035*^9}, {3.7105027706367683`*^9, 
  3.7105027969248466`*^9}, {3.710502839714679*^9, 3.710502870062058*^9}, {
  3.710503249266605*^9, 3.7105032496872683`*^9}, {3.710503332245306*^9, 
  3.710503356627955*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["\[Epsilon]", "n"]]}], 
  RowBox[{"Z", " ", 
   SuperscriptBox["\[Alpha]", "2"]}]]], "Output",
 CellChangeTimes->{3.710503529556312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xem", "=", 
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"], " ", 
        SqrtBox[
         FractionBox["\[Epsilon]", "n"]]}], 
       RowBox[{"Z", " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "*", 
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], 
       ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Z", "\[Rule]", "6"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["1", "137"]}], ",", 
       RowBox[{"n", "\[Rule]", 
        RowBox[{"0.8", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "3"]}]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", 
        RowBox[{"\[Epsilon]", " ", "Mega", " ", "ElectronVolt"}]}]}], "}"}]}],
     ",", "Centimeter"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710503389615067*^9, 3.7105034464378557`*^9}, {
  3.710503565401925*^9, 3.710503575052148*^9}}],

Cell[BoxData[
 RowBox[{"2.479589668292241`*^-7", " ", "Centimeter", " ", 
  SqrtBox["\[Epsilon]"]}]], "Output",
 CellChangeTimes->{3.710503575268528*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 675},
WindowMargins->{{222, Automatic}, {-8, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 234, 4, 57, "Input"],
Cell[817, 28, 452, 10, 28, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306, 43, 176, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[1507, 49, 1236, 35, 59, "Input"],
Cell[2746, 86, 613, 11, 29, "Message"],
Cell[3362, 99, 1721, 52, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5132, 157, 175, 2, 43, "Subsubsection"],
Cell[5310, 161, 1684, 42, 86, "Input"],
Cell[6997, 205, 1171, 22, 60, "Input"],
Cell[CellGroupData[{
Cell[8193, 231, 621, 18, 59, "Input"],
Cell[8817, 251, 263, 7, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9129, 264, 694, 21, 56, "Subsubsection"],
Cell[9826, 287, 438, 11, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10301, 303, 150, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[10476, 309, 810, 17, 41, "Input"],
Cell[11289, 328, 797, 15, 29, "Message"],
Cell[12089, 345, 504, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12630, 359, 649, 15, 41, "Input"],
Cell[13282, 376, 801, 15, 29, "Message"],
Cell[14086, 393, 416, 8, 35, "Output"]
}, Open  ]],
Cell[14517, 404, 2357, 61, 190, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16911, 470, 290, 10, 59, "Subsubsection"],
Cell[CellGroupData[{
Cell[17226, 484, 569, 17, 42, "Input"],
Cell[17798, 503, 317, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18152, 515, 496, 14, 60, "Input"],
Cell[18651, 531, 209, 5, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18909, 542, 202, 3, 43, "Subsubsection"],
Cell[19114, 547, 9460, 252, 447, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28611, 804, 123, 1, 43, "Subsubsection"],
Cell[28737, 807, 7935, 205, 454, "Input"],
Cell[CellGroupData[{
Cell[36697, 1016, 832, 17, 78, "Input"],
Cell[37532, 1035, 25419, 504, 314, "Output"],
Cell[62954, 1541, 26958, 531, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89949, 2077, 1124, 20, 120, "Input"],
Cell[91076, 2099, 45357, 889, 307, "Output"],
Cell[136436, 2990, 44225, 871, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180698, 3866, 983, 18, 99, "Input"],
Cell[181684, 3886, 40680, 778, 314, "Output"],
Cell[222367, 4666, 45894, 865, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268298, 5536, 660, 14, 57, "Input"],
Cell[268961, 5552, 44129, 835, 314, "Output"],
Cell[313093, 6389, 48101, 901, 312, "Output"]
}, Open  ]],
Cell[361209, 7293, 1488, 42, 183, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362734, 7340, 188, 2, 57, "Subsubsection"],
Cell[362925, 7344, 1633, 45, 108, "Input"],
Cell[CellGroupData[{
Cell[364583, 7393, 593, 12, 38, "Input"],
Cell[365179, 7407, 545, 10, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[365773, 7423, 162, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[365960, 7429, 746, 19, 124, "Input"],
Cell[366709, 7450, 364, 11, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367110, 7466, 1471, 39, 79, "Input"],
Cell[368584, 7507, 240, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368861, 7520, 1050, 30, 134, "Input"],
Cell[369914, 7552, 153, 3, 40, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
