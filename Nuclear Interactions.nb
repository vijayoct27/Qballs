(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    665052,      13832]
NotebookOptionsPosition[    660671,      13686]
NotebookOutlinePosition[    661061,      13703]
CellTagsIndexPosition[    661018,      13700]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.714243168427013*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PhysicalConstants`"}]}], "Input",
 CellChangeTimes->{{3.7026599174107428`*^9, 3.702659920282866*^9}, {
  3.707578062616406*^9, 3.7075780627309227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\\
)\[NoBreak] is now obsolete. The legacy version being loaded may conflict \
with current functionality. See the Compatibility Guide for updating \
information.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707578065594265*^9, 3.7105062105315323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic Collisions in Lab Frame", "Subsubsection",
 CellChangeTimes->{{3.70439758295687*^9, 3.7043975846021852`*^9}, {
  3.7046500341470222`*^9, 3.7046500373350277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m", " ", 
        SuperscriptBox["vi", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "m", " ", 
         SuperscriptBox["vf", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], "M", " ", 
         SuperscriptBox["v", "2"]}]}]}], ",", 
      RowBox[{
       RowBox[{"m", " ", "vi"}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]}]}], "}"}], ",", "vf", ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "v"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7043956982810183`*^9, 3.70439578376477*^9}, {
  3.704395820560055*^9, 3.704395852925693*^9}, {3.704509543602092*^9, 
  3.704509563726329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(\\*RowBox[{\\\
\"Solve\\\"}]\\)\[NoBreak], so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7043958260514793`*^9, 3.704395853329617*^9}, 
   3.704509568536331*^9, 3.704571395293263*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7043958260598097`*^9, 3.7043958538832006`*^9}, 
   3.704509569081953*^9, 3.704571395829649*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second solution is physical one", "Subsubsection",
 CellChangeTimes->{{3.7043980437290154`*^9, 3.7043980559534397`*^9}, {
  3.704574584179956*^9, 3.704574588758279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efin", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "m", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "m", " ", "vi", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["vi", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["M", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["m", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "M"}], ")"}]}]], ")"}], "2"]}], "/.", 
    RowBox[{"vi", "\[Rule]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", 
       FractionBox["\[Epsilon]", "m"]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7043960422641973`*^9, 3.7043960544458313`*^9}, {
  3.704396240710936*^9, 3.704396279919651*^9}, {3.704396340045801*^9, 
  3.704396370510132*^9}, {3.704396445968672*^9, 3.704396514333053*^9}, {
  3.7043967352607117`*^9, 3.704396742762102*^9}, {3.7043968693853273`*^9, 
  3.7043968697025843`*^9}, {3.704397182522834*^9, 3.704397182658051*^9}, {
  3.704398005085311*^9, 3.7043980412580748`*^9}, {3.70439878158025*^9, 
  3.7043987979006968`*^9}, {3.704399752419772*^9, 3.70439975350599*^9}, {
  3.704509994202764*^9, 3.7045099942736397`*^9}, {3.704572323167429*^9, 
  3.704572323462879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"etransfer", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox["Efin", "\[Epsilon]"], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704396546902505*^9, 3.704396607194059*^9}, {
  3.704396761924859*^9, 3.704396782931272*^9}, {3.704396814323419*^9, 
  3.704396879598176*^9}, {3.704396967581319*^9, 3.704396984124893*^9}, {
  3.704397018870875*^9, 3.704397048373542*^9}, {3.704397080568088*^9, 
  3.7043970810537663`*^9}, {3.704398800183436*^9, 3.704398802788703*^9}, {
  3.704399755475451*^9, 3.7043997683233967`*^9}, {3.704399805605715*^9, 
  3.704399809694181*^9}, {3.70439989540063*^9, 3.704399909864231*^9}, {
  3.7044000245512333`*^9, 3.704400071471487*^9}, {3.704400135746211*^9, 
  3.704400144247656*^9}, {3.7044004096083508`*^9, 3.70440045654058*^9}, {
  3.704400519616852*^9, 3.704400542127236*^9}, {3.704400627018744*^9, 
  3.704400630721491*^9}, {3.704571410513069*^9, 3.704571411851252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{"etransfer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7044022745721273`*^9, 3.704402275170223*^9}, {
  3.7046431189752283`*^9, 3.704643136431507*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["M", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", "+", "M"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
   3.7046464293566523`*^9, 3.7046500467900877`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Proper calculation (lab frame angle not exactly isotropic, unlike CM angle) \
yields \[Zeta]= ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["M", "2"], "+", 
     SuperscriptBox["m", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]], "~", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}]],
  CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
    3.7046464293566523`*^9, 3.7046500467900877`*^9}],
 "for heavy nuclei"
}], "Subsubsection",
 CellChangeTimes->{{3.7046500515776463`*^9, 3.704650119513261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.70440410874854*^9, 3.70440411616311*^9}, 
   3.704404547012455*^9, {3.7045096674135942`*^9, 3.704509670484754*^9}, {
   3.7045123769536*^9, 3.7045123821119337`*^9}, {3.704512611686779*^9, 
   3.704512614126163*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["How many elastic collisions before lose O(1) of energy?", \
"Subsubsection",
 CellChangeTimes->{{3.705885897668036*^9, 3.7058859056366777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.5"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "100"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7058859103272743`*^9, 3.7058859324218063`*^9}, {
  3.705885976319331*^9, 3.7058859764544487`*^9}, {3.705886027126842*^9, 
  3.705886033957623*^9}, {3.705943088548449*^9, 3.7059430887606573`*^9}, {
  3.705943195355322*^9, 3.7059432031155157`*^9}, {3.705943902371518*^9, 
  3.705943902503972*^9}, {3.707845046068416*^9, 3.707845046199988*^9}, {
  3.707845185226728*^9, 3.7078451884638042`*^9}, {3.7078458212813377`*^9, 
  3.707845821374362*^9}, {3.708289196874199*^9, 3.708289201169088*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7058860342969112`*^9, {3.705943196581669*^9, 3.70594320370866*^9}, 
   3.7059439028797827`*^9, {3.707845046696259*^9, 3.707845051529893*^9}, {
   3.707845185883759*^9, 3.707845188745452*^9}, 3.70784582172502*^9, {
   3.708289169244665*^9, 3.708289201698689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "41.76187795018794`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.705885932763235*^9, {3.705885973524386*^9, 3.705885977018015*^9}, {
   3.705886027829247*^9, 3.705886034303774*^9}, {3.705943196590994*^9, 
   3.7059432037176113`*^9}, 3.705943902888917*^9, {3.707845046704797*^9, 
   3.707845051539077*^9}, {3.707845185892404*^9, 3.7078451887539253`*^9}, 
   3.707845821733531*^9, {3.70828916925389*^9, 3.708289201707345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.1"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.705886049855261*^9, 3.705886050221634*^9}, {
  3.705943107644319*^9, 3.705943116657132*^9}, {3.705943191643855*^9, 
  3.705943193162631*^9}, {3.705943472991119*^9, 3.70594347313236*^9}, {
  3.705943905592835*^9, 3.705943905655376*^9}, {3.70784505351272*^9, 
  3.7078450536885*^9}, {3.710501953729549*^9, 3.710501953840839*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.705886050718212*^9, {3.705943108367778*^9, 3.705943119066016*^9}, 
   3.7059431937456837`*^9, 3.705943473521803*^9, 3.705943905939335*^9, {
   3.7078450539696283`*^9, 3.7078450550749893`*^9}, 3.708289178506966*^9, {
   3.7105019444601927`*^9, 3.710501954261179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "14.383478270034349`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7058860507249393`*^9, {3.705943108380752*^9, 3.705943119074711*^9}, 
   3.7059431937544947`*^9, 3.705943473530431*^9, 3.7059439059484653`*^9, {
   3.707845053977713*^9, 3.7078450550841503`*^9}, 3.7082891785156183`*^9, {
   3.7105019444699907`*^9, 3.710501954269981*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dedxelasticmeson", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["50", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxelasticnucleon", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["10", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxnonelastic", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["n", "Z"], "\[Sigma]"}], ")"}]}], ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513538766163*^9, 3.7045135539076567`*^9}, 
   3.704514583862818*^9, {3.704653197664641*^9, 3.70465322775366*^9}, {
   3.7046569486914463`*^9, 3.7046569600981073`*^9}, {3.704657075972364*^9, 
   3.704657092396399*^9}, {3.704657123457366*^9, 3.7046571242309227`*^9}, 
   3.704657404385747*^9, {3.7046574439806223`*^9, 3.704657444087554*^9}, {
   3.704657726936661*^9, 3.70465772711018*^9}, {3.704658280463488*^9, 
   3.70465828562953*^9}, {3.704660621160759*^9, 3.7046606273574343`*^9}, 
   3.70466077608735*^9, {3.70588605545405*^9, 3.7058860617022257`*^9}, {
   3.705886186054516*^9, 3.705886227407016*^9}, {3.7075780760162067`*^9, 
   3.7075780830795107`*^9}, {3.708289209258444*^9, 3.708289224114139*^9}, {
   3.70834400503961*^9, 3.708344005374948*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In units of ",
 Cell[BoxData[
  FormBox[
   FractionBox["MeV", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], "cm"}], ")"}]], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.704574619732512*^9, 3.70457463963356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "4"], " ", "Barn", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", " ", "Fermi"}], ")"}], 
      RowBox[{"-", "2"}]]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "2"]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704514588859489*^9, 3.704514592946843*^9}, 
   3.704657484832375*^9}],

Cell[BoxData[
 RowBox[{"0.0025`", " ", 
  SuperscriptBox["ElectronVolt", "2"], " ", 
  SuperscriptBox["Mega", "2"]}]], "Output",
 CellChangeTimes->{
  3.704513724181877*^9, 3.704514595082625*^9, 3.704571537201365*^9, {
   3.704657485405818*^9, 3.7046574934856033`*^9}, 3.704657544678402*^9, 
   3.704658335364869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["ElectronVolt", "2"], " ", 
     SuperscriptBox["Mega", "2"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], ")"}], 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{"Mega", " ", 
     FractionBox["ElectronVolt", "Centimeter"]}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704657566969379*^9, 3.704657599499071*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5.`*^10", " ", "ElectronVolt", " ", "Mega"}], 
  "Centimeter"]], "Output",
 CellChangeTimes->{{3.7046575981931477`*^9, 3.7046575997617064`*^9}, 
   3.704658338614678*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic and Nonelastic stopping powers (\[Sigma] in barns)", \
"Subsubsection",
 CellChangeTimes->{{3.704657690998494*^9, 3.704657702060732*^9}, {
  3.705886102361073*^9, 3.7058861116458282`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.704513112032195*^9, {3.7045134498770247`*^9, 3.704513482349444*^9}, 
   3.704513579191454*^9, {3.704514413242275*^9, 3.7045144170409307`*^9}, {
   3.7046532603069563`*^9, 3.704653260443033*^9}, 3.704657552055846*^9, {
   3.704657744526149*^9, 3.7046577454312477`*^9}, 3.704658448553891*^9, 
   3.7048353739347363`*^9, 3.705884750609273*^9, {3.705942322879837*^9, 
   3.705942322988016*^9}, {3.7075780918725777`*^9, 3.707578100560158*^9}, {
   3.707765834171659*^9, 3.707765838128194*^9}, {3.707773007648993*^9, 
   3.707773029575079*^9}, {3.708288669218328*^9, 3.708288683881666*^9}, {
   3.708292232863494*^9, 3.708292233475561*^9}, {3.710500059078541*^9, 
   3.71050008383671*^9}, 3.710501558599949*^9, {3.710507271816463*^9, 
   3.710507300759535*^9}, {3.710514739041901*^9, 3.710514739054528*^9}, {
   3.710519639820921*^9, 3.7105196398328037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canvases for stopping power plots", "Subsubsection",
 CellChangeTimes->{{3.705932188927627*^9, 3.70593219683154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"canvasphoton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasphoton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "9"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513918893631*^9, 3.7045139420762377`*^9}, {
   3.7045142304986773`*^9, 3.704514230761878*^9}, {3.704574665161747*^9, 
   3.704574687830915*^9}, {3.704833813057259*^9, 3.704833814220786*^9}, {
   3.7058853430377703`*^9, 3.705885370645385*^9}, {3.705885643600559*^9, 
   3.705885676648418*^9}, {3.707578106777104*^9, 3.707578116768587*^9}, {
   3.707764744887583*^9, 3.707764800231929*^9}, {3.707764857842807*^9, 
   3.707764873779258*^9}, {3.7077649086124487`*^9, 3.7077649627712927`*^9}, {
   3.707765222579644*^9, 3.7077652254806004`*^9}, {3.7077656542511387`*^9, 
   3.707765663814499*^9}, 3.707765752849141*^9, {3.707766356610561*^9, 
   3.7077663631847*^9}, {3.7077664759080963`*^9, 3.707766514837055*^9}, {
   3.70776655353336*^9, 3.707766575501569*^9}, {3.707769725410735*^9, 
   3.707769728402549*^9}, {3.707770810316902*^9, 3.707770812393553*^9}, {
   3.7077711602882023`*^9, 3.707771180296599*^9}, 3.707771213610237*^9, {
   3.707771280615444*^9, 3.707771287541771*^9}, 3.707771381689966*^9, {
   3.707771573369876*^9, 3.707771618427503*^9}, {3.707773409492894*^9, 
   3.707773555950324*^9}, {3.708289097445088*^9, 3.708289099987447*^9}, {
   3.710501180558084*^9, 3.71050118797084*^9}, {3.710501224676174*^9, 
   3.71050126171336*^9}, {3.7105012919076242`*^9, 3.710501322219295*^9}, {
   3.7105073702031*^9, 3.710507432411334*^9}, {3.710514981672676*^9, 
   3.710514995717244*^9}, {3.713722052082892*^9, 3.713722052561242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"photonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton", ",", "compton", ",", "photonpp", ",", "photonhad"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"photonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton2", ",", "compton2", ",", "photonpp2", ",", "photonhad2"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.70588566480058*^9, 3.7058856669276857`*^9}, {
  3.707578609739561*^9, 3.707578620794757*^9}, {3.707765933511084*^9, 
  3.707765939291894*^9}, {3.707766187762607*^9, 3.707766192966907*^9}, {
  3.707773323544589*^9, 3.7077733320633698`*^9}, {3.707774910511572*^9, 
  3.707774914940811*^9}, {3.707775144508655*^9, 3.7077751535802813`*^9}, {
  3.710501151684119*^9, 3.710501151817232*^9}, {3.710507729703883*^9, 
  3.710507729815445*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 16.11809565095832}, {
      18.420680368020108`, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkWs0lAkAhl1XynWkyDBmzDAzzMyH8RHWvNiNpYxq2+lmJCkyzbQnlxZb
0Ulu2zlySW2tTqM7bVdKQlbMLEo303ZjVagMpZpInLU/3vP8fc7z0tcrliUY
6OnpLZnZ/+wOvZlim18ZxMla+oFeRsHl3dMHs7VZIpFnc0lTBQWeh+7vDdEW
iVYM8IUxhynYymqcZmgPi7KjzVIrlBRYJnv722irRY+Z7TqLixT0mo9I5mgb
RAVdgV8mb1MQFtux0UTbKRp2Yuv3zLLBpIm/3Fj7VHTu5rRFQZYNGn+/+Nc2
5oiI66CiJaXPhaX5wzavDTqRVcmmwFNxtlgTFeiSVDwl8s/8aCIOm4dz80NK
3WsMsDr9iEqG+ejJDmpjiL/By2Jq2Ru2HR4FnO38FDQbCc11P/Uy7TFU27Vv
E9UC7Fi0B1AXoHsFs7n6iRUk1MrQcQMH2I/bK226KcjU2l9xn3IAqbl+xF85
F6bPNns1DVDxuNxPR2yZh6eBp6X1HY5I3qH1s5Xaoeq84S6PVid0H4squcZb
gJ4QYc30WRoYo4OaSCYVu1KaB5XLnTHpsDajxtoJtTtjor/edsapPVnCO89o
oB961WgUQsfRws0yxZAz9jZOnlQ10tEzJouQ3KWDMfa1PNCbAUN5oWNtFwPX
BEV6sgsMpKw6UJl1ywU/s/YHi3kuiIr/haesZkLK3Z3Xf9QFtOz08zjJQthC
gwhPJybW3IgUBRW7IkEisyZKmHicZP6rMs0NVbwl5/uNWRBz3/65U8Ge+a1B
HZ3DgsC0cuS6hAPxlO1ruY4F469yhmI5F/W6qZzwFFfQYj2MCyLcEXZq7ceH
o65Q9jV9MPL0gGnSiWSbeDc4pik0Oi4Pbd47Ysz63KDP/dQWPpePq+bBK678
yAYnKjHBYIKPzsoMJqWdjbDcz+Ne7wV4EhAi54ZykCjnd8bJCNAGP94Yq+Xg
pIui/NVrAtLDPnlpQi4chg5ttI/1xL11cSvPnObiwoZvLfTveSLxmaHefqo7
Qt5uIaqivDARL2T4HHTHrOz8lZ9bvNA0IY7IM/eA2tl70jjYG7sOTgyXF3qg
evvyVFWDN+Lf229aZcJDa6/0kz8hROZK1mBHBg+a6PHRxBoh9qkb/534zAPt
bta7RQwf9PwQ2q+R8ZFvul31qNQHyAmqT+rlYyRS38HVmsTx1nazujUC5B1J
3eayh4RoXmDC5TsCnFB5STl7ScQET4jr7wrQ+mE0XJBPIlNW6998XwC9iM1O
Ab+RqGshrDo1AqTrpOplZST4Ctb1F70CbBSH03KOk3BUWVjbvBMgVN+ho+8W
iamGrc/9ZhFY5/HoykA7iaJld+4HmBLYISk7OqwmZ7rx1EGzCdTXWKaNd5FY
aPP20ndmBLxWG9GtekikJiXkR1sRcL6kTRMNkBi2XS1MtCMQ9PxM3PdDM35n
r3KS7QmsNU1cHPmGxOzg+TT5AgIVsf10yQgJtuyBaQqVgKWZplOuIxHfEtW7
05mAh29pXco4iTFJzYMcOoGI9UuPZXwhka2d8/ceBoHcqx3pudMkKu3UlwuZ
BKpe5K0v0vMF/5zbmX0sAi0Wi5bsN/DFjdDcymJXAn0LDf0qjHyx+J+XpaVu
BKY3NDP++MYXT+ShBQfYBP4D2vEGkg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkpXQl
Z8PkR7FHlOJQbmwe0zWzhrXK9JNS+TFkPbLo1zX0w3ZdsY61P16P1/9PbtTO
kGjKxMRk5fv+f5nFilxuAoW6tU8C12QyMOQfnuSdSsGQO+EpL2RANXE2xuYw
hSO+651lGgbs660jnqspuBvOzGPVM/CTQrHuZi2F61pzG0MLA1rfO/eM5ym0
ZCWW8rsZqLGXbhPdpnA+opf3+SMGylupfSUvKdRbVUmvTjdHtuvJ8hiJGdQJ
H20qWmWOcF2Pjmo2Q6LH3u+EPeagFH5f+HRNwwfahzKFbgZCYhxPa98wEHP6
Yly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZyms8r89NloPCoIYpbMBhoP
uHCrbOH8TduA1XFb1F11uMjT2OHL+5aGwWY7WEyF9xpu2ENz76Jb6YA93I3W
M+qesZDyLMiv+S4LZswSbs/D+ZDxlAMN7+bjesD1C+3mbDRsT5XPMzqC0xq9
wGEaB/m7iurd5nLQlbFUc5bFBa/gFBoXcqE4GeS1XMDDUZGD/wSPh36/FvFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbHnjj6teIUrfnlQvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUXzjgjuZDzyqD0j2g
D+Oc2prqgSXxbV+/SF+EUPVi9TvlIpScHszLUQlRM8brm8wRYpRqv5ZX4Im+
zv0Hm7I9MTPpyFJuoBeMUZ2/JqzxQuX2arG40wtpXPVo2B0vcASJ29jrRHhp
Y+LcvFqEIlZP+VcdIkQwO4x3e0WYsq3aWxEmRuONUJvbn4mxsds1t6hfDObR
5VeUg2KcKbPzkW31RkhBu6o01huvi0/pI0e8kR3M3HVC5w3++ge6iHgJGub+
bLYqSYIwx9zUWXoJujVzuu6OSbC39unKimQphuTW3/65U4qs2KEPq/+WYtgt
iaV+K0WBaEWhPJVgqOFQq9d+gqzmSF/DBMHaaL0q/gDB2I42vaeR4MLcSHG1
ikDuKK6NmyI4sUdUYZ9BsFQ13W7AjMYaUf/uyTyCV0u0w1esaJzTOrNvlRFE
NIwXF7JpFFa1JCt+I5Boj416+NGYDBEINJcINJsmNTEBNBKoYw/uXSGYxYzd
UBlII2iLYtXaNoLhOJ/LtsE0jOyZHGkXQaXrwxMToTTi1JvaqUcEVlWe/m3R
NPo+vpYue0KQElL61jSWRsC4kCh1BDpTsx984mksCKM0f40QXN7c51CXSKPX
7ntlp55gPzvtRfE+Gn7X5nhYviF4fPtpVUcKjR+TVUP+4wShaZ9utFDROPz7
J6ub3jsI7ztdVaXTeJt5znTsvUPZ4YKUxkwaMWKnJgFFw8LnjfBVFo2eofyE
bdNo7Bve/JifQ2N5oYF7kkHjcenN0q15NP4DId7s3A==
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, 0.}, 
     PlotRange -> {{-0.9210339996043925, 19.3417143676245}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}, 
   3.710519856389924*^9, 3.7106323359378643`*^9, 3.710632821793014*^9, 
   3.713713297297893*^9, 3.713722054568103*^9, 3.713727847340893*^9, 
   3.713728640173163*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
RP5tWBfhvli56v8BgxOqoQ==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkXk81YkCxSkUk+793d8lS8K1xE+2Sz+qyT0oCZFMaTEplSfLvSqkiTyU
YtJmSbJkmTRZIu8poauSLNEyRVmylHiai7FexIz3x/mcP8/5nqPpJdhxZJGE
hETogv7vr22fBCnEZlrpWU6uCu3pEf4nev5GpCiMV/dVTikjr0domvrHeRvR
Rd6hJHWiJqBHGKjzeJ4jSuPljtovZs50Cxl+ZutJUQFPtfBmfx6rW9glP+T+
g6iSx9kUdeDe+Q7hFs9G7yWil7zZFUrRfKf3wtkl6/nSog7eqfnlmqXuFcLH
N+8/O6E9xOsS9G+fOPeBx5B/X8s9PMlzpv2O//l1kLfP+Ueto1fneCc60pIK
bo3zilbYJBoULkJw1ZfU1KPfeS2RVrUcFxl8ruNH1LRI4sOG/JcTVnLoi2o/
d71WGgNlTZf+tXI5xufmtsjmyuL1Tu3qgnYmCkdD181ayWPPmuJ9Zz4zIcy8
EpjhLI/eRT9OuXxj4rXTnTzr/fIYv+dmNDbDxMTtVoUL4fJQlotOW6dCwGof
PcqulIfX457Q2t0E3jwbu2u0biFHN9O0+z2B8UT+Si8zBsLnqKaSTgIyNjFu
0rYMyLwr84nuI6A8nB53ZwcDSpHNmboTBDZubRIPHWNgY/ucfACbhZg5g/en
ixmIuewxOL2DhWWl47UNikwoi5VzyNcsZKrej/iSwERyhBTvQCsLK3PSVE1v
MsFaMtxW8ImFFOr8g/BsJuQUa1h2IhaurPMYVixh4rsZPypUjkSUu4zn1mYm
Qit2r3pOkJj/NDKT9H6B08b2EaFM4rR3e3JvBxNDrkqjd1eTCAoubj69sEu3
4OnBzk0kvBP2WhUtJeAxVTCn70SiV2Vz2wyDwMcz12+EuJHwzDYO2bKCwNt4
/zcMLxK7S6SKunUIOCu4B3gcJfHOcniroSGBxjRr2d8DSbhWf+w7ZU6gJl/R
2iaChMOrIjXSlgDMJDsvxZCo3XWj3NOBQNWjb6Ht8SQ2KKqUslwJrLdpYesl
kZjew5As/4lAWX11cVAaiQfpUi6eC79wXfOdnuSQCO6ZTpP2IHDvQ9KAfD4J
c53hwXxPAnf6fTXyykmUFHyMEXsT0BbsrByrJsEfaX6X4Usga5K3G3UkDM1r
OJv5BFKlFa58bCHxe0XR46vBBC5qCf/+YZxEdkP0JHWWgMCT7Ao0YiNxwND7
5ywCdGtF+vocNk5qR21+2k7AvEHtpNddNibVzLi7ugiYVUVsjythI2TFl1WD
vQRMcmwXtwnZCJKzExODBChBo8+pDjaOjcjmHxQTUF/SbvZQQQH+lVeZkgos
LLWYqV97QQEHfspq5zmz0JZsOWkSoIitZ6uPVVWz4HdGZKmwXwkssUqC8QLn
62znhHJDFWyKc6yWzGKDM9zf6qi9EgEmKb0OaQqYVfX4pZBYhTa7t6Wz1xRx
51yY+atOdRSf7r2y7NQK3PrV118woIGwmuWHEo8roWXU38H9jSbuGxDWYfuU
sZj/q1pZEwfdt43Z7e4qCNpzPTPsuRZcr21IznJRhfOhU4Y5Bdqg0tS06+iV
UI88WYw8HcyWq+YdMVXDvipHntVVXVhMDq89pLrQ46h8eE7IapRll5yok1CH
C/XtXoRADwaHLt/OnVaHsWzmUIW7PmSyso6PBGpA+jufI3CjcCw1dlnDkAbU
PddIxzkYYN5xINzdVxM53cIxKdM1qF7GnUjs1IRaiKB1kjJEeKtsf/xeDiSp
iVp7thEEJS8/0a840Hf2ObJo2gjRtjJFCdZa2BIzJeb+ZYxrXU1T+VVa8OEb
vTzob4KWuH9vCTLVRp6WILnvfyZQwBNCXKQN1YFUb2VPU8RKiXoMtHVQcnjj
csm3pgvcl2PJ6zqw+RZgkuvMRfGS6vwyUhdLI2N3Tz3lIiS9/Q/ZC7qo1zCb
lbY2g8XGcyFKMqtREOoWXFdpBpWk30baIlejpmv/xHoTc3C/Fwdum1iN1u3i
YZ9Cc2wOcPA7fVwP6m/CRuw4axEvavbb06+HWNnQug+JazGl02D7bY8+hhwl
VXUJGh4+bsmWLfq4kB58QuscjcnyF0NrHSjcruPu1z9Pg9139uMGJwo1Y8P2
xrE0uEybGmtnChIOvqs2xNPge1fe2LaDwsnJ/fU7kmj0sUo2HdlLwdvFXj3q
Nxrv/FJTE30p2EqqNnY/p1GiFmA3FkfhwJoP//36gkazPWU6fZHCGfekW3/W
0/jzRL/q35coPCpkhIibaOg1HPxLLoECd6+UJrOFxq2QXWmcmxQ0SkUhvK80
Lr3ijbrmU7D6dPfg5gEaBTPfO9wLKXjI+jg5DtJo0Hn04ud7FFI8ezXdh2jI
hJmnHy2lwFjW+pI/SSNcT98+soLCGovEB0FiGqluX7nnqyg4eLlm/zJD4+GZ
HLV4IYWYh40nY+ZpjL9TG0t5RiH38wWvixIWYEm0d2Y8p/B0ud22a4ssYGKQ
Upf7gkL3usWWKVIWcN61s/RuPYX5w9WcDBkL+EeyMoobKfwDjAVCuQ==
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVj2s0lAkAhvnGdCEt0orWZcZ9MHzDfKxy5s0lkXRSIdt1VqYLpyaMu6JN
YXK2ldtQrS5s97XtpDbMV62DSChpFRlplbStzFLWmLU/3vOc59dzXpZwX9hO
QktLa9Xs/mf5/IBjrFgCZYX1sVUXmbTSL0rsnkZgw6afDp+UMen0qRsxBvkE
bp0NLajNY9ImNfqb38sImI+qSntTmfQvItG6B5cIHOaXn1PvYdJXBO296jsE
crd4mD3YxKSrTfjR5EMCBUcefl+8iklXNBFJpR9me92aDFc7Jp1jf7oixoOB
64nRkTuUOnTU8JNhooGBXrmLfmOEDk2IfDOXderAnaIlUn8GHRZjfvnK5BwM
Uq+Dllpo01u/y+ra9a8urpJEQIPHlOKzYxP3/chCJP0pkco3flTcLOQE6pUa
gt0jlzUWv1LYnm3uW1C8CL7mTtwmfr3i4AvdiYGGxQjuL731SPBcUNlb71DW
ZwL+9iHxxaK/BClvAn0bekyRJjKz3O0+KVjOlvTJp5ciJ/RxfmCTRiDfm7bN
TG0OylvVEjvEgHT/DzUOxlaYtgns7PWeB/bxM7hpw8KGkjR9w4wFKCSX+E2x
2ZAaX883WGaAqXfCnGrKGlG5/kZ7hUZYzjX10fOyQb9+zUHeTmMIu+Zq7/Cw
BSe8YG7/li+RIW1mWq20w/YHXxhuzlqC+HZVRlGAPUJCd2kHHjLDNrtxKiHK
ATYz0fE6l76C64Cj2n+PI34Xd2kutFjgD1Yb1SbiQJqa/3WU0AopKaipS3WC
c5fmRnAiC6pIqzPfpjmjuuZl5VgiG+tlXrJpiQvmjE9W5ImtUT3GfjpzlIuo
4MFn0mwbPO1IPlKb44pcR69jAVm2UAs7fotd44arFtuTRUV2yGDJRiPbZ718
/LmgxB4fDLRsG0JInEhVhOiedMBmvUfqnm4Se/dtmfGpcsTNlvUGDzfyYDka
Y+1QxYFe4Yr7kgEeWjJ9c9PuOCHseGt62S53RMSHT9OtzshZrbe/ZNgdig/d
g3UtLpAb/8oIFnvAPNtel93HRVelUWfPmAciKobO+/S7QrlN/0L/Pj68F8RV
2ca5YcRBbCr7xIdfd4eZ8h83KOV5TW7JFLyFI81JiSRCd6rS96RSqDbckFmT
RKLOeCvvfDqFxXfr3d+lkCiJJ0+ZZFH42/LE6a2ZJNaQzw7M5FKo6vNMCDhK
4vYVW4u2cgpGm45YLiqb/X2OThApKIystZJcqyMxE8bhVN6lEKHJdXrTQCKW
OPmy9z6FxmvjA6y7JAJ3iIJDmyn8qN+0uqiRhNpioRW/k0J4axwrvZ3Ebtk3
rcQrCvdW3mkLGiDxNKjx0PLXFFwnbLIPD5Lw/8ylJMMUTl0o8KwfImEZSVS+
fUchWUd41u0tie7FFyUdKgrce/OSTT6S8G00ctadpFAuPuCyTkXi54R0pd9n
CvNZLwbzJkjkP14bUqumMHTw+pqZKRKfsm9rj2korHM1ZXipScTwrGs5hCcU
/dm3xBoST5TS2GgdT7gUjMZd1uZhxYkJ1uk5npD5hFu/ZvDwHyZ8/D4=
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}, 
   3.710519856389924*^9, 3.7106323359378643`*^9, 3.710632821793014*^9, 
   3.713713297297893*^9, 3.713722054568103*^9, 3.713727847340893*^9, 
   3.71372864056708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"electronall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron", ",", "electronpauli", ",", "electronpauliflat", ",", 
    "electron", ",", "electronflat", ",", "electronbrem", ",", "electrondpp", 
    ",", "electronhad"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"electronall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron2", ",", "electronpauli2", ",", "electronpauliflat2", ",", 
    "electron2", ",", "electronflat2", ",", "electronbrem2", ",", 
    "electrondpp2", ",", "electronhad2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705886294227656*^9, 3.705886309689898*^9}, 
   3.705886354455186*^9, {3.7059295081654882`*^9, 3.70592952681656*^9}, {
   3.706591208668486*^9, 3.70659120946497*^9}, {3.707578151211833*^9, 
   3.707578154097561*^9}, {3.707578534107463*^9, 3.7075785360290823`*^9}, {
   3.707770599686041*^9, 3.707770620060073*^9}, {3.707773274966692*^9, 
   3.707773314613207*^9}, {3.707774917389535*^9, 3.7077749200210876`*^9}, 
   3.707775155723225*^9, {3.710500580655548*^9, 3.710500580781083*^9}, {
   3.710507723168262*^9, 3.710507723303005*^9}, {3.710632617434235*^9, 
   3.710632619746599*^9}, {3.7106328174617977`*^9, 3.710632817589737*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 13.815510557964274`}, {
      18.420680368020108`, 13.815510557964274`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs0lHkYB3DkloRBNMTc3pdxyTuoTqtlnlNWRthk2bOphq7URqLYMiIH
Q5HpJkVjBqWplJTr6liEyopJRK1cKnKNxp1p3z3H2feP97znc77f5/m95/fS
9obsOKCkoKAQhD//vYcXSnozLBbZEd3jUQwyBXiq/Mfjdovst3k1kSNGFNDV
8RO2cxbZh8hH2jwpFLhFtkmu9F9kk2/a3S9gUKDZupWblLrI/lI+XxFkTQHE
m7qCNrjI1nyTYPi3IwUahaUB20Vy9kQqSeDiT4HUzPDEdjUF2JwQofcthwJd
6/PWbTipCG4FlVibLhX88+tUHAXKMDKw0b4jjQpKnCvPdSLUQInpO1cho0K8
BaJsc0MDpk3Vte950UDfiaSe/nAl9F6KE5dm0yCgyufMQVcdUHF8ubOhhwZ3
FJdtuNVOgqZ8n95iKh0UO1UPurvrgbbAJvKCDx3cpIe9DLv14XmWwqHYJDpc
+8ij8X83ACvbeAV5CR2mUvoPc7sMocCa8/nrBzr89GthiF8IGTYHcpK01BmQ
W9IyUvnJCMRdncP9lgxYbifaXvfLGqgPU1Ifc2MAt7E5+FuvCahGFaYKjjCg
dtFXNdGXAn3RajFb+AxIuX3znjCcCgZP9jbczmOAw+6gBk8HGlxWCTWcqmJA
yJ4P1MIJGtQkL3yz6WBAVohKe145HXodVq7ZOMEA78a25x4nGDD3zkc5SR0B
zeLvBa7WCJQ72LXFmiBQ+eDt+JsJBH6bXbD0sUdgSrYr1OAeCqsaS8f7XBAw
dxN4fgk3gy+t5f1b/RDoHjwWGMIyhxLmln1ZRxHIXJ0f7jpgDlvkgztmoxHw
8r3QVfSACf80/8ixECCQ+oEWLw2ygE2jz2oFIgRqIvcnxdlbwtB6J3bDIwTm
b8rPJM5agsbDmi5KDQIVOs5FTo+swC+mfXykBYGwiz84809ZQ0auxJ7fg0AR
t5MUv34tRO8JLcsZw7+3TNrSOrwWuK9rnaYWELBFTo8VF9nAqHNmfNwKFGQd
TRz3oxgUbUvdumE1Cl9N02X8Yxh0B4DVedwj+7jCZ2GEB/PN3ZQiiP7nkTGZ
0ykMbB3Id/tw99mVCk/zMDhldqgqnYxCd0SMW2kM4fd/uk7K4jCw5PboeRuh
0KFIyrZNxMBkcihShudtLh1uwckYhO3XcjYwRkF6TjQpSSHyV81B2f1pGGyf
w1RP43njKrttyGXCz4TV2VnXCT+18J4yEBGuCDYWeecSLi3q25Z2G4PhKPm5
qyYoPJ65O9UowSB1b0Q0irvQMVy0vICwpF55+uxjwrleV9wXyglnX909vfEp
BkNL+7LeoeITf2HgkBAUomGKwnXqqPujWsJXDxRPj9bj96H5wjMW9yVJtNjq
JeG0MRePwCYMUto53vO4z6/TnsltIfYn/dEu7mnFYF1yf+wsBYWEp0IP07cY
eJFsSdFUFM4uC5zZ+Q4D44i4O5F4fsaVlZPeRfSjUmY8Wnvw+1jqR0qrZnQ+
EfkJw6QcjwEMzIy14BINheO7vDyThzB4sfnhPoSOQrCIPFs3ioFHwlCaKp4f
+dyTs2yCcKCVxBMmCe8/dnw2aobYF/DEIbdsHoOXS/v2zCn9PCUn8vvCT1Fk
RRb01PHBh4GCdTVHWqLE+j+XfLxv7qvMAmXx+63l+DxTTZcnU2FB71L/lsVJ
6UU1Yh5x7zS3Xc4Cb3GZZBJ3TrAT75UGYbpALD2qSTi7SJWpqcWC6ppQniuK
gmnbYZ5EmwXf1+pdKzZDIXOmSepKYkF5xkDnPJ4bGdsz+3UJZzim8+L1WSBf
6q/2n5cyDFhg39E1cgPB//9ZLrPakNivn1fD8ycT8xfrzV/LjYi+zuA5ZtYa
4vwLml95m0wJ/wvB2MmI
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDP13hGdvUVB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AOtzU8M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0ntUjAkYBvBvpmnm29JNNZpK0kVN0vel5FLMUyedsLUpul9MSVF0WZTk
kqMk6YasZMnGJqu7IpRt5VJZ1qhFF4tEIpuuyszst+fsWX+85z2/85zn/eud
HRrjGc4mCCKAmX93b9Rgb5hQKmrz+V6o4ysVBaj2vZiEVHTG8FLKsjwCWuu/
OXItUCpybKq9s+oogftXLZ2TE6WiQ6KXen75BNLUPEYdjkpFuU/akzf8QGCi
Pt+noVUqsjjVGJJSSKBLw0T/1yUyUdpThdS6YgLFjcvO3daRi27yNtuYXCYQ
pB3qfcBWLvJ4M1lvXUeAH5XKc/WQi5w1kuxFVwmk89s23jsgF32eajbyv0Eg
erOfVduYXDQjMjcqu5lAgUp9Z+QmAsvDM8fH2gmEXnu8fosrC07XZwmqxwhk
xZX6hKxlYYfVrMyCCQL1ZntXeoSy8HahXU/KJIHpR+fS85NZ0NLmz/SQEWiK
3jc1Ws4C99r74XeKLBgb0Hm7ZrBRcEZ7t0Cbhd69hxoz+9igmxT0vG1Y2ODi
pHtxPwdLdCzYNjEsuApct01ySZzfluqa+4EF1Zse4lg3ZTjndU5lBbNRVTb0
aeKpKmwsWzvdJWwMrcoKm7LQQISXqbkjFLDTwjRfpXU6XraVOSgUKWDEMl1P
mKWFlubupA4OByEnovt9bPjIf5gr3RbEgbpCvq/jwxmQZIT3zK3goCLnkK5t
jgBXzJ87uygqwimdbbpkvh72a/od+9ZDEb/9tHzfinF9zDTeOlRSqIiM6/f3
atYY4HTE6pPrXiqi6PRAWKLQEFrS0a0pBlyMxndURCnNRk6Zmhj+XDhNsc5G
ds3GG40UPVkmF/PZD185lRqB0M5Q9a3nQqDHeVB00Bhy2cQx+zdcfH6bGKzk
bwL/vIOp11R4+OOu1/Fxe1N08C+vOWTLw9mgmK2DqnOw9KPO5xJvHvhx8842
dc/Bc9OC4GPbeUjJX71Dr8EM6WMRf74+zsPr2NqRXdnmsHotvsqt5cExKEUQ
Hi+E3a4cp/Z2HnB3MEu42gJu8Zn1QSM8LHpbWDJuOBcRi8MSXNVJmOlWRq1k
W6KnuLvd1IqEGosrOf/YEhJhwMuAFSQKNkgz/jo7D73pDgmyMBIze/zf/7jP
Cl4Tkq7Ne0icUPo8tMGLwoKRdTusC0jY+erOV/Zh3FfYWMz40Tn7+HJ/CpU+
AdsHGW8ZDqzyCv5qJcfdn8bFFNgREVGykySSEhSG02Mp9B9oHm05RSKwV2Wk
9DCF4k3G/mQRCYMGo7HBOxRu1ay5cbiERL2ys92RVgqBEvEC4gIJb7/w7Qsf
UGiynlOXx+SfzqfVdj6iMLqub20Mk2eN/Dy2p+OrLZzu2Zk8o9C9PG66ZymJ
29nvtt/tpqCs2TDP4SKJ0G7luugXFFqEz1zsGcst5o2rv6bAzbjXYvgLicJE
94WX31JYr9ygdoTxotsxCX7vKXiVeborXiLxWDO3TvqRwgfz9LQExrHiqvGi
YQqW1iFX+hlPK5csdBmn8Lu6/dq5TL/ky0jCu0kKRPDu2tllJJxX8q9kySjc
uFxjhnISf7fqJQtYNAaqK0qMmH5DvGXhAJvGsz1GniYVJDIFS6/f4ND/9/1v
unVlc2m0p5qFkZUkzCOCv4hJGir7TUKTGI+pxOjbKtFQ3SuWmzP3b9XsceBO
o5Ek57sFV5HIC8gJfKJCo/+igcZi5r6YXZRcqvbV9IXKwmQNGrqZk9LqahKy
75quu2vSENYMdZjWkGgbe9RlqE2jNM46rpjJC069+vKJT2PRBcnOHiaPdB7R
b9ahsfg/2w1wlh7X/WpOnnbQRn0aMcP9NcG1zD8tmrPL3oCGte1pE1PG/wC8
iWWC
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIGDocl8FdVtHA4PutZ3TNNH8MU/HOr6
6IDgt+ytYpichuBLrZwkuK0TwVf8L7VBYw2CrxZhcqDtIoIfen5tdtoXBL/J
c0eHoZQhnK+gZ2zsY4/gPzfgq3yRiOCvNasyKGhH8OdEuTVXrkLw/7xoSr50
BsGPqgrYKvYJwX+kWbfojogRnJ95x4axzwrBT/iZ/bYvHsFvNPldItiE4C8o
ks6rX47gvzw3myn/FIJvoLeWw+sDgv/iu96cElFjOP/kfYHTChYI/spTzdk7
YhH8TZfDll9sQPB13GcVWC1G8JfszVvddwLBdwta3JjyGsF//jLjpKqgCZz/
4/W8eWZmCL4xjyn/yQgEP0c/5qNbHYJ/vuBxnttCBH+RzO3KqYcR/JLTyd/O
v0Dw82f48PVwmyLCM+PYdGNDBL8nbMGemBAEX2H9q7yrZQj+Jq5jkyznIPh5
LYxB8vsRfA3Gc00fniD4wS+4HAW5zOD85W+Xz9qsg+D/+no11TEIwS+XSTkT
UIrgp6xNOrB+OoIf4PhJ9dceBD/180O1Y/cRfNeJk9WNPiP4qvquGvPYzOF8
AKTSKlM=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX841HcAB3AuUV2nlnw5rdydO+4Od1/io2c73TvCUHk6tacnojOhUohR
0razUlYUirpt6lr0e6lOUo2opqYfCilFrkJx5fEkP8qXbX+8nhc/KkG1hmVi
YhLwn//X7vpeYpAwysyjVydFfEXhwI6zTyk/Rsk/Wlt105tCg+bDR24sozyh
DhZM9KFg3lfa0ZjFKEMe6CJH/SgowlfW55QyykHF8G8fAimcJDVHTLsYpa9t
ic3LpRQye3OD30aPKV/cH5tarabguVyquxw1rrRWXBjarKGweD9d6nzOBJkU
957xOoULsbFL/znFQlh9V1qT0gaqmNmnzwyZY0LwMktOqC0itmsexX2egiyV
q+1oKBcjkjrZux5LvLs6X94WYodLBdIA9sEvEPi1YKeTehZER2+3TS20gsYn
SSVe/SV+fD5lsKPKGn9G5kfkp8yGrvUv8aE2G1S396a9/3kOtrwJ8Klq4eJ0
Z5mZqcYeCkFqW/noLPibCtdWBfJQvn5rpB0zGyWhJdktd3jYk5h/XjyTB6Zs
b1DJMj4EOYdxScjHN0pqhvE5HwVutr6fBAJo8lRWluECfOqNyjpOHKB/P6R/
3SmAQsb1Zs8Tonla6L7CGAdEPbIwVXuI8EYdtKnmtQO27bk9kefviMGqUwNH
NgiRfH9g2wE/J/S/uF4W9k6ISMcPJGWlGN1scOrTRJB3SJiF6yR4EBeWeHFc
hKf8u+RurBTHsl04aT84YssWnL+W7oyU8pigPgsnDKzgHf5uqwvcSr6t8dnl
hFDtPO1oqisMt17On2YuxvF+weOxnTLs7m8J35crxuOGzTsqsuQQGDL1Ro4E
TFTDlfjFNPTPCs8wRRJs42uNK+7T8NCubn9rK0XfdBNR1SI3lGb/TYUUSRHO
fsC0NLvBavuBvjieMy7dCZ1+b7k7NvjYsSKOOINdsOBGaoc7atmTyi2cXaDK
qc84FDcXk83zN0ovuiArmJ1Y1D0X3jcfqsXuriifqZ8QlOSB+Jz0j61XXfFI
N+NhS78Hsu2e1sYpZDBEckraEzxx8EljYcIVGXrESVztsCd0Oi+2s68chvJf
6ujNBAdlSytrauVYsmYgY106wcT2Kxs/35Tj2swI92MZBMk5QqFnnRxFyW6/
22gIlhiHck/Uy7HY7cmmsWwCs1PF0Xub5Kg8I5pz91eCRJFx2qouOfL+uJ4S
W00gzPWdO2pGY0wllepqCJ6tGeZwzWnEs/a/aL1BkO999o2nBY0AdWzQktsE
40aqOGEyDWaOJc/zIUFrcM+kVxwaa7Vh9axXBPsm57XfoWg8Drz1k6KTIMDg
V9llQ2PhiIykdhOMXf5UMIFLw34FS/e2l2B9XHSg9ywazdYnUxsGCPzrvPRl
9jR8bs1wmTJEwBQbc+/xaJSlZBh8Rwj0qbq1PXwauxtDFlUwBHxHtr1QSGM4
s9K0f5zgCVM9AhGNGHeHCinLC3ubU5pWOdJoMuyJjzbzgv9Zybl0JxoL8gb5
xeZeGN3enl0kpvEvmEzveA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0fk71AkAx/FxhY4xiuRohpnJPeYb9WWR70e7STM1jpIGD4Ui19hyxOog
5KoQSWVrGxtPKNWGakMHuXpKT4ulpG3Ddjg2x+xqzLY/vJ/XH/A2CZZ471am
0Whbvva/bpulG7Ut5ZQy3tCrwxSUMHHktMBJTqndoJea7VdQnjriWIWvnAps
ufZCkKmgtl/v2PRLnJyq6/NkxJQqKH+RM2dvgZzS+jgpLKhWUEPRXgN5tXKq
sepK69b7Cir0+J5TtU/lVERkiOvyHgUV1ZWvIlsyT7W8f0GeUyioFMG7t5k5
89S9qYF8bwsazrudKC8/qqD2f278ISCFhhjWxNKJOzS8mkj3imUr4are+iKr
GmXc/MCQl8QooyfVpZXtsQDsVyHMwn5V9DlVdU27LARXXM2OS1bHaN2TE2FG
dPT7PBTp0hfimQ+3uXqAgW0i3Q274hdDX6YvXfZsKXZ2BzCLGVoge++WOUp1
oF85PnS7iYH+0w4zRPRyvDQ706oxqY3IQ58cdANXYCTqbpnQeRmeXRKdus0z
wG/8L7+HfK8D9vhIr5BrhMUN9eqxzbqYMwxIrtFm4vwRv3Z/TT1UZqSsefqK
Ba3HBhNGzitwMTciSjJqjI7nPhrPs/TR83eUwLfbBOEBVzMCmgygEpO7su4J
G6Kq1Kl+LSPEiUsupLRwcNLRedbBbyVEIUk8aTUXNzbqBEWdYIKVmliLilVg
GoQ1nHrJgv89IeVSYAr7W5FO7jnG6N+75KA0wQx5B0tCSY4JPCw/XDssMUd6
5ZFMZrsJ+JoXxu76WkBSKPObDGFD7UsMW7LVEvODPPPGRRywgqzVcgRWuNO5
vSm5lgPpUNNn1dXWCEuka7IFXKxMkPTOWPLQkHFU+HCCCyXL6VZ3HRvMeR+D
R94qWIjCdyv/Y4PI5kOKDq4pNmbOymwn+Ticb1ePDlOEx9h07YoikMFKNPkp
1AwVHMnpd38R4GsfSJ9bZA7D0bN79INWo/2++llUmuN66Dq60vPVKFiamxTv
aoH1H6KJcpEt5C2dXuUjFtBIzd4x+8AW/g7nXt5Ls0S7sd2cmqsdApaY7+y2
tEL1ga3xbb/aISetsubFUys8eh047UisQVVdfc2Dvdbo9ZSNh9esgWRL+uUr
DB5Y3SkTbuy14Epfex2s5iFb80BbX9FaqJfaPKY22GBMqGRoqk3i+KTj2i/v
bZBVFr+fk0FCTbPHR5rBx+U220CLYyT6Ssz+9Mni49HncXd+Nokq06R9Grl8
0AQRTKfjJDy/MzoZnc9H4kxgu3cxidLDwW325/jY4+HOSvuZBG9mzLGrlo9v
lQw7h1pIbHurbjw9wMdO675bw49JrNonvloxyMch3+KLH9tJyGhVzn5v+LhT
o5Uge0KijCkSNw3zYeunasLoITEqLirM/vrB+OanBGqYxLrwfOWTKgRcBq/s
2jBKooJ/e9OoKoEAzfDNwvckGLNv8l0XEDgT9IeJ7xiJtxl2rCkNAlqLe7ti
Zkgck/Y4iekErO2L6uNkJCYiFGk3tAgIgr0uJf9LQmxr3rFIm0BmQ2di5jwJ
6/tJOxqXESh/mxWcR7NHcdalC3q6BB7Q3bYUKttD4dE5HLucwNA3Kg5nVO0R
rjfF69AjMB/azP5xgT26B43iOfoE/gPy2RME
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx3lYzHkAx/H6RcuEFElKc3TOqNFM3348Yn8fFa1jskW7PW2PVJqxGhSV
JLvsVs6eEKKLEXK062rK0YaHNDRlOkxpDSUkOUrzRGmatX+8n9fz5kZvCIml
TExMfvjW/+aPXbCLK6dw032o3sTxAdPhH57gvZWCVZ1kFdvyIZM2dFU6cS+F
arpb+WFcLWN7eXzE+zwKSSfSLapYauaKTBb88DwFJxYnKmtMHVPK1LcZblK4
tzvrc7V9PVNi67NaVEchYezXrBHhI6aghtp89COFmFFxuorzGibTrahASsxw
1Wwhi9/QyIR3NXdRVWYIoYZjLBxbGErm95tvwyjsN8psNRXPmRDp9Auln80x
1sC+VZr0hlmZvqNxzVcWCueE/R3kp2cG+TXC928noDGjU/ozd5gpzxEEWhy1
QsRto/XjUAouJ1W6cUcmwVfni9Zgc/z+lDXQXmWDD8G347cXs6Bo+8f9mM4W
4iBXbW/7BGx5E+hX1WKHPlKYXrjWCnN5yTrlsD3K1teyD2dPgjJua+Q0w3R4
XtMoBrNtsC/+4GX3yRzs90w97XXTFrys4yh35qJSeujukqd2yBFN9R/i8VB0
MUPV1GqPoZ7ozBLaCXJn+2VCE0fMFdrNs5jtjJRm/2epphxEN35nGkVcUJQi
PqkxcLBtn2o0Z6Errov7z2Rb8rCpXr/t8AI3XExks0dbOiHStZ9ODHdHvnp6
a6eTM2a28w0Ba/mIy1xRVObtgidcNa2WCWCjGmjxFbliyxZcrkydASU7LsQj
wA36MM7xmK0e8DIuRlOAO5bnzc4bTvZENmJ85eCjpI+nHdkpRGeuZPP6YAG0
mpSMisyZsN5c7Or24wwYojU35BIv0PLaKYtWe2AbN+9dWP23716ZypV64uNE
E5eqpSJMUwl6eqKFiLB4ZGh5LIK+UlXATpqJ8gfLJ9aFitHs0N2ePscLFjnz
7ya3i8F/rc0RVnshJKs27dgab8S3r5IES0TIXGIRn9vljVNFJ7BMLYJycpnZ
4gSCJtmiZtOfxGhUWDe09BH06ksU2VoxOiLHn362wQfGKyeTjqzwxlv3BLu8
Lz4Yk2b+NljnjQ7lnhqvFBrGMZyjbyIIgmL1aWtTaciv7ZbwIgkqJ68Un0qj
0SbrpyKiCHI3iQptd9BQ3r+/7lEsgUTUunFkN4249HX+5esJrpe6OKrzabQY
b3z4czvBgeLbibJbNC4OhC5gnyIYCREIFHdoOJy5NRR2hkBOHXredpfGnlD+
pYNnCQKjZIuDVDRiy4anmf9FYHCcwPFpoGG/sbj3nZLg17xfaqlOGjvf9+bf
qCHQLqrePvcVDX1BeLD+AUHAoJBO7qIRvfSeuVBNwA6jFN09NOZdyE1QaAge
25xL1uhp9K/5PnDXEwK/amsP1mcaq6aeHb7zL8GlxLQO/0Ea9TVWV77qCPY2
LVtaYaBxzvWVw4YXBF/+uG7aZ6QxRRvUePYlgVTsVCGgZiE949rOF68Jmjv2
yVePmoVPhDfPoZtg/oEBbpH5LES+3PsptIfgPw4O/eg=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {13.815510557964274`, 13.815510557964274`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9, 3.7105198604481077`*^9, 
   3.710547789842683*^9, 3.710632339212097*^9, 3.710632372187998*^9, 
   3.7106326202691507`*^9, 3.710632818196014*^9, 3.71371348052662*^9, {
   3.7137278510158567`*^9, 3.7137278611082373`*^9}, 3.713728656877761*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
og==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDxJrWTTHrRBwedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AFUpb/8=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
6Q==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIFD/p7mAy9nMx140LW+Y5o+gi/+4VDX
RwcEv2VvFcPkNARfauUkwW2dCL7if6kNGmsQfLUIkwNtFxH80PNrs9O+IPhN
njs6DKUM4XwFPWNjH3sE/7kBX+WLRAR/rVmVQUE7gj8nyq25chWC/+dFU/Kl
Mwh+VFXAVrFPCP4jzbpFd0SM4PzMOzaMfVYIfsLP7Ld98Qh+o8nvEsEmBH9B
kXRe/XIE/+W52Uz5pxB8A721HF4fEPwX3/XmlIgaw/kn7wucVrBA8Feeas7e
EYvgb7octvxiA4Kv4z6rwGoxgr9kb97qvhMIvlvQ4saU1wj+85cZJ1UFTeD8
H6/nzTMzQ/CNeUz5T0Yg+Dn6MR/d6hD88wWP89wWIviLZG5XTj2M4JecTv52
/gWCnz/Dh6+H2xQRnhnHphsbIvg9YQv2xIQg+ArrX+VdLUPwN3Edm2Q5B8HP
a2EMkt+P4Gswnmv68ATBD37B5SjIZQbnL3+7fNZmHQT/19erqY5BCH65TMqZ
gFIEP2Vt0oH10xH8AMdPqr/2IPipnx+qHbuP4LtOnKxu9BnBV9V31ZjHZg7n
AwC3VKen
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
w2KwgJ6nZAPZrB1ueV04/AMsn0je
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx39YzAcAx/Hz7RddcurOSanu6uq6um9dP76MPH36TcuZGClPcUtHu0my
hAvR0qZ7jFo40Y78mIXC1cSu72atrB8qdamHFPNcIUQr3Vxmf7yf1/PmydLj
NhAMBmPxx/73xLTIAp6CwKOyNfemLeXQA+EJGQG7CNwi7vbtjeTQSuO1VNZB
Aps9+SlHFnFobtX0tcNqArzYr4fOBHHoq3L58r8uEri3pXGzVsyhK0Jae003
CejNORcdBRz6PDcoRdJCoOfY+qe5Thy6tIHYfuwVgT7amChlcuh8z1OlqYFm
GGKJlxgG2XSCodNA6MzwofKwm0M5mybkYbsXtpvDeyThvnIOm45Lnftzxbgl
9mcMh0ZY2dNJebkdG/+1Ro5sIZlqMZOe8Gogh5/ZYp2LhLHY0ZauLhJFM4/N
xDDvzI/O+mm04HTjQ5sSe9hayDMdey3oPQ+sx/p1HCR8/zgss2AKren9VXj8
IRdi4UStRYmxbsdgdJiu2wGtr9tWZlx6UxfMz3qofe+I/fZ+bYKAv+u0X+5K
nmOaixfOXIYVTdcVbjlSJWS7QvfnwVrFit4QvqoM1e486Cq40kP+L0OKJLPD
jXw+DBNttXLmeIjxuSz/POUGlxaPrvYLH0KCSYdFzPnuOJquqB/vMYOsw2rK
+kABfBmeXdImK+QUNlq4RnmgdNBrMMbOBpmtozk/RHpiQfZXKaypLCR7vKW2
JQhhJ0zTt0js4NvvZYpI88LVE92y9OVs9PCaqWa5CJYuTvqc2FnYsQNVt3Z6
I6rVvClp62yMxruWfbHLB8GqP85VZM7BCvV89fssMYwz/intS3PC+RG+fvIA
idO6O+wnhc7Qt2V/U5Pvi7262k9Eka4wydpqFUv9UH7tsVfsGh5yeOoX8a0f
3y9L5Z7IxysWQ6CLlaBgRtjky9VuWMu8a+rukkBm3n+Fn+aO6jsrWC2f+2NW
7lCnTZoAzKLQ21n9/qDt6xes2+OBOFWT8vjGAEin9lw6e8gT+Z8ytxw1BKA6
L75YoxJCy75uFpMRCDb34k1LjRc6NHbt3SOBkErkq/inRRhInn62Lz0Iiktr
J31PeeOZMMNB/S4Iu0PcDeeu+GBA+12DXzYFxZrV4Z2XxZBuGFWm7aQQ9Yvo
cvQ1MW6xk/zLlRT43MnZN2vEOJopOcnNpXC/s/ylhhZjqeT+1slvKUR89uZ4
eocYNyoEzs0nKDhFq15bj4lx+Ay9TV5HoTnw9snQRSQm40QizW8UzhWVTNWG
klAQxY96b1PY92ZTpjCKRPR6eYy0kcL8StaSGctImJxtXYPaKZR7J40+WEdi
kzqxiXhCQcmfiMnOI6FfUr83+CmFVbnN2ucFJCImSCrLQMG/v8w1WUXCJZ7Q
DD2nMHgyaiyyhEQX56estlEKKx2KNfYXSITV2/lYj1Mgs+U2BypIVG5TDoRP
ULDuXrDdWEni4L1lsTUmCnTxQOzADRLv9t2YMvKBgvrt9ZqVOhKp/m41ImIe
suIK+I2/k+gcKFSkmM9DXFWiamEDidDDY7xTlvPgw/J9d7mJxH/GpPTY
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -11.512925464970229`}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-11.512925464970229`, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-11.512925464970229`, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9, 3.7105198604481077`*^9, 
   3.710547789842683*^9, 3.710632339212097*^9, 3.710632372187998*^9, 
   3.7106326202691507`*^9, 3.710632818196014*^9, 3.71371348052662*^9, {
   3.7137278510158567`*^9, 3.7137278611082373`*^9}, 3.713728657382225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nucleonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon", ",", "protonpauli", ",", "proton", ",", "nucleon", ",", 
    "elasticnucleon"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nucleonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon2", ",", "protonpauli2", ",", "proton2", ",", "nucleon2", 
    ",", "elasticnucleon2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.704513803952091*^9, 3.7045138230540257`*^9}, {
   3.704513948536606*^9, 3.704513948814498*^9}, {3.704653721000185*^9, 
   3.70465372112542*^9}, {3.705885699054138*^9, 3.705885718124003*^9}, {
   3.706591220601418*^9, 3.706591220745357*^9}, {3.707578161324291*^9, 
   3.707578163393965*^9}, {3.707578739435869*^9, 3.707578739881011*^9}, {
   3.70777326604653*^9, 3.707773268884601*^9}, {3.7077749261809998`*^9, 
   3.707774950189661*^9}, 3.707775158698888*^9, {3.708288718620987*^9, 
   3.708288719939405*^9}, {3.710507740401231*^9, 3.710507750424079*^9}, {
   3.710632684400735*^9, 3.7106326872978992`*^9}, {3.710632813559716*^9, 
   3.710632813660969*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 16.11809565095832}, {
      16.11809532201759, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9a2x3u4iFqgw29G0hfbSs8Pql0X/5/8C13VYug==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4UjY66x3YUQLSD/pmB
7Xw/Qfdr+wJ+FEAxmtOHQu2MP21hSTw+hRRAcCW+/iLtnD/FNQS+tJMUQA9r
MzoT7aw/dt55waGwFEDfDe5XC+28P9cvZch76hRAR1/LZgftzD+a0jvWL14V
QPsHOm4F7dw/Hxjp8ZdFFkC+m7LDcyTuPxjLexNWOxhADw3VxjJk9j/jurpM
1A8aQBSqRqDngPY/JSIXgwEXGkAaR7h5nJ32P2aJc7kuHhpAJIGbLAbX9j/p
VywmiSwaQDj1YZLZSfc/7vSd/z1JGkBi3e5dgC/4P/gugbKnghpAta0I9c36
+T8No0cYe/UaQLpKes6CF/o/TgqkTqj8GkDA5+unNzT6P5BxAIXVAxtAyiHP
WqFt+j8SQLnxLxIbQN6VlcB04Po/F90qy+QuG0AIfiKMG8b7PyIXDn5OaBtA
W048I2mR/T82i9TjIdsbQOBtUduMsP0/GNPZ0eriG0BkjWaTsM/9P/ka37+z
6htAbMyQA/gN/j+7qumbRfobQHxK5eOGiv4/P8r+U2kZHECcRo6kpIP/P0cJ
KcSwVxxAIGajXMii/z8oUS6yeV8cQKSFuBTswf8/CZkzoEJnHEBWYnHCGQAA
QMsoPnzUdhxAXqGbMmE+AEBPSFM0+JUcQG4f8BLwugBAV4d9pD/UHEAwr/ru
gcoAQDjPgpII3BxA8j4FyxPaAEAZF4iA0eMcQHZeGoM3+QBA26aSXGPzHEB+
nUTzfjcBQF/GpxSHEh1AQC1PzxBHAUBADq0CUBodQAK9WauiVgFAIVay8Bgi
HUCG3G5jxnUBQOPlvMyqMR1AjhuZ0w20AUBnBdKEzlAdQFCro6+fwwFASE3X
cpdYHUASO66LMdMBQCmV3GBgYB1AllrDQ1XyAUDrJOc88m8dQFjqzR/nAQJA
zGzsKrt3HUAaetj7eBECQK208RiEfx1Anpnts5wwAkBvRPz0FY8dQGAp+I8u
QAJAUIwB496WHUAiuQJswE8CQDHUBtGnnh1A5EgNSFJfAkASHAy/cKYdQLY0
Fa3/agJA+xGQcUesHUApNWJW
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9, 3.710515961415608*^9, 3.710519864296764*^9, 
  3.7106323434485073`*^9, 3.7106323751070337`*^9, 3.710632450973483*^9, 
  3.710632687883479*^9, 3.710632814046365*^9, 3.713713506547926*^9, 
  3.713728668443911*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
z0k/Yf+f/w+NEEWL
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkH841HcAx8+Xfl6MG10KueP8uML98mGl7i01/ZKHsoTIpTs1q/zoCic0
WQqhWlznSq0pPG0qbiTbnp6mQouRsmxulkslz233KHJn7Y/X83qe158vlmRf
+C6KRqOt/cD/PjdnzTFWEgVXryi7jGiTWBsUlSzMpHCtKk9XmW4SKyZvSK1P
UBi28u/eWmESM+stY0aVFBYpXrXYNJnE12WysAc1FMJG1NXtT0ziOvHDfuMt
CmsqkpoF703iaqZvAr+TwvJ1yzorHKfFqjbqYPkYBbervf/IJNPifHe1Sioy
x0TivJUWr6fFUboeHdVqjjBDwB51Ng2UbNXh5V0WeJdaQ+srM0O41LG27u1M
rEs96rW2yRyxebndie/nIqJ0ZIvF7VmY8GzzHn1phTHiU3+sjo7GU9xgerkN
dopuW1/XfwTOxXsD877+GBeuTKn7x22Q/Wzu+GCrHSb/Wqm5ttgWVf23PSoG
mHDQ6kekK+cj/UXwqtY+exjeZJoX+i9AAFs+0DC1CBqPGvWX2xei4fPMuIVG
R/BSvnN+sd0BhfvL6j1snXFKF+m6uMAJ7KLzaHRlYUfJJyzHiA+dvyBoks1G
l+i6S/xmFiZfSfKriQv8x6akVjI2ArztV9D9XZHBv+GYkugCSfcss3gRBxd6
q7RtCa7IKrw3w/lTN9w6KRnOl3OQ+tCQdWaNO+q7imOnDrghzu1fkhblgUrP
Iubvx93hM+hpXL3HE18M3RmoVXrgKauDdMi4YHKkTGG5J9LTUd+SsQQaRX+p
Sy0Xhkjn8zszl0IQ05z9oHYJNiv9lVNyL5RWdmfsrF6Kaj37sekrbzw3tDTu
+sELjx8dOqrJ94FtD0PqpPGGUfKoOSmEB//7yz5Duw+yWMrXkQ95cHDRxRRK
eRizpnFaN/JRzAg5o/+bhxj6r8a+Xj7ez3PYS9/LR+P9zdadEQJEtF/Iob3h
g34q8I58UICa08XCmkMChBe1KyoShdAXLxjtoAmRv4G+/6xOCE5I5OCDbCEa
bG+ar08WYct8s7SsOSJ0VzG6+vQiJF+KC6QfF0EbZ3n5j32+yImPsmPM9sVL
j2R75TtfFHBbCzpLfKFtON7GO0SQo+nzS7Am2LTLoNiTQTAqDRytZBC02MYK
vlEQRM+vvdhnS3A2lV/JzCUgBw5bbrAnCOE/STEVELwWcIb4bIKmOo5TxzmC
yGspxdNCgtJLP6XJfiTgXbZ8rtxKYArncqt+JqjcclDZs40giTr9Z/8dArqF
NtQqhiA4XrZ+0z2CYcnN5twdBEYnK2ffLgKVc3RJ4m6C3crodmqIYLbqynKS
SfB43d2cgOcEBzYw9PuyCFZPeBO5jmBoMvPbq9kEiyOpqpFXBK3bQm0c8wh6
7a7KHxkI0pjjw+ZFBKvuMpbOfUug/SVOteIkwfdpCm3QBEGo/H7YwVKCE7+F
btQYCbi9qpaXZwjeHWky009/+JA3M8W1nEAqcNFwKT/MEO13j1US9GgLkxIs
/JA69PTZWRVBYOk4Sz3TD4NlQWVdaoL/AAm98rI=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4AQS70IfPZv7SD/pmB
7Xw/PZ5X5m1/2b8xmtOHQu2MP3j7gNi5C9m/cCW+/iLtnD/5tdO8USTYvw9r
MzoT7aw/6Cp5hYFV1r/fDe5XC+28P9gUxBbht9K/R1/LZgftzD9L0bNyQPnG
v/sHOm4F7dw/mX3TCwzPpz++m7LDcyTuP5fPUs3hKuE/Dw3VxjJk9j/3TUqX
087vPxSqRqDngPY/AcQWpR4E8D8aR7h5nJ32PwdhiH7TIPA/JIGbLAbX9j8R
m2sxPVrwPzj1YZLZSfc/Jg8ylxDN8D9i3e5dgC/4P0/3vmK3svE/ta0I9c36
+T+jx9j5BH7zP7pKes6CF/o/p2RK07ma8z/A5+unNzT6P6wBvKxut/M/yiHP
WqFt+j+3O59f2PDzP96VlcB04Po/y69lxatj9D8IfiKMG8b7P/aX8pBSSfU/
W048I2mR/T9IaAwooBT3P+BtUduMsP0/zYch4MMz9z9kjWaTsM/9P1KnNpjn
Uvc/bMyQA/gN/j9Z5mAIL5H3P3xK5eOGiv4/amS16L0N+D+cRo6kpIP/P4lg
XqnbBvk/IGajXMii/z8NgHNh/yX5P6SFuBTswf8/kZ+IGSNF+T9WYnHCGQAA
QJnesolqg/k/XqGbMmE+AECpXAdq+f/5P24f8BLwugBAyliwKhf5+j8wr/ru
gcoAQE14xeI6GPs/8j4FyxPaAEDSl9qaXjf7P3ZeGoM3+QBA2dYEC6Z1+z9+
nUTzfjcBQOlUWes08vs/QC1PzxBHAUBudG6jWBH8PwK9WauiVgFA8pODW3ww
/D+G3G5jxnUBQPnSrcvDbvw/jhuZ0w20AUAJUQKsUuv8P1Cro6+fwwFAjHAX
ZHYK/T8SO66LMdMBQBGQLByaKf0/llrDQ1XyAUAZz1aM4Wf9P1jqzR/nAQJA
ne5rRAWH/T8aetj7eBECQCAOgfwopv0/npnts5wwAkAqTatscOT9P2Ap+I8u
QAJArWzAJJQD/j8iuQJswE8CQDGM1dy3Iv4/5EgNSFJfAkC2q+qU20H+P7Y0
Fa3/agJAWYP6XjZZ/j8+9JKg
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9, 3.710515961415608*^9, 3.710519864296764*^9, 
  3.7106323434485073`*^9, 3.7106323751070337`*^9, 3.710632450973483*^9, 
  3.710632687883479*^9, 3.710632814046365*^9, 3.713713506547926*^9, 
  3.713728668861331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["protonpauli"], "Input",
 CellChangeTimes->{{3.7137289832072678`*^9, 3.713729055353881*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0], 
        Thickness[Large]], 
       LineBox[CompressedData["
1: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
9a2x3u4iFqgw29G0hfbSs8Pql0X/5/8C13VYug==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-3.398631061774675, -1.3668918007144635`}, 
     PlotRange -> {{-3.398631061774675, 
      24.121896898721086`}, {-1.3668918007144635`, 11.550741414700353`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{1.1049310374210117`, 
        23.0258504130336}, {-0.7797266545592444, 10.963576268545134`}}, {{
        1.1049310374210117`, 23.0258504130336}, {-0.7797266545592444, 
        10.963576268545134`}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{-Log[10], 
         Log[10000000000]}, {-0.7797266545592444, 
        10.963576268545134`}}, {{-2.302585092994046, 
       23.025850929940457`}, {-0.7797266545592444, 10.963576268545134`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713728984774207*^9, 3.713729055866178*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pionall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion", ",", "pionpauli", ",", "pion", ",", "meson", ",", 
    "elasticmeson"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pionall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion2", ",", "pionpauli2", ",", "pion2", ",", "meson2", ",", 
    "elasticmeson2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.707774953653801*^9, 3.707774970470236*^9}, 
   3.707775160738758*^9, {3.708288762336705*^9, 3.708288763886136*^9}, {
   3.710500387190267*^9, 3.710500388107522*^9}, {3.710501409448793*^9, 
   3.710501411172181*^9}, {3.71050778547287*^9, 3.710507795473349*^9}, {
   3.7106327930313597`*^9, 3.710632809213449*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 20.72326583694641}, {
      16.11809532201759, 20.72326583694641}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
//LN/WHOF5g0/tevE7UincSM8/8BSpAhfA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxNl3k01G/UwIXvjBljjHUWY2YilBTCVCK3kibkhyQhWSqRhEoRIluijeyS
FiVtohKVnhQqkkJkD0kJSQtS3u97Tuf9vn/N+Zy7Pve59z7fme25236buJiY
2LVZYmL/+/vwXGfqrZ3yyARpi4odeKA22qgo6SWPDI+cvOPnxYM4kxcpjs7y
KCDEVP1HIA9sW+6e+i2SRxpjB9N3H+dBL+3ksdWa8kgn9ZAxpYoHFs5xtAxV
eWR8KaZN/w0Prl4OS/ysKI8uRhsL53bzYO9Kn4QTEvIoLj7FI2KCB6QDK2Pf
9cihZav93Rvn8sG3aomkTqsc0lAeP+VnyIdX8rrREa/kUNBLfniTGR8yrqtE
qVfIoT9W3g5yjnyY3/c9bFe2HKq4PnNjdSQfbG0u753lKIdo/rLoXS0fbmef
GV+/Tg6B5YVXEU18YH9KCbpkLodmYx8DfnXwoTc6MsDKQA65ztab3DrMh31l
m/xSGXIoJ/v2Yh5JAG0k26GPZDw/7OilpxQBLHew8DWeYSChbGWUo4wApEYX
7egeZqDdQ2c2mSoKIGsObeu8WgZ6avA7X3W2AP4GivcdrGQg1+/ZiRpzBOD1
aMKjvoyB8mLjczhaAtBx/rBlTwEDiWNNs1/qCKDiRIXLw1gG2nZ4/ftNiwWg
1nm7TTacgcROyoteLxVAvPbVTZ57GShYwzZrsYkAbKvSN5K9GOhxX3DnaxBA
31TAejtgoPme21+vXCuAI2SJn4NCBuoZj/nmbiWABYqpGZELGCjkVKzYrnUC
2L+grPMmh4HiPFOG/rMTANfYKnKNHAMZWetaaa0XwGOLTrVuMgM9CEY5ww4C
UELiDdzPsmj8g4mCyEkAbu80laxbZJH1IcU7HZsEUPDN0vngU1lEjypZ6eEi
ABONlP53ubLIdst7+WVuAohbXjqPkiSLNhrb1Z3cIoCGje3+S0JkUd+sNVta
3AWw9aj6ZNp6WQTBX38u9hLAjQtrllcDLt+/ws9+qwAmHuyM/rFAFm0Rt89x
2yaAlW9PPJujIouSOcEPXbcLIGm0RMZBShZlURdj67wF8Faq1T76Bx2V31pf
oLtDAAK16fTiXjpKk3rcJukjgNsO5mpyD+loR/Lesnhf/L527fCGQjrqDix/
brRTAKL4pGu70+koOtNevwXn5LyisdwYOrLfZyPw8xNAR1mTsD6Qjuz0pqu+
46zZOHHwjxsdPbActA3cJYCAL9zHOtZ01GzVPfIe53JsBcl1KR1NJI3WWfgL
QIK/zSpRk47CVXYy83C2XpJwslyBjhxvfpocxjnN7nrzJzE6Mr9teVZvtwB6
fF9z2CMy6LpXqf4OnLVjfmwRtcsgGL7YdhrnvWfY+fufyaDz195W3sW54q7p
50t3ZFCMr7t8Pc5SDR66b8/LoNTLBV/bcLb/FLsXOymD+kd9YzpxzhEvLDMM
l0FrjcrHm3EeUKn/6+Urgy7oSmx9irOe0bdVKRtlUMFj+lQBzqE2ygmV5jLI
1EOyLRrnp97G9WP6eD6H/bQ24EyPclOYzZdBzeIGmCrOTlmHnWxpMsg240pq
O36+8yWXzhyapKEPy45OncT5S92L3hsDNOScNulgirNwYESrq5GGZH0Tqnrw
+kXOyO+SeUxDeVPGfgdxfsFaXGxyg4YyAqN2yOCsuMjl185sGso1M3+Xht+H
m9Uhk+wjNHQ25H0HE+ex8JrqSU8auvv8sMIs/D6N04ek59nSkJT5lUgf/P5j
imTtnExpSOHo+PfneH+w+ja232XSkPUi5LEH7x8QDY7uqZNGA7fNl+7E+2+f
vat3b7k0isDCufl4fxa6NnTZXpFG7ZoXH7fi/asYeO/lgjhppPbXKW+BpwA+
ZR65+tFMGi3gcJ6ewOeBd3FazXGhNJq2fPMyc7MAHG4EZD3lSqONF8sW5rri
91fplHBukoqmJrSXpTnj/Tc019ulhIpELuLrVzsKoOZHTtfzc1T0pSfni/oG
AUzPMByXnKQi56+F7n/w+fVWnDRX2kVFvuM/FM/h821i+lztlSYVFY+PW163
FsCH4z5dK7MoqL97jPlhhQA4mZ0bbh2hoNg1qeIH8H1ie8HuJX8/BaVqnzhH
MsP7t3Tpg+n1FPS0gaTDxPfP8R5K1l0ZCnKuKb5DEgpgyaLCDdpRUmh4P1lz
3jwBHG3+XCe3g4xO+fVOPqLh+6vwUnirIxkZh6r8GqDi9T7kufDsajL6zP45
ScX3a8S8thM66mR0LOG1jiUmgMDw5/ZrukhIaiBE1vo3H5w0ClrDHEjIazYj
u7idD5r7tvV/BAy9Ge5OupnBhyeKPb8fsiXQf7Ue0akYH2BH4zidLIF2jiU5
O4jxoeJ+9dCW7+JIKlKkIPubB+We19tnvRJHTZweywNfeVBUFHp/dYw44sLa
Uk47D3KslQ6+HJmFbny95nbpJg+CYyynOp6IoVAK2U3akQcOgz5jv9qnH9Ud
/h6zLVMVKrk0BZk53x9dyStcfo3HBSX19rxEzw+PjMzN9a96c4BzwUKl5Mrd
R3aBSfnJF1nA5ekrvhvrMKPkZDbcG1eGD/dkBFtzv5qV73P6NK2sBBduKzfe
c580+2mzvO2PkwKs0FQNPPBbDBY8GRQtLJQDCftXheIXMRi0+nq8840sfF8Z
a4umKRAtZmzhW0+DxTn9MxmyVDARkHcoVtIg9Meqm4FqVKh2X9hTdYcGYgXi
dHURFd5X7sTMztCAJhNZG5tChaR3flGJfjTQaAm1sNKWBrWvUkYZNBo47gww
ebuRBnZ//tq22ktD5tNXQzd8aRDz+m9E7Bpp6FDVzY4Pp8GqRfYpy0ykwbNh
eHLJBRo8TDXLq9SQBn+jnaXZIzT4QW88bzpJhfiZbYs8YmWAs1ppZOwcFe6l
uMz9UkyH707o7KUpChio7cn1q6JDQ9J9pdKvFLhRdFRxuIUOqO3+kdcDFMh/
WSY2Mk2H3g2Zx+c0UiCZzHo3aiELhX/3GZhfo8Cug00J422y8IU+vjvInQKn
bl3aFx7FAG+adsmLBimoP1Bc9PAoAwzFEykLnkkBDSqG/qQwgGdnGJr1SAqO
1Dd7RFxigOimdU3aDSmIGJK0OVTLAHrGzialY1Lgp+GlGaUkB02kgUADaymw
yOS3xFyRg91r+04rNJKBvkMiRKNYDtLjm13d68jwVviRU10uB870TLfSKjJs
b7rhRq6TA1phByvmHhniZJcPJIzIwWDSg/MZuWSojnX9cdxAHhzMHofe9CPD
cQdI1zWRhzKf5aV528ngqD5naYO5PGz3fGme406GATQUJucoD3uyrzgUO5CB
NB0qefqAPLRc5Vg5m5JhTVCmQuZDeSidNF2TySADY0X4naXV8sDQ3xypK02G
VlmPjW318hDM5Yg3YGTYcX1utkqPPGhM9LTq/ibBkcFStVxxBdA9djPXd4AE
z9ze6l9YowBXkgQhLypIILJSsL3+WgGi4hKXc/eToMHZpV6qXQFEhtzknCAS
OPlesN7arwATkvsPzPUngXeCwVqVXwogkf6tx3MbCeJq1q9M4CpCW8HIfx4O
JHiy6rThNm9FaNIYzAo3JIHl+o5iFKAImjXB/iV6JHjjOUefG6oITiWHbb/r
kKA36vaCxiRFyH/RxE7XIIEYatJcUawI5r8nr29hkmC5iRJb9Y8i9EfGvB6f
xqDaanP6AZISFOkXvWiexMDGJV+pSVYJDBNUtSt/YrA51Eg+UU0JfGy3Dpd9
xSDs3gbpyTVKIHhOXjbnAwaSz84kONgpAe/vPq5TLwaJLR/IRc5K4P/nomRa
NwZZP/dJeu9SgpGUk6W6bRiUGab9aUpWgkpsi8W7VxiAeddBvRwl2Dsq+uPy
EoNn6zWnEvOVYHi++obBFxi0Bt39ufKeEugGs0tUqzH4WfR2tKhTCWwKK0om
H2BguIDZmzRXGfwOzvnkew0DC/PFNSJ9ZUijvL97rhADJ5eN1ySNleEjL027
pwDPPyE9OMxKGcyDWpr35GPw9ANT2s9fGYatLX59z8Xg7fTir1r7laF4f06R
9xl8ryg4NfcdUob0hKHi99kY0FZmnHU5pQyHXnp7DWVgsCGXZWh1WxmWLl4y
zyEFgx13lrDJD5XhSsWH7plTGITWOf2trFKG6MAPkcUnMcidynhm3KIMn5UN
7HWOYzDgyN6sPaUMbtXVfQEJGEzsWrpyQJwJd0Tvc+2PYECN3aR1XpoJlrHl
/cbxGCwsyRxjqzLB0xL18GIxCJblxFGACVNww9IgCoMjmsY7q0RMWODsShNF
4vU3dbaNsmNCaNjvCc9DGFTszOJMejKBc32p+tVwDBoOl8/c3skEs+TvotYw
DHoz2/oD9jLB/GWrjzTOpGecm4OxTFgUt2dXdCgGrG7j0xeP4/EvbF7yLAQD
7Z/OIe7pTNg/3Fovj7PNnOxVrQVMsKEp65btxyAtUqW1ppYJMdP3Atfuw6Ag
fdnD6CYmjFXwbe7vxaD8hst5s04mONg+Tl+Ec1dHtl/pCBOMOn+t0t+Dwdfx
+3Z7fuHnNzA7cS8IA3HpDqGuGAu+nNBkr8ZZcyl31mU5Fty6k1C+KxCDJbYm
A54cFhzDxsspOFt6u9by1Fkw0tdSWxiAgWtEWFHbfBYERj55b4uzf2pOapoh
C6ry1o793o1B5LUHofamLDjQRhq9inPyk44tdAsWFNXmvXLHuXSMqx23kQWV
Vbq0d/54vdeeG5p2Z0HWXPa+dJydz2lc3+PLAjvG7a0uOOtMXvH/vIcFuydf
1s3B+a/tQj2PcBbIZaw8O74Lr39B8VhLHAvuzZ5+WYPzObHFJTYnWXhe45bn
cA5yur+3KpMFi8X1pSJxNi8yE5pcYMFwbe0vL5yVpZ7+Kr7GAveRz9LrcB7c
Iiqbd5cFHcurhMtwLi+tC817xALxa+d8F+KcKGtnwnzOgqmDLZmaOLt6N/85
9oYF5IT6u+o4L3y06ZFkBwu8w2ZKNHAWY3ZFHvzAgnzy92gdnN/4e678NsIC
Y+4a9hKcL1YPSPhMsCBtdv52Ec7BvJ1V3bPYcHhendtmnEXBo3GO0mz4oZb0
PRhndv0e0UtFNphJ13BScf6sMUEx57Hhsmrg01KcH4SH1ZZrsWHXrFP9XTgf
bxY7pq/PhuU/zfypeP3cF8TaFBizQX7mioMxzotiKQy+ORsipOmJ/jhLdh57
nbqODZH8CsnLOL81lE+hbWTDvRD+nT6cLyelOUS7s0HzXuGJOfh9HujnKE/5
sGHL76F4H5wtTc62BOxhg0gq+lQxziNDl53d4thgdOT05f/tF7RKh9t8gg2u
zbey83FOzi7qtMpkw8V3vgF/cTayKnNfeo0NPc6Niffx/iNdMFUrusMGaY+a
cj7er61Tj/s0H7HhqltPVjzOYYUvtiu+YcN96hczT7zfbcT/m5vYzgb7hprh
Jpz5zo2fZn1gw/OuLJ4VPh+VlA6/0V9scBjobF+BzxPFZzjohSoH4tz8kzbi
89aGAg1XaHHgui+F/QHna6yfP0r1OBDcM79h3wEMbJ/9PZC/igMrP21JycPn
NU2LcSjShwMUg9Q1HHze5wwsShTe4YDJ2rXhqfg+SXZS0Iuq4EDfPt/d6w7j
/VA73lRbwwGpnueN5GgM2m/e5nm0caAppu9VdAyuHyIsTpzhwDLy7PPp+L6a
JWP8rmetCihFd9lr4fuuy2CFVmKXCv7+ifffzMHA+tLsuuaPKtBd98bzEr5v
y1nigYIxFRgveeaai+/jtD+V5XckuKBf+Otych4G62rMbXrmciF2dffHRPy7
74GzaJ/RHi78PMwpuI/v/8yo/550k1WhcejP8sGHeD6/ya+OMlThi4rujdEK
DI7uQ21GbJy/4AP0CN/PPvrfErVVwadgiQS1Ep9fO4XZS9apwqegy7+N8PeG
O7sl4mSyKozcT5wsqMcgD7kZr1DlwW4HvnU//r5dmtl16/wiPmhYndBSkiDB
K0cbV3q1AKjx43L5NiRgnh0wbu2aDRuuv0U2J0nQZywey/umBpkbNLFTL0hw
YSTfBXHnwNG4AGcHCTLcTLGU2W2gAXWuVxcEGpChyHa/VYiHJpTd6xkv9SKD
kYfWj5kELZBwbJ9xOol/33i1hqTkzgXrm7arhfj3U12YXOLhF/PAZ0Vwvngv
GbrirfZH9GrDxRo1n59kKdg7IPXq5/f50HLM86KDjhTMuNqUvOAtgM2Lf+yZ
sJeCt09PB101XAhzTBf22AVLwTlzr4qPHrrg+Pta/3C2FHQ4ZwZlmOrBSgZ6
7FshBfMeVi47WKMH17Pfzy3sloKA+Xq10pv1oTnyrzZfggKb5XnPzg/qw+ml
f9MK1SmwGrNN/HhoERjKfo5xsaDA6LlVMb6KBiDiKI+0e1PArLT083iuAZjM
+6KVgr9sCa27mfONDMHuS9T04csUCAkquLXjsSEokt1D+6soMP/u+ah+SyPI
7Ut5lt5LgVbsPZPeYwTxegbdgbOoMCn2tcW41wg2fF4U8FOcCpzpv+ne/Uaw
TWHUWkTC/xf8knE6PUDIN3/jsh4PEvKI4fmtw5+NgDTBW8CVokLeoHEGZ9gI
HP7pP+5b67RmlJD3djmx9o4RLNnm3Zo3bgTTz8cgWZIKGs3BGS9/GMH2f/4t
GmKdpn4ZAfZPf0ftaZbWFGGfUH2hdf00kU/h4+KMyL+Efd2Dx07XxYQg/ybC
Qp5KheHSBlabOMH0ku5WEiaE1ZfWSuvRqKB3YyTDgCwE839sd+WPkztFCK9V
4p3C6FQIukhjH5Mm7E+fVXlXJkPwnSztzAFZIexX0BUTk6PC29SlmxTkCfnE
SREbFIl47KSN7/yUCf/G8dszM1mEvevhfZuqOcL/O394eAx7nEv4yz2Q8o7P
F8KBf/poz/lM69mEv/f+tzaFqBPnEfdF7EsaQnhwj5NTrUAF9W2v3r3REsKb
f/rm7l2ZM/OI+Ntdhjfp6AhB7l+8eMdp9qaFhLzATrotVo/gF9acrOJFQrjS
cNzRj0eFoTXznLsNhRCWvL6zW5kKtFVLOLTFhL7NUsesbcsIPqW7l/PIjOBi
7ei2oRVCuP8v3yaN5CyWOSH/ITjnvNqCOK8yt4gTJBKCZVb5fQ8OFRYzH7Xl
WhLxneTrs2qthXDwH4fKdDpP2BCcLfWFo2FHxHsg8bvNbj1h3/WXkh2xgZDP
TLJcrm4UwpRyp6e+OhUEP7RUWjcR+iu/CtslXYXwobXnl8Q8KngNrc7WdyPy
ixlwcHFzJ/jSey+VRE9Cv6YjqL10qxDW/pMPtkRl928n4lMbT7rI+RDx5tef
VVm+k6j/4Ky72Vd3/T//RnUq7ABC7uXTmx0XRPgXnJlQ+b6X4K4Geo7HfoKz
JTW4r0KI8zotWZZjEiaEgn/+lP3suIURhH7TWe8cZhRxnlON4dzYaMLehnw6
51ssYU9bVsh1PyIEOyWe/yE9vJ/8Uc7Lo0KY/Kcff/4td9kxwp/52y85BScI
f+JUCVXlZMIembLPRJ8mODxQV3UsjWDj/NVn3DIJnmh1Ua3LJvwHwRHVy3kE
D1++rXo4n+DC9hdnRi8TvEP2vermQsKfxqpfZ15cw+vhmHrsjTW+/4JleEtu
CsH+nzyvUD03/xaR/+aupTyF20IwiXW2mjHG97G8bW7kXaI+y1Kz9GXKhND/
L15aSFiuy30i3vrrybznD4l4jPcFuUJEyOsVH/EuVhL+E0XNuXJVhFwUNsQ7
VEMwqWjW2S/PiXhP+ph85zrCPpK58GxNvRBM//FyK3O+0WuiHr8jnM+ebyT8
3SsO4DPeEvkFD8SdDW8l9A04Z/hDbQR/XVdy1qmTiHcj6jm/ulsIon/2URdb
45Z+I/zHPtSZnUta/H/+/wfq+RZP
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz6PUyZ5bg0MQLSD/pmB
7Xw/6Cfh+uQbDEAxmtOHQu2MP0D8m3xbKgxAcCW+/iLtnD/wpBGASEcMQA9r
MzoT7aw/Uvb8hiKBDEDfDe5XC+28PxWZ05TW9AxAR1/LZgftzD+a3oCwPtwN
QPsHOm4F7dw/pWnb5w6rD0C+m7LDcyTuP8tngJVFyxFADw3VxjJk9j+WV7/O
w58TQBSqRqDngPY/2L4bBfGmE0AaR7h5nJ32PxomeDserhNAJIGbLAbX9j+c
9DCoeLwTQDj1YZLZSfc/oZGigS3ZE0Bi3e5dgC/4P6zLhTSXEhRAta0I9c36
+T/AP0yaaoUUQLpKes6CF/o/Aaeo0JeMFEDA5+unNzT6P0MOBQfFkxRAyiHP
WqFt+j/F3L1zH6IUQN6VlcB04Po/ynkvTdS+FEAIfiKMG8b7P9WzEgA++BRA
W048I2mR/T/qJ9llEWsVQOBtUduMsP0/y2/eU9pyFUBkjWaTsM/9P6y340Gj
ehVAbMyQA/gN/j9uR+4dNYoVQHxK5eOGiv4/8mYD1lipFUCcRo6kpIP/P/ql
LUag5xVAIGajXMii/z/b7TI0ae8VQKSFuBTswf8/vDU4IjL3FUBWYnHCGQAA
QH7FQv7DBhZAXqGbMmE+AEAC5Ve25yUWQG4f8BLwugBACiSCJi9kFkAwr/ru
gcoAQOtrhxT4axZA8j4FyxPaAEDMs4wCwXMWQHZeGoM3+QBAjkOX3lKDFkB+
nUTzfjcBQBJjrJZ2ohZAQC1PzxBHAUDzqrGEP6oWQAK9WauiVgFA1PK2cgiy
FkCG3G5jxnUBQJaCwU6awRZAjhuZ0w20AUAaotYGvuAWQFCro6+fwwFA++nb
9IboFkASO66LMdMBQNwx4eJP8BZAllrDQ1XyAUCeweu+4f8WQFjqzR/nAQJA
fwnxrKoHF0Aaetj7eBECQGBR9ppzDxdAnpnts5wwAkAi4QB3BR8XQGAp+I8u
QAJAAykGZc4mF0AiuQJswE8CQORwC1OXLhdA5EgNSFJfAkDFuBBBYDYXQLY0
Fa3/agJArq6U8zY8F0DJ1GtS
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      20.72326583694641}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {20.72326583694641, 20.72326583694641}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 20.72326583694641}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775161205503*^9, 3.708288764403833*^9, 3.708289255457758*^9, 
   3.7082892968292437`*^9, 3.708292244979699*^9, 3.708344025227751*^9, 
   3.7103508964247837`*^9, 3.710500107105405*^9, 3.710500388661186*^9, 
   3.710501170077609*^9, 3.710501339207707*^9, 3.710501411887267*^9, 
   3.710501564921658*^9, 3.710506830697893*^9, 3.710507795969468*^9, 
   3.710508126060598*^9, 3.710515028583988*^9, 3.710519869727491*^9, 
   3.710632347071649*^9, 3.710632398188032*^9, 3.7106324538071747`*^9, {
   3.710632796127961*^9, 3.710632810369072*^9}, 3.713713511078515*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkH841HcAx8+Xfl6MG10KueP8uML98mGl7i01/ZKHsoTIpTs1q/zoCic0
WQqhWlznSq0pPG0qbiTbnp6mQouRsmxulkslz233KHJn7Y/X83qe158vlmRf
+C6KRqOt/cD/PjdnzTFWEgVXryi7jGiTWBsUlSzMpHCtKk9XmW4SKyZvSK1P
UBi28u/eWmESM+stY0aVFBYpXrXYNJnE12WysAc1FMJG1NXtT0ziOvHDfuMt
CmsqkpoF703iaqZvAr+TwvJ1yzorHKfFqjbqYPkYBbervf/IJNPifHe1Sioy
x0TivJUWr6fFUboeHdVqjjBDwB51Ng2UbNXh5V0WeJdaQ+srM0O41LG27u1M
rEs96rW2yRyxebndie/nIqJ0ZIvF7VmY8GzzHn1phTHiU3+sjo7GU9xgerkN
dopuW1/XfwTOxXsD877+GBeuTKn7x22Q/Wzu+GCrHSb/Wqm5ttgWVf23PSoG
mHDQ6kekK+cj/UXwqtY+exjeZJoX+i9AAFs+0DC1CBqPGvWX2xei4fPMuIVG
R/BSvnN+sd0BhfvL6j1snXFKF+m6uMAJ7KLzaHRlYUfJJyzHiA+dvyBoks1G
l+i6S/xmFiZfSfKriQv8x6akVjI2ArztV9D9XZHBv+GYkugCSfcss3gRBxd6
q7RtCa7IKrw3w/lTN9w6KRnOl3OQ+tCQdWaNO+q7imOnDrghzu1fkhblgUrP
Iubvx93hM+hpXL3HE18M3RmoVXrgKauDdMi4YHKkTGG5J9LTUd+SsQQaRX+p
Sy0Xhkjn8zszl0IQ05z9oHYJNiv9lVNyL5RWdmfsrF6Kaj37sekrbzw3tDTu
+sELjx8dOqrJ94FtD0PqpPGGUfKoOSmEB//7yz5Duw+yWMrXkQ95cHDRxRRK
eRizpnFaN/JRzAg5o/+bhxj6r8a+Xj7ez3PYS9/LR+P9zdadEQJEtF/Iob3h
g34q8I58UICa08XCmkMChBe1KyoShdAXLxjtoAmRv4G+/6xOCE5I5OCDbCEa
bG+ar08WYct8s7SsOSJ0VzG6+vQiJF+KC6QfF0EbZ3n5j32+yImPsmPM9sVL
j2R75TtfFHBbCzpLfKFtON7GO0SQo+nzS7Am2LTLoNiTQTAqDRytZBC02MYK
vlEQRM+vvdhnS3A2lV/JzCUgBw5bbrAnCOE/STEVELwWcIb4bIKmOo5TxzmC
yGspxdNCgtJLP6XJfiTgXbZ8rtxKYArncqt+JqjcclDZs40giTr9Z/8dArqF
NtQqhiA4XrZ+0z2CYcnN5twdBEYnK2ffLgKVc3RJ4m6C3crodmqIYLbqynKS
SfB43d2cgOcEBzYw9PuyCFZPeBO5jmBoMvPbq9kEiyOpqpFXBK3bQm0c8wh6
7a7KHxkI0pjjw+ZFBKvuMpbOfUug/SVOteIkwfdpCm3QBEGo/H7YwVKCE7+F
btQYCbi9qpaXZwjeHWky009/+JA3M8W1nEAqcNFwKT/MEO13j1US9GgLkxIs
/JA69PTZWRVBYOk4Sz3TD4NlQWVdaoL/AAm98rI=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz66jnw6hR4AwLSD/pmB
7Xw/YrrBuA4QAMAxmtOHQu2MPwnmBjeYAQDAcCW+/iLtnD+weiJnVsn/vw9r
MzoT7aw/7tdLWaJV/7/fDe5XC+28P2iSnj06bv6/R1/LZgftzD9eB0QGap/8
v/sHOm4F7dw/R/GOl8kB+b++m7LDcyTuP2glRBHRKvG/Dw3VxjJk9j9vzJBY
sLHjvxSqRqDngPY/ZZKtpUZ4478aR7h5nJ32P1hYyvLcPuO/JIGbLAbX9j9F
5AONCczivzj1YZLZSfc/Hfx2wWLm4b9i3e5dgC/4P8orXSoVG+C/ta0I9c36
+T9HFlP48wjZv7pKes6CF/o/MqKMkiCW2L/A5+unNzT6PxouxixNI9i/yiHP
WqFt+j/0RTlhpj3Xv96VlcB04Po/oXUfylhy1b8IfiKMG8b7P/nU65u929G/
W048I2mR/T9aJwl/Dl3Fv+BtUduMsP0/MStgvvBjxL9kjWaTsM/9Px4vt/3S
asO/bMyQA/gN/j/ONmV8l3jBv3xK5eOGiv4/oIyC80Aou7+cRo6kpIP/P2aV
5dHJLKe/IGajXMii/z/dpEHPUkijv6SFuBTswf8/nWg7mbfHnr9WYnHCGQAA
QI5NVx23a46/XqGbMmE+AECKuucMuduPP24f8BLwugBAYrksLFONsz8wr/ru
gcoAQKKxfq2Of7U/8j4FyxPaAEDpqdAuynG3P3ZeGoM3+QBAZpp0MUFWuz9+
nUTzfjcBQLI9XpuXj8E/QC1PzxBHAUDMOQdctYjCPwK9WauiVgFA9jWwHNOB
wz+G3G5jxnUBQDMuAp4OdMU/jhuZ0w20AUCvHqaghVjJP1Cro6+fwwFAyxpP
YaNRyj8SO66LMdMBQPAW+CHBSss/llrDQ1XyAUApD0qj/DzNP1jqzR/nAQJA
UgvzYxo2zj8aetj7eBECQG0HnCQ4L88/npnts5wwAkDV//bSuZDQP2Ap+I8u
QAJA531Ls0gN0T8iuQJswE8CQPb7n5PXidE/5EgNSFJfAkAGevRzZgbSP7Y0
Fa3/agJAk9gznNFj0j+dlY46
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775161205503*^9, 3.708288764403833*^9, 3.708289255457758*^9, 
   3.7082892968292437`*^9, 3.708292244979699*^9, 3.708344025227751*^9, 
   3.7103508964247837`*^9, 3.710500107105405*^9, 3.710500388661186*^9, 
   3.710501170077609*^9, 3.710501339207707*^9, 3.710501411887267*^9, 
   3.710501564921658*^9, 3.710506830697893*^9, 3.710507795969468*^9, 
   3.710508126060598*^9, 3.710515028583988*^9, 3.710519869727491*^9, 
   3.710632347071649*^9, 3.710632398188032*^9, 3.7106324538071747`*^9, {
   3.710632796127961*^9, 3.710632810369072*^9}, 3.7137135114871063`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton.pdf\>\"", ",", "photonall"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron.pdf\>\"", ",", 
    "electronall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion.pdf\>\"", ",", "pionall"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon.pdf\>\"", ",", 
    "nucleonall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton2.pdf\>\"", ",", 
    "photonall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron2.pdf\>\"", ",", 
    "electronall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion2.pdf\>\"", ",", "pionall2"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon2.pdf\>\"", ",", 
    "nucleonall2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70777510737917*^9, 3.707775131585671*^9}, {
  3.7105134353191557`*^9, 3.7105134551898746`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["$$$", "Subsubsection",
 CellChangeTimes->{{3.710807197261438*^9, 3.710807200931176*^9}, {
  3.7108072677700872`*^9, 3.710807270008362*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xhad", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", " ", "\[Sigma]inel"}]], 
       RowBox[{"Log", "[", 
        FractionBox["\[Epsilon]", "10"], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]inel", "\[Rule]", 
         RowBox[{"0.1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]el", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", "*", "\[Sigma]"}]], "*", 
       RowBox[{"Sqrt", "[", "10", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", 
         RowBox[{"1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7059417325703278`*^9, 3.705941734089673*^9}, {
  3.705942481098905*^9, 3.7059424812484827`*^9}, {3.705943959443667*^9, 
  3.705943961182448*^9}, {3.7059471483075314`*^9, 3.705947148786978*^9}, {
  3.705947207793386*^9, 3.7059472079054747`*^9}, {3.7105020479850693`*^9, 
  3.7105021791007*^9}, {3.7105035793080053`*^9, 3.7105035816738653`*^9}, {
  3.7105081398855143`*^9, 3.7105081400187187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Xhad", ",", "\[Lambda]el"}], "}"}], "/.", 
   RowBox[{"\[Epsilon]", "\[Rule]", 
    SuperscriptBox["10", "10"]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.705945716937483*^9, 3.705945755799615*^9}, {
   3.705946410532455*^9, 3.705946427577038*^9}, {3.7060325196014433`*^9, 
   3.7060325225371637`*^9}, {3.7105018300920277`*^9, 3.710501862804953*^9}, {
   3.710501914016526*^9, 3.710501914279923*^9}, 3.710501970585722*^9, {
   3.710502187533626*^9, 3.710502190284931*^9}, {3.71050222788789*^9, 
   3.7105022335907393`*^9}, {3.7106359643502607`*^9, 3.7106359673019857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2.0723265836946407`*^-6", " ", "Centimeter"}], ",", 
   RowBox[{"3.162277660168379`*^-8", " ", "Centimeter"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705947315261444*^9, {3.706032501127593*^9, 3.706032550030827*^9}, 
   3.70603258285816*^9, 3.706063987222834*^9, {3.710501833567007*^9, 
   3.710501863138879*^9}, {3.71050191454672*^9, 3.7105019261077623`*^9}, {
   3.7105019624907217`*^9, 3.7105019709577627`*^9}, 3.7105021905907393`*^9, {
   3.710502229253213*^9, 3.710502233935169*^9}, {3.710635962466468*^9, 
   3.710635967811949*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Electrons and Photons", "Subsubsection",
 CellChangeTimes->{{3.706059348466249*^9, 3.70605935380217*^9}, {
  3.7060593908497257`*^9, 3.706059390969508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["Elpm", "\[Epsilon]"]], " ", "\[Epsilon]"}], "X0"], ")"}], 
    RowBox[{"-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "\[Epsilon]c", ",", "\[Epsilon]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706059448735363*^9, 3.70605945549938*^9}, {
  3.706059582918623*^9, 3.706059604588517*^9}, {3.7060599385677767`*^9, 
  3.7060599578500547`*^9}, {3.710502025387974*^9, 3.710502026025921*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["\[Epsilon]"], "-", 
       SqrtBox["\[Epsilon]c"]}], ")"}]}], 
    SqrtBox["Elpm"]], ",", 
   RowBox[{"\[Epsilon]", ">", "\[Epsilon]c"}]}], "]"}]], "Output",
 CellChangeTimes->{3.710503230070257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "X0", " ", 
       RowBox[{"(", 
        SqrtBox["\[Epsilon]"], ")"}]}], 
      SqrtBox["Elpm"]], "/.", 
     RowBox[{"{", 
      RowBox[{"Elpm", "->", 
       FractionBox[
        RowBox[{
         SuperscriptBox["me", "2"], "X0", " ", "\[Alpha]"}], 
        RowBox[{"4", "Pi"}]]}], "}"}]}], "/.", 
    RowBox[{"X0", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"4", "n", " ", 
         SuperscriptBox["Z", "2"], " ", 
         SuperscriptBox["\[Alpha]", "3"]}], 
        SuperscriptBox["me", "2"]], ")"}], 
      RowBox[{"-", "1"}]]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"me", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"Z", ">", "0"}], ",", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71050229377032*^9, 3.710502315426525*^9}, {
  3.710502366708797*^9, 3.710502408158175*^9}, {3.710502442707308*^9, 
  3.7105024651848383`*^9}, {3.710502548326982*^9, 3.7105025784284887`*^9}, {
  3.7105026593550663`*^9, 3.710502733624035*^9}, {3.7105027706367683`*^9, 
  3.7105027969248466`*^9}, {3.710502839714679*^9, 3.710502870062058*^9}, {
  3.710503249266605*^9, 3.7105032496872683`*^9}, {3.710503332245306*^9, 
  3.710503356627955*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["\[Epsilon]", "n"]]}], 
  RowBox[{"Z", " ", 
   SuperscriptBox["\[Alpha]", "2"]}]]], "Output",
 CellChangeTimes->{3.710503529556312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xem", "=", 
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"], " ", 
        SqrtBox[
         FractionBox["\[Epsilon]", "n"]]}], 
       RowBox[{"Z", " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "*", 
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], 
       ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Z", "\[Rule]", "6"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["1", "137"]}], ",", 
       RowBox[{"n", "\[Rule]", 
        RowBox[{"0.8", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "3"]}]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", 
        RowBox[{"\[Epsilon]", " ", "Mega", " ", "ElectronVolt"}]}]}], "}"}]}],
     ",", "Centimeter"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710503389615067*^9, 3.7105034464378557`*^9}, {
  3.710503565401925*^9, 3.710503575052148*^9}}],

Cell[BoxData[
 RowBox[{"2.479589668292241`*^-7", " ", "Centimeter", " ", 
  SqrtBox["\[Epsilon]"]}]], "Output",
 CellChangeTimes->{3.710503575268528*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Lambda]\[CloseCurlyQuote]s", "Subsubsection",
 CellChangeTimes->{{3.71063306787739*^9, 3.7106330686435537`*^9}, {
  3.710633249467394*^9, 3.710633251211505*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]electron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dedxelectron", "[", "\[Epsilon]", "]"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", 
          SuperscriptBox["Pi", "2"], "8"}], ")"}], 
        RowBox[{"1", "/", "3"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]proton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]proton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7106330839539833`*^9, 3.710633085123887*^9}, {
  3.71063312696987*^9, 3.710633214596197*^9}, {3.710633345102055*^9, 
  3.710633399358563*^9}, {3.710633430636283*^9, 3.710633436819221*^9}, {
  3.710636577078765*^9, 3.7106366022508497`*^9}, {3.7137220707301283`*^9, 
  3.713722082147141*^9}, {3.713722132081929*^9, 3.713722178389945*^9}, {
  3.713728061470601*^9, 3.713728127920062*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]electronpauli", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondegelectron", "+", 
               RowBox[{"dedxpaulidegfermi", "[", "\[Epsilon]", "]"}]}], ")"}],
              " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pionpauli", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]protonpauli", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronpauli2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondegelectron", "+", 
               RowBox[{"dedxpaulidegfermi2", "[", "\[Epsilon]", "]"}]}], 
              ")"}], " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pionpauli2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]protonpauli2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7106334615475197`*^9, 3.710633534532024*^9}, {
   3.710633578185161*^9, 3.710633582784881*^9}, 3.710633613543623*^9, {
   3.7106336651202507`*^9, 3.710633665240654*^9}, {3.710636615612805*^9, 
   3.710636645918812*^9}, 3.710636676720388*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]compton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "comptontot"}], 
            RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
          RowBox[{"-", "1"}]], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"me", "\[Rule]", "0.5"}], ",", 
           RowBox[{"\[Alpha]", "\[Rule]", 
            FractionBox["1", "137"]}], ",", 
           RowBox[{"Ef", "\[Rule]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", 
               SuperscriptBox["Pi", "2"], "n"}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], "}"}]}], ",", 
        RowBox[{"n", "\[Rule]", "8"}]}], "]"}], "k"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Compton\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]compton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "comptontot"}], 
            RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
          RowBox[{"-", "1"}]], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"me", "\[Rule]", "0.5"}], ",", 
           RowBox[{"\[Alpha]", "\[Rule]", 
            FractionBox["1", "137"]}], ",", 
           RowBox[{"Ef", "\[Rule]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", 
               SuperscriptBox["Pi", "2"], "n"}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], "}"}]}], ",", 
        RowBox[{"n", "\[Rule]", "0.032"}]}], "]"}], "k"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Compton\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7106336842720423`*^9, 3.710633701687048*^9}, {
  3.710636691453319*^9, 3.710636695908367*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]electronbrem", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"brem", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Bremsstrahlung\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronhad", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"electronuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "8"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Electronuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonhad", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"photonuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "8"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Photonuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonpp", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"pp", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Pair Production\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronbrem2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"brem", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Bremsstrahlung\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronhad2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"electronuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Electronuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonhad2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"photonuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Photonuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonpp2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"pp", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Pair Production\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7106353070820007`*^9, 3.71063536058596*^9}, {
  3.710635405733457*^9, 3.7106354522191763`*^9}, {3.710636043216696*^9, 
  3.7106360439279346`*^9}, {3.710636094561348*^9, 3.710636096737505*^9}, {
  3.7106361742270403`*^9, 3.710636175601259*^9}, {3.710636253069036*^9, 
  3.7106362711754303`*^9}, {3.710636726471518*^9, 3.710636753527442*^9}, {
  3.710637432493547*^9, 3.710637457937435*^9}, {3.7137221997028418`*^9, 
  3.713722247322112*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]hadshower", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxnonelastic", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "8"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "10", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticnucleon", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticnucleon", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "8"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticmeson", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticmeson", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "8"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]hadshower2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxnonelastic", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "0.032"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "10", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticnucleon2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticnucleon", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "0.032"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticmeson2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticmeson", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "0.032"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.710635513506115*^9, 3.710635560360156*^9}, {
  3.7106360687148857`*^9, 3.710636073488315*^9}, {3.710636764104178*^9, 
  3.710636777071892*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]canvas", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<Trigger Size \!\(\*SubscriptBox[\(\[Lambda]\), \(T\)]\)\>\"", 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "3"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Energy (MeV)\>\"", ",", 
        "\"\<\[Lambda] (\!\(\*SuperscriptBox[\(10\), \(-5\)]\) cm)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]canvas2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{"300", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<Trigger Size \!\(\*SubscriptBox[\(\[Lambda]\), \(T\)]\)\>\"", 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Energy (MeV)\>\"", ",", 
        "\"\<\[Lambda] (\!\(\*SuperscriptBox[\(10\), \(-5\)]\) cm)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.71063568946541*^9, 3.710635745830166*^9}, {
  3.710635777654771*^9, 3.7106357818304996`*^9}, {3.710635825137496*^9, 
  3.710635836825729*^9}, {3.710636785177038*^9, 3.7106368171590767`*^9}, {
  3.7106381406261473`*^9, 3.710638170744026*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hadron", "Subsubsection",
 CellChangeTimes->{{3.7106383190056868`*^9, 3.710638319387939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
  "\[Lambda]canvas", ",", "\[Lambda]hadshower", ",", "\[Lambda]pionpauli", 
   ",", "\[Lambda]electronpauli", ",", "\[Lambda]electronbrem", ",", 
   "\[Lambda]photonhad", ",", "\[Lambda]electron", ",", 
   "\[Lambda]elasticnucleon"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "\[Lambda]canvas2", ",", "\[Lambda]hadshower2", ",", "\[Lambda]pionpauli2", 
   ",", "\[Lambda]electronpauli2", ",", "\[Lambda]electronbrem2", ",", 
   "\[Lambda]photonhad2", ",", "\[Lambda]electron2", ",", 
   "\[Lambda]elasticnucleon2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.710635472841764*^9, 3.710635492974225*^9}, {
  3.710635567600065*^9, 3.710635606606481*^9}, {3.710635749062862*^9, 
  3.71063575178197*^9}, {3.7106358058277483`*^9, 3.710635808787722*^9}, {
  3.710635864171525*^9, 3.710635869114883*^9}, {3.7106359038436403`*^9, 
  3.710635918139237*^9}, {3.71063634298438*^9, 3.7106363456084337`*^9}, {
  3.710636478360758*^9, 3.710636483188218*^9}, {3.7106368268889236`*^9, 
  3.710636891735867*^9}, {3.7106383897967987`*^9, 3.710638397289926*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxNzX0s1HEcB/BLHtqNa5xznOvqztMdcUjacbufQpfK40lZzFx36cSMEbMw
cbvtcj1gHKZ2cUZ21wMtVkpprRaXhjYPoZxRLdx1i4getny+Ptt7773+eX/o
wqw4sRkOh4v8m39tGyG7wSTW8HD/T3RV2TWG5WKbPhHHr9Ri5WBdB61EiVWD
5SJ5ngJrBs9ze5dkWCeYzDrtI8VegNk3mQNl2DD4HceXW+40Cy4M95whJi6C
1dvzxTX3TeBT8SxJk9squO+BnFQb/BtcFDrZGp5iFrJpVR2L/IloAaYX9I8a
6qzAsisn9aUJeHCEd1CoVG8NruZEG2+Ld4JneC25rQRbsKc6hrJfYAcWeSzO
bOsggoXTLSMp1iTwlWR5dn6UA1jzI9XvbTsZvCoQN0wbHMFBA0ksfwEFjBVl
TtlrncE5hjbsnoEKri0d61PE0MBfRgKNLsrd4FLfhGZ1xh6wpfnl1FEKHXyr
e+S7pAf5QBFFWZ/JALMnzg9WUVzAvF1DHz4/Qj6cEbA+le4KFje2G/wJbuA5
CbswSossDNPY45PcwSbcwXLGBnLJG53FuMYDTC/ISVqKZYLdexl8nRHZ1WEg
9LiKBeZEKUgeYZ5gfjX/p8qE3JVHyJ5VeYFDOF97pKF7wc/wz6kvjciJT7Qx
Z2q8wfE2rY6vA33AR9IbjDo9sqCtWeUnY4PvzhIfWsqRCYyy/vEK5Ff1qcvS
SmRuBS1yrBHZNUu5cqkT2RRQET38ETk2e03UpkfWatILi+eQz7lHqJnfkCfI
lmsXV5CF69hQpZUv+FrDcvL6DuSnnDvzaXhk6gXaBtcG+f3CL+acHbK5orMj
1h55n1cG7zFpy37auOC645Z9i6rJNSfkhaajkrPOW/4dMjMNUpGPTXcXB9OQ
/wDFQQhY
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQLf2o4svGbCaHBeWss4+XiRywi/dSs+JhgfOT7khH
HFrDCue3y4UnPjXmhPMnmEz9rVfPA+erusbeeLuTH84/cy5ubfxcQTj/R4rA
9tv2wnC+sHyfcCKrKJxfci1AcOEhMTj/+Pcp4V8SJeB8TtulHwJUpOB82zdm
lw6ckIbzt8/gDX2dIgvnK2Ru0JJXkYfz9wZmqWxOUoDzHzY8irntogjnH72e
r3hvM4K/Uu/v0wdKSg7zYfY/WFWT0aUEl8+cGCH84SOCf9R75z/LJGU4X5FN
6lXzJQT/kr5MquISFTi/Krul07ldFc4/ptr/zylNDc7nnnpL3MdMHc53F+u5
dVNcA86v8alzLHyF4IcwCv98ukMTzlc5wRt1f4YWnP/W2TP+UaY2nL/24ive
LB8dOF/gnh7veS1dOD9n/uYNtr8Q/ANF8/4a3NaD83l/n3ynu1Yfzv/H4CPR
YmsA5xfxPus1XovgJ5csuJouagjn+z/hLYprQ/B3rJv94OZ7BL9oR9V353Aj
OF/jNE9ywXEEP9pi/wJFA2M4v3OdivHUhQg+Z8rt3O8CJnA+a8mmqnsVCP7f
Hps77S8R/CKG5/zbgkzhfIvNj15f2ong/8qbKLNJ0wwh35ogLzYJwf8ZV6oY
dQbB32XRpTyPzRzOBwDtj4nF
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV1Hk01N0fB3CyjC3GmBnM90uErGVUPKWYW6nwRFKESEgLJUVClseURFlT
SqGyJlJ4Sh66H5EiEdmLhOxLSrai3/z+uOee17nnnnM/78/nXGXXU9buy/j4
+N7x1v/36RTQuXV2FAe8d4szS/7IeaO0x8TCZxSXGHMNIqxHMdjdJpy3j2IP
VV0ppWwJeBb39bu37CjepF70Y8cYFR690a3lDo9g10nJwSRfGmTxBd5L/G8E
g5OKz1KkDKRuqPLPih7Bpcl+xinOdLjhLWlV4jyC15YIrrolwYC4jLHYr6tH
8PWD1zZm5TAgsr22gfZ7GJuX8LX26zCBK/FACtUOY4GGbH3jNCYEoYjdJ28O
45fKj6czBWTBz9c9NvnIMK7T39rzxVEWvHO2NbxeP4wlmIubZvNkweOTstTP
ZcNY3bU82+OnLLhR+XavbBzCUvPul4/+JQeOJt0xu9OGcKtWokeHjxzY+pfV
B50cwlMPvs0EPZQDq7xkydxNQ/jlNcG00W45MO/xt2wTHcI+9rLd6ZLyYELf
HyPYPojL+HX0pDbJg5Gpfr1e1iAeDEIhlw7LA/vxlMXVrYO4+kVySVmBPGj1
N0Q/pw7ipk7bqOlGeVCRe/RuoHsAdyxY3Fr9XR6Y/3hYbDk/gBfo15abrWYB
tdg02stsAG+d/mvnGVMWiA6tendbdgC7NBQ2abuy4Pfuvl0zRV9xzaNttU/j
WTBzoeKqCvcrpi+b2fBvNgsmn6XVWVl9xZ35Zg9Sy1jQu8Jx18OxfpykUNrs
18eCT3sNr7aX9uPGucqxCz9Z0BohVycU2Y8L8h7KPRcmoGay+e9Dav34mHrr
1rerCHipUnQl+kcf3nFLubBcn4Cy/fFvSyv6sF54g6mACQGPscXfjIN9uCQI
Hcs9SEDuD+0rW3X6sNvjFRmEJwHp6mJvTy304u+2f6L++BFwI7bavPZGL97n
BcobowmIq8yImj3ci8WXyJzkJAIiZ7m1qut6sYjf25uX7hEQ5MwxD234gqXL
RkOliwnwu6YQlZfyBQekxtx+XkaA9+tfNR2eX/BCTMu5pSoC3HRLzNaLfMGa
ns7fTzYT4Oh2I9KltQefyUmpTvtIgG2Sb01MRg++IRHaENRLgPkfttkw6sFf
Qy52m0wSYLJOKpIp1YPj9zzP1/9JQGB9Z3xE6WdckLjNrGuBgEOpe+M3/+jG
iu5Xxh2ESNgrTJVOiu3GQURknr4YCTu86uKmtLvxlgarnPeSJOgYb4/LOtyF
2xLWX98tS8KKLH4qP38XHnqde/wvggSa5IvYAymfcK5NiMmgIgnzXQax1NaP
eGHjhuFMNRI07qZ4Swd8xEbcevFwDRLsXAWtaeRHfDE/mW+jNgkRqp7rZHAn
Vpr4PftyNQlPBxrpdNdO3GZ5m6nKJuFrzoYZulAnrgubP+u0lgS6Z1obI6cD
x2tT1LzXk3Bm8kSy7EQ79nRWDVLbQMK9Jx/Oy8W344XyEunajSS89zF0kl/f
js9OjTT9vYkEPoN7xqy2Nmxn/ufuw80k6M5RlIjANpy7y85mxIiEg6Ve/KRC
G35g+aFChENCTFBLLwmt2L99xRMKIqHceHOVglsrzidog4M8j/GlZyoKt2JK
yzel3C0kEJWiESsetOCSkReM3VtJMA/3Pqa0qwX3iIT5tfEcuLPNTHmyGZ/n
hk5s20bCA1Fj7ZUJzTju8UWV6zy3v82QUNFvxv+IyT19y7NIjPiESvsHTNN5
umWI57+szjSonv+Al34KOY3yfITW8VhNkXe+JJbcwvP1Zk7Cqoom7O5lcymb
56obWT7qh5twF1f3oQvP03bLbTQoTXhdzZtoQZ5VCF8DzdxGnGjkXBDHe591
V6eslkUjrj5xJFqYZ27alnmtb+/xnuK8e0d49T1xyenUvvYeW/0X4vqEV3+P
ilSZjsF7XL+lZusgLy/FulHDA4UN+JfDxsL/5xds9XzRca4eh2ocUGAak/Cp
+RIcNK7H59nPxqV4eRva77tw6OI73OIwETnD68/NLuUdrrV1OLSg2abWkIRZ
l0mRw9Q6TPREFV7h9bPYIyrm6J1aLOG2cL3dgDd/k/v3HO+twQO95k2H9Uk4
7aNG99SowUGWr8R61pGwJghueRW/xo5dExUZvHnKjp7JOFtXheU9MyW9NUkQ
plUdPUerwmYc5rJgdRIO34jXCrCrxBk7tA6d582vcprO46D+CmxTJ+FtoUyC
gcsrP8p8OW5+5ippKUeCQnZKuop9IX4jlDT2U4CE4dj2k8uqH+OKfXTHX3wk
eEyt8n7p/gj/++ji/I9FApITabeM5HOwmGFdAZ4l4Me/H1qO8iXhapG4/a9H
CIhhN/S+cLvNSdWR6n1VT0BhGjcqTAg4pfyaQ6WxBOzSdlejNQCniqhZG36F
gIGnO+H+zQqOVZK/hmkEAax6iZlK7UrOt8T4mJIQAri/b7gIW1dzUuyN/Hec
JMDa/uGGK6l1nPTfH6+vMSMgQNTDp/Z2M2e8pml3628WvGFQDMuWmjlVyybC
lmZZwFyZwffIpYWjbXzea+UPFhQadkfHq7dyDLttnjkNs2DM0zrHrqiNE1Zl
V5bewoJD9YZdA7WdnMWwkGOB+SxIrwlP5w/u4UTyH43Kd2BBZIztcsW8Ac6+
bWo7ffLlwfNYq80r1hTniNDZ17n2crBPlJsg6TjLWbzbKyjQzYRg4cvFU2sX
ObJ3U54oBDCgWz9zvYEfP5pbSt3pqUCHQznVQkbxgsgu5llfdC4Nlpldr6Ge
o6A1hop7HR2kIVxTVXDNbTFkG65OE/wtBXRjaZGkx8vRw4vpBU4hy8EFbEKP
mFJRDLXo/aKbOBw5yw5Jt6Sitp/h108cEIcTWuLBPfuoyIix7lyPtTj4JUKg
gwsVPcu8er9tizhEHdP2swykIj+WJE1QSRyKqPwnDfKoqGP7HyH7LjEQcslz
4H2xSOiakomUoxg84BcwyGqTRtr2OXWeHqIgJl1Z798ljZ5L9X8pcROFE0oX
jv7dJ40k9ogS4k6isIYjcOvbhDQK/sVYfLFbFIqDBH4bCtPQhpCWm4f1RQHP
CrxsWE9DPrvCyrL5RaFlXNByPp6G5v+75iqZKgL8ncJHdu2SQUkVTXYKAxTo
PV4cf9taBs3g5+qbeihQNe9SPmIngwS2mUcf7KTAJflyeqS7DBoCEcGn9RQQ
s/epfBUig8Q37BzLekYBevtnJc4TGRSupBcaFUWBVa0lH/WYdFS1QA1TXE8B
8yaPPbI9dOSXUSAinygMN/uDlS+fYCJGnDV89xGCmehBD+duWVR59ZOa+xFB
2L7/yakDp+RRxTvZSRV1Ach41jhe/pWFXNewQk608oPo2ntW1ftIlN62t7fC
jQ+c6957/ehVQJ1+XCER80VctWgrHGG7Ai33FTsxUjqPo7NT89J8lRAXpmwM
E39iQ6fjbywNlZFH2QVGo9EUPnXws9KT78ooJvHJ0v2FYZxySqgts3Ql4pjJ
tW927MF761prLM6qoITw/QGJBnVY4umfR6Y6quiSaM/YYnEhp7ygfarluyr6
JP5PzK2EDs7MtONpZp4a+jk+ei6hbICjbh5vOey7CvWfniqd7fjG6RnxPnaK
rY6+SKp5i4jNcO7I5fiaDqkjEcWHs3yrf3H22MZ2FxVoIFg4d/q0Ox+K+awc
3nRcE2mEcJRqRARQpf/hyAvrtFCNzR3vgCEh9Ct1KTRiXgu59a1RWSgXQf9R
TYqMC7WRzrV9rWx3ceSTsNHkcqAOUjp0HM/tlERFzp3S4fqr0YphikJDMBXN
PG9qbB5bjVaGGCVlNkojPdXzk0+L1qC3tXqxuttk0HRHvdmuk7roO3pxoOwO
HX1TTJq+7K2LuKf8G6ru09G4m3PaKx9d1O8lufddDh0NjE9OGwfqIlXNsNDu
Yjrq4Je+qxehizrkrM/wv6OjF5p7Z5j3dBHb/RM2W6SjyIC2+1+addGr6qnP
fU4MdOlFmoViuy5qLHYZH3djIK7AsTmHj7rowIlkytxxBgqKnrNo/qKLaLqX
D0n4MZDXPfn56gld5PvGIFs/hoFy+/PVbQXZqNn10aWoFwykQaEFTwuxUU71
nMP1KgbK0vRrSqCwkflmvQ13axko3cs4uEGMjVZXHlR82spAd+bqm0yl2egA
l9+/d4KBWMQ6jUEaG8nRm/PHpxnollFScDidjQ5WMcbnFhjoBtdZ46Us775T
5U0pChPRMyuDD8mzkTUX8RPLmSjhtfqHJRYb+dZKnVklw0TUkSsaKSQbtaYq
j+vJM1GsxLfgTYpsNCkdGGC0gon+Bx9qNzA=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVyns0VAkcwHEzjMe9IyWPkUcxHmG4l8Z0oub+RLWmVFtKJ1tkFqs8Tq0e
KjPKo8luL1uUHmgPFiWW9JDubTVDFiMyKOMoqVatmjIxg7HtH9/z/efjGJ28
KYaup6cX+q3/n2x86mXNHjqU7Nys2D2OUkhDXnRkCh22ZXVYWnxCqdLEomFm
Gh1MboRsaXyPUgNdtSNxp+mQrCGemQ2jlODq83/sa+iw9Dynq+4pSrn6Lv58
8isdWp8wOnRV33xEEz36mD585N6V5sajVMgtDds83wCWofa37w8iFDP7gNhd
ZQi9hTuNbtWYUHGE+ux2tgm4BxWK8i4aU62Fh1MzBShM5v6QQ8syoqzxuUdi
ikzhaes5k3nbDamp62W+UR1mEDVPdnN+EIN6fb2MdtJyHmiIfdL7FgZUZ7No
y06+OZjaXt478p5OGQ9uzYTN86HHoGmlfi+N4jLvECKxBZQrok9IK/SoG54s
RUu+JQiT9F+pnWfJP65N956psIJ4if9g3Ow0eck9PvbPZ9Yg2bfrkVOlllSU
KOQvR1kw53D2WJNokjT2b5MmsBZA+feX6VXsr+RDx1VuKWAL/OPlRGH3F5LS
PhRKwuzAv/O27ECliqx/T3EmxfZQMCCM9y4fIyfbmzpT8h3g/OZt/QFrR0ms
ZT0tVLYQ7u3mWL84M0Kqc6o6Og8ugidLvpRKRofIQx68nGN0R4hNTrjA8Ogn
1T005tBFR8CThSp/iZxkaUOngl2cIK+n0cx/ooGcaY5Y9K7KCQZOKzqWyy4R
yuKb6LJgNrSbWhmMvJISwnHxj2flbFiN4WbvSruJ4U15GRdinUFgnafnb60k
XCKS+vq0zlAfipbd8RomTAdkBU5ZLqAOk99jpL8lPv4kZC+wdQXGg1rdI+wD
cTAp3YZV5gqO4+29fWs+EY/sI1eF4W4gqPnuxJOEz4Rh/7GlfKkb7LjWvWEv
NU6omC753hsXA5IU1eH74SuhWMdsbHuzGK4lzsRUrtYQuxgpG/f+7A6tG67U
rkidIqrirtqEzbiDri+wr6VohlD3IOWvcz3ANnfCEp2YJV49mCw54uAJb/N6
M2vNadB6yyOeuu0Jd44GoCsC6ZCyziE6SMABpN5pZuVufXi8K7el7RkHKoeQ
1i1iA5iTIVDr7/ECYB9hP65kgM4u40zghBcsDP8QTjw2hOqotMjGdG/IGBya
4PUawY7qBvUbSwyUaTucc2gmUH3osMaqGIOMOS88R60RSLpxNjXzdwxm9xtx
pHYIeA6ValQlGKQql3CKHBEoXdOtaavAvrlfOVs9EbhixdEer8MgQsD3+ouP
gKROqR1rxmBJdrF3QQwCUZ9gWjaGwfBMnI+gFgEH5/CjXBUGkTHnfVzuIvAi
PHG6+AsG/W2Uj14jAlvJS9NHJzGQX7bxrZch4LomVWRDw6Fh2d++Ts8RsLPq
EskRHH7b783V6qEwhSn5hkwc5iq3c3sYKDwPeadbborDL8EnuNUICvlpOlGF
GQ7i+UPcWAsUzEc8xFkWOOypOefX5YaCSudHPLDE4S3rod9NDgqdrMDZz1Y4
CNNH/SQ+KJxaFy6OssEhfEMQjx+AQkJsNJG/AIfu+mSeDaAgSE+cbbfFYa3D
Fd54MAruBYdIA3scmrNaePIQFIzrMsQBDjgE/TvOq1iPwn8cwCrW
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQnc/R+3BjNpNDkEjjr3URD/bfubT5aXofgu8199ZL
2Y0IvpqRxqfOb0wOATD10YeZkhqZ4XzP9T+VhaazwNXztJXVa35kg/PT7b9O
iFLmhPNPza+qbPHihvPFDQSqUxfwwvm/Fy03SjjHD+c/WbScsVNUEM6/cLwu
NM5OCM7nuBfW4hAsDOeb8Gy3r6sXgfPXaEtcOzFdFM5fMe/P9f5VYnD+TM3M
tE1XxOH8a0uvnX/4SgJhvtWZozkSUnD+PkVX9RIHaTj/wK99yR0hMnD+ttcH
dH7Uy8LD58fZwxdKpsvB+fon/Bh9j8nD1X/tWnfuQrkCnF+hZdbVyKToEALl
mzHInN7gq4hQf5WR58EMRbh5bC+WNwvdR6iX+OX720VVCa7+7/FohRfrEPy7
C9dyW7oow/Unf6lPmXAewX8cNK15apoKXL1qdN6NG78QfN47x2YptarC+e8z
kpWlpNXg+svzGiQllqs5+EP5B2XjXUMM1BHuvdlobncUwf/IozpdL0ADEf4+
PHvPPEPwE1lLAgqLNeH8delzJUP+asL1f73KtfLJJC24/KM9P5ZWy2kj0tt6
rcwDWxH8Eh+5JGcvHTj/SOKkE2euIPh8zV5fmbN14fx/Ms39jt914fZtSKiN
39ugB5eP3bD76zNRfTh/Q0XVT7GFCP4cMZ1fTVsQ/I4td3+9O47gJ3xw+HPs
nT7cfDX3yjpJRgM4X0bsUt15LgT/t/5dOzYeA7j+W54v/tnwIvjTa//VreJH
8IWeatW3iiD4vT7h9QmSCD7HluZ6azkEHwBYIQyc
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVzH9cy3kcwPGZZTX9WKulZvpd23fKd1KJnM+bRGioDpUT0jWPq1YORVSE
Qkw3JD9KLL9SSlyR8u0X67d1oRB1cv3c9ft3bZ374/V4/vcy8w/1/JVMIpH8
f/S/tGVj9ZNcJXpB7xYIPfvQjh5vp/7lSmRxvvcruL4lMlMKUv9xVyLX8Qcf
G6rqCOVmttpnPyXi9K1xEm6pIzaRo4PkYUqkQM3Dk+9riVvPWupfxyqRS5RE
4+KOWqI/cJXTy8tK5NZ3Oczi7xpCUk1Ru/dciVZ+2GssUFQTbVGBQTeqlIgy
U+DzbX81Yc+vqE9sViJh5gF5xFgV8eFyQupRkgpVp8f7SMlVBMuP4eThpkKH
CwtWThtWEEH0g6lrfVVottovLySpMqKw9D1lRbAKsYcFLpiljPDjXKu3TlSh
s4+rQrfhb4g7/SZB040qtOFY7tUc13ICO2mbel84g56Sa9N3/V5MRDpcpKQc
mUGdcn1BVx9BVHX0/yZJmEHisIM1jKlXRLD7s6VR2TPILDHRMEC3iMhhOtd7
js0g97KHX1Q/vSDYP1uSY1xI8J0j09S6+oRIb1/swGsgQbhkSXj46ljCSpfu
0t5MAv+6GvxVzwHinnPvljvtJGiyy/JKuLSBuJ+YEcyaJEFD54cHp1qjUMZy
i3Sa2SwIbU9VTOsmo2yxvl6PaBYkpS/+95E0ExU4jvU/opHhiizNKKD3FZLH
FWbarp4Nqo3zkK2mHO3rS+zqiFeDfa9v2D9PaUGCSWqbUykVdnfxe8WHOxDa
0RDfakODFcZWNRf/6kMppzoHVoo0YcZ0IPxLwxBSp3hSh1u0ISNvVVPVvHHU
yshWmEjpwPbEde0E02iQ6ut0u0QX6vK37A0zIQGNm/1RMM6A4tzCTm9XMvjY
PPyylaUPb6KK28fdKFB3Yhg9dGTCZrUlihNr5sB6cvcYJ8gAWgKvnhOFqMNk
4CkGOWEevDUrtBAdoEHuaEUstcwQVO6aO3n3NSGx0c/De8QIvA6Syr/+pQ3p
N6/FUvTmww6O1DA5hA7E+WiNZjc2lIyeze8+owv0PepD2r8tgHWFRq8iJQwQ
7l5hFyI1Btc/3cTRT/Xgn5yStwaNJpAmqbG7KNeHmsGRDq2jppAmEIY/+cyE
DPNWxj0DM1jth02lqQxAWs7u67lvBvSynLoIHUPAdWIjtzuawzbnENkcthGs
DC3MaZKbQ8BkDx4NLNi3an0ydY8FiCNZP+3ynA9M7BHPXWkBeg6M5AXH2LDt
hUNwXpIlVJ+8dd3x9gLIfcnYVWdlBV0LK8vwp8bwR0P59FSxFUg+ibI+NJtA
ws7KjY0e1nCViReJj5iCYeLo+qYWa+iMNKkxJpsBt2l8sPcIB6JsD+09lGQG
XhKB4KkGF5ZJA65MmZoD2T/C88JdLgRt/3rcJd8caqRD6sylGIywjvQ8drEA
TJwsKn2Nwb1PNweCay1AQ8yIOb2bB9etX5/s8rcECqkFRvt5kOGrQ4nutYTY
+ONZxy4shCa6wl5+2gou52+o5HJs4OYen5ciljWU+AiTYvNs4Fmg5QTrrjXs
1/XRHvSwhdbT5/PFzhxY4ZyyVKfNFgx3emtQKzhwXYtG99y/CGZvKFWTe3Dh
6MjGSxlzcdgUUbQ3roMLEZtbZTk3cPgsCojr+h0DxxsvW5ek4jDH8l3vtUMY
DLcnTeSl4VAemk1dcBiDsGjBwqK7OKztaQuVHcNgX1aBuDIbh3ifIWpAHAbe
c69s/VaGg7P77oKv1zBYLlvfpqf48Zs9paVRgsE4w2o6qReH02dEvIoyDPL8
SEzWAA6x158gnTcYLBnNW2s6ioNT5bmbjVUYJDEYWw1IfDjj+3hk8zsMxKti
npvT+DBxoquuvwODkA7FmoC5fMivLe840I2B+wXf+ruafMjU0DJ+rMCA9tGh
m6vDhyuCVsezAxjEhSnm4/p8OKkS6qybwuBXA98HYUw+7JIL7ceVGKwplNnn
GvChUY9PsibxgKwuFTgY8eGt3+QQRY0Hf2fRP4Wz+HBwvw0zj8qDYq/owOfz
+WBXRF20jMaDtImewQk2H5IH3IVemjyIueUT42zMh5iiS99LtXnwH1xpyzk=

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[{{4.6991532510082566`*^-7, -5.115995809754082}, {
         0.225983548348035, -5.115995809754082}, {
         0.4519666267807449, -5.115995809754082}, {
         0.9419497320385444, -5.115995809754082}, {
         1.3994624869235996`, -5.115995809754082}, {
         1.6237315723072758`, -5.115995809754082}, {
         1.848000657690952, -5.115995809754082}, {
         1.9696394374808852`, -5.115995809754082}, {
         2.091278217270818, -5.115995809754082}, {
         2.1520976071657847`, -5.115995809754082}, {
         2.212916997060751, -5.115995809754082}, {
         2.2433266920082344`, -5.115995809754082}, {
         2.2737363869557177`, -5.115995809754082}, {
         2.2813388106925885`, -5.115995809754082}, {
         2.2889412344294593`, -5.115995809754082}, {
         2.29654365816633, -5.115995809754082}, {
         2.3022454759689834`, -5.115995809754082}}]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 6.907755278982137}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {0.,
         0.}}, {{3.2894072757057793`*^-7, 16.11809532201759}, {0., 0.}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\[Lambda] (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\) cm)\"", 
         TraditionalForm], None}, {
        FormBox["\"Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      6.907755278982137}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Trigger Size \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(T\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[Bold], FontFamily -> "Arial"}, Background -> Automatic,
             StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "Bold", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.710635609128961*^9, 3.710635752351063*^9, {3.7106357839597483`*^9, 
   3.71063583853299*^9}, 3.7106358696474447`*^9, {3.710635910754033*^9, 
   3.710635918627823*^9}, 3.7106362373992233`*^9, 3.710636276964999*^9, 
   3.710636346157333*^9, 3.7106364836109257`*^9, 3.710636892378202*^9, {
   3.710637493546974*^9, 3.7106375085776052`*^9}, 3.7106381974559727`*^9, 
   3.710638397940473*^9, {3.713722256463566*^9, 3.7137222691227016`*^9}, 
   3.713727903074486*^9, 3.713728309201557*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLejZPk9DeJrdjakJUWsuiDmIa0brtdofsYfx9edr
nG22vwLnX7Q0sGmRfArnV7lqPRaOfA/nL2UuT5226QucHxGimblY9Recf3hr
l+h06/9wfq3zvRWu8UwOMP7CmZrij4RZ4XzFijM3P85kh/Pb+8KfNIZxwfme
ulbOrU944Pwplv6fVqXyw/mP7ZaVrOAThPO1lgZImQYLwfkp6u8fM24WhvOT
Hiy7Gs8jCuf3xXYVlvuJwflrvyUanl8tDuf/Ck6d/eCjBJxvdTZG0yhYCs63
r829L7JOGs4v+rjSfuNHGTh/euOtw70BcnD+q6tmn5RnyMP5jQZhS5bmKMD5
bCzdiTelFOH8RTuvfs7ci+Cb10rNmJWrBOfr38m+MFlKGc63k7189+VuBN8t
x+Tv/SwVOD917uqPRnyqcP7zTP0qv3UIfpLLWhGuGDU4/wuDY4vSPwS//vQ5
1ttr1ZHiryjmQ6AGnK92QMn93CcEX0XsrLPPQk0439KvV1TdRQvOd5/i/nPh
FwR/Rylf4dOF2nC+g+Xrva3OOnD+Qa5DMsc+IfiR+9YFJE/ThfNDeFdInDTT
g/M9smZ/OvcEwQ9euWShYbs+wn8mPf5XHiL43g921lnLGcD5AEprf0A=
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQLf2o4svGbCYHzxn73yh/vml/QHDzr0PzEfwUx7cM
Vy4j+GsWJPJ+s2Z28IHy7eK91Kx4WODySXekIw6tYYXLt8uFJz415nTwh/J7
NMv0um5yweUnmEz9rVfPA9e/1eL4pnu+vHD1t2x+ZvbJ8MHVq7rG3ni7kx+u
/sy5uLXxcwXh8j9SBLbftheG6xeW7xNOZBWF80uuBQguPCQGV3/8+5TwL4kS
cD6n7dIPASpScPNt35hdOnBCGs7fPoM39HWKLJyvkLlBS15FHs7fG5ilsjlJ
Ac5/2PAo5raLItz8lXp/nz5QUoLLZ06MEP7wEcFXZJN61XxJGa7+kr5MquIS
Fbh8VXZLp3O7Klx+wQlOl8PfVOHyx1T7/zmlqTm4Q/kZd0263c+pwdVzT70l
7mOmDlfvLtZz66a4Bpxf41PnWPhKA64+hFH459MdmnB5lRO8UfdnaMHl3zp7
xj/K1Ibz1158xZvlowNXL3BPj/e8li6cnzN/8wbbXwj+gaJ5fw1u68Hdy/v7
5Dvdtfpw+X8MPhIttgZwfhHvs17jtQZw+5JLFlxNFzWE8/2f8BbFtSH4O9bN
fnDzPYJftKPqu3O4ETw9aJzmSS44buQQCOUfYnzGePK3Edy+aIv9CxQNjBH2
f/6YeTvDGK6/c52K8dSFxnDzPTkbAtxuItRzptzO/S5gAvcf+xu3L69cTODq
WUs2Vd2rMIGb19hQrm280QSu/2+PzZ32lwj1RQzP+bcFmcL5Fpsfvb60E8H/
lTdRZpOmGUK+NUFebBKC/zOuVDHqjBncvl0WXcrz2Mzh9gEAcC0Qmw==
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVknk8lQkXx+9zbWXs9ylLst+4We4tZaJyzxQGyWhCEq6lzU5UKssMk23C
oNA2UqGRXiktFM+xDJO1rlIkJGlGacpw3ZjLPO8f53M+37/OOd/z0w+M/H4f
k8FgZNP1/z6zDzKqQ5ko3RE/NVpLYrzBUJquPxNTb/mwMutJZA6fSM1yZ6Lu
IUYQo5FEJa97KcGbmZjp0c72byPxNOmR/HwNEw/tTQeXdhK1nkz9YL+KicIk
akChi8RVzhaJ+spMPHHa0lVFSGKlbGd8jhQTPSKvh3g8JXFtc/AJySyB1y9u
yo7pI/F+ktzx0A8EzhYQGPqCRNtNpXH9IwS2Rh2Q2A6Q2CLecvTbZwSuDS+1
+fiSROc7I4fvPCLQP8g86PgrEh9HJ8YaNhDYc2qZ99gQibsstGNybxFoYhQ/
ZzZC4tBEbfRiGYET296qe7wmcW/5rqjw8wR6nctP9B0lcSJoJuJlDoEVFS//
cXhDYpRefrjTTwRmysVYqY2RKBrkhd2LI7Cmvm6Bojn+bHcIO5yePyyz6PaW
9uUZFpwfQGDOxsE3v9OcriZ/kPAkMDHN2l13nPbXU74/0pnAQstHn31pPv2z
/b5XtgQ6G+juTqZZy/FN0DZLAjdFTupn0XxJ+sfAWmMCG459PZxI86pGnQBj
bQKNdifretFcmfBQcEaFwPZRZrgmzWttvP2kZAi8HPJoezM9v1Y06xP9hYET
e95v9aQZbp/ZMzzJQMuuii4hvX9rpKX39lEG2ptd2GdNs4vZE68HfQxc0GlP
zqTvF/4ZsYvTwUD56udFrbQfr1IFz0KKgQ//0tP4SPsbCqhwl6lh4NCr/nCC
5omBtzteX2Dgbi33LZO0/6jCFLfvchmoJKo91Ur/R7RT/7v6kwy8lKlonzVI
++rycTkbwUBO3JpjY/20r4w5Z7kgBuL4+euH6f8rORQ5Hd7FQDs/99oZOh8r
qF6HHcDAaK2v65p7Sbx8ItqeWsdAv313dqjR+TLZoGxnzmGg75ir4o7HJK6r
dv5mqRoD20bVDS91kljkkHI0uW2R2lYVg6daSLxKNcT63Vyk9Km0xL1NJN7c
MBdtc3aRuhn9Y4EFkvhodXTYVMgiZb2tuufcAxLnlAQBgUqLlCT1rai/mkS5
1DE1l5kFylLWPYlVRSIpCW5ZP7hAhY2IVvErSeS+jzVeWrFASfWsfhVeRuet
LXOyyn6Byp/h9HDPkdiVdPeYJF5CyWldj4lLInFAtNH0XZCEOjYdKPPpBIl/
hjcOPnaWUC0Lbda+cbQvn07+VQ0JVVzQ9Y1mNIlWG0ZlttX8S2XbdZ/TDqTz
8kkxr+j9PDXa3DQWs4XEGwfytyYL56l/Pxda7bYlsW5IYya0dp6KPTRXYmVD
4rNOQy9+2jwV5h/uOLCGRPnfrHXGDeapZeWF9n/okRgbsK/C0nuOCh7eX+wl
YeG3wodN3X+IKe9ec2VJNQvHhisVAqvFVOiW3MrwGyz8YfKC58xZMdXa4bRi
4BoL7y9JmFgRKqa2tt4pLytmoQl/s1qwopjilLgqqGSxUL6yPkDq+1lKpta8
g3uAhd0nGxgbXs5QGRuvLZvVYKG7NdqWTE5Rxdo3zmCsGhZEKbndF0xQC4GX
/0nXVcUvr6xyVPpeUjMDUuqCTcq4svziFcPdt6jUp5yRLoECHlsaEtN+/il/
0aVbzOEvxYxsT0WdynF+r0NHfR9HFkMP9nn8rvWZX3A6OfwrRyl0X5qcp+Qz
y1+yqUtOtIqBCbLpNZ/XSvg5Dnd1wmLnqKH1peusjhDwl6DM2OruNOV/rVVm
c640ZMc1PbP/+IFiOp15pHJUDgR7jPyOWr+mTnKMpC3Oy0Nwq1lUYmMjRdqq
Lim8qQip546kZvz8mB+AHkn7HVVAL/8Ah7If4/9GSFmVPVeF5S9erMn46ROf
GJDd7+LCgvomJ9MIUsR3FobsUB8hYcH03aTbqXl+0ViCfnrYchjY2eZrtJYB
oqx3IYIhdbgum3121JEJ9ruqI/dEaoJWh/hgyyFpuHrvyWT9Wy341HiFORMl
C0vXlri1umvDxNb0bL2QJSDofBzxz+hKuNBcmeBP790i8ZRN89SFFsMmTfV7
CpBV/mtlcaweXK9T1h1SUwYb3+A/XG30ITDktYHXAxWI9BvWq57SBzPdKu3R
EVW4GCnzvLTOABwDNxReM2bBzs6+R9sPG0KLtqnpV/4kKNxd/J+jmRE0WjXn
JRctg/qqF5+fTRnB85SbXfc+LwfRtE/08ko2PElVTKnfoAHGzrmuf8WugldB
Pm23izVhZCLqYCTPGGzyIpQcp7Tggsa1WMc/jaGmw8KiBbRhh2fO0O0qEzij
MpgzcGMlZA/rnxQGc2BRfnq/q7QuNMftzUixXA2mfoEGRzbpwfyvC0lpX1bD
+xwYJ6b14IGK3W3bW6bQbv7QuaZYH2LyrO3Sj5vBm+LvlNy9DeC2YED15Hpz
OD/esPj3EkMQ1QqfPP1gDr90HFKOrDGENUYn/r572wJ2uXWU9EYYwXR/t5NL
OBfexLglyq9kwyedwun0KC5YNGVJSD02TAYJin+P4cJ+J5sUXUM2jE/+PW17
nAtfW7heXMdhQz+hemlNGhcCY04pCdazoYGzU7S8hAsRdvfe1mxnQ8ax55df
P+VCo80Dn72JbEhtKN6u84ILMh/eJ0b+yIZkqYNi75dcKNpqVXb8JzbEZ4m3
P33NBV0NO6ncTDZElGh+af3IhdLyfHF9ARsqxm4Ye0rz4JJNdY9GFRtM5NQS
pmV4wBGqfGN0iw1lnCPCPDkeTB/tu8O9w4YrEbYJPfI8GE/Tr3Z4wIYL4m6h
oyoPxLP1w7FtbNBaYWnyTo0Hvjunj/7QzoazmwsTTpI8uCjXyTrVxYaCZIFJ
kzoPcq3GfK/0soEsbU7w1+RBcuZe+ao+NuS1GfcuaPGgc8WSurp+NqhM/Gxy
UZsHv/hWhrcOsiFH4VPCRh0etBodMhEOs+E/taA2Vg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVznk8lHkcwHFmEMqEIWcjw+MqnseVHPX75kgkRiO061iiIl7SiWgSVllE
NDkWO8lVmRVqyTGj+6KRo1dG2IzVSSYhx1r7x+f1+fetGxqzJ5wkISHhs9L/
V3JLLzWisrdNyi0zu73I/LCLBU0D6DjaoiNy9t9F5u/d43qJi1IRP8SucHgH
md/VQGMVoHwk6iz3ndxK5meEZZzIQteQdNa9TOVNZP57B/7XdNSIPscN6e6X
JfPVjH82S0MP0CrN0ESZDhIfLzPqTEG96OLQW226OYnfbUs4pGqMoadXHUNC
P0jwE1xMRqn7JlFb5ecr+tbLvAryqXB2/TQivQxOdoxZ5Pn7GEeUY/NouS+t
J8n6B+/+7QzVK/bL6CRT5quANMNLchqqdgkmwfmCrISKADGPU2is9o4qDR4D
7z5r23/h6ca9eDNVuAo+aj+87r44xkvP9hMl+8pD0+Gob0EPhTw3UzunNNEa
kJ21fkFmPeHl23qJr4evBeNZiZNJv1xHo9sqj1dTlKAWOdFTE3uRSQVD05qp
DNQJ3/pz4e9QmOHkqGQDFSjHWSzFwE8odKSyL3iNKpR09J621Bej7MCM2FOe
60Dt+dnobv8ZVDsTYv7yhhqkJ0u6EtPzaJ4ZXjwypQ5ankVO4+7LyK4zwNiC
qQndrLomHSkSoKToYRWuFvSwL9xxDpCCo1M16NaUNijKe1n1X5SBK8kD97MY
NDiSJDOVPSMLH/s2i/UKdCCBRD3daLMakgnfaxVRG8ADCdQ9jiiAjNRvIW80
dYFyauKAzOBauNrc9y2iTReaVYP2HVFUApskzYKiaDr4V36xSPJQBnzwsCBP
Uw++38xRXEihwrb1PW8/tOgBReSFp1epwI4oq6XhSH2g8TTutohUIbzkxpQF
BYN2lmpYh4IajEfgCZ5cDGL9CktazdUh1LlWRT7AADh+U5JRMRowLbE9lf6v
AfhuH3BkF2gC63mXtLDWEB7vqXmWItQC3bijAV+9jeCyoIzTIbceDPh01y6x
EZTKPWqrs6CB/rpOJw+OMcQxWnNiT+iArWeWqqGzCbS4BQZyvDeAa77rD860
CdyKD2iM/74Bmk5QYsc4G8FR4ZBtGVsXwPZTW5rTJvDqHvazMKVDh/w97Ufi
TUBJqW9tFdBhXzuXsZ9tCmzVY8V/ROiBj0K1+tPNZnDVt2GXaFkPdkYWi7tE
ZsBdOx1pU64PzJprHPN0HKwy+BW19hjUjVH/ksnAofTcuoODWzGg0FNeCDNx
WGxPS7wFGDwpCplNu4TDg1/FDK4LBg6ZtN0DJTjcG7Ws3c3AQD+mYO5cIw7R
Ysu5/nAMpq0yvXr/xkElt2rKLAcD79iFsBoRDmdpLaPxeRhwayMTzozjcMaw
qSX4MgaHDNwqjL7gQAliPM0swuBhaNPdpUkcnCmbH4/8jgG9zFDwSowDx71i
8HYZBiwhe6zqOw5ee0UGF8oxGFSTWUicw+FmLtMhqBKD0CXUc2kVAZpbrDr7
mzHIKZ4NXJIlgJZ7KK+rDQOe7Z/vD8oT0FunPHeWh8HE6wPHXq0mQCjn2h53
HwPtk7R/HRQIsNlxp2f3IwzcVfrPV1EI6JL3M81/gkF8fRZVWZGA8vmfmuyf
YVDNcClNVCJA0uZZp2InBv0Ti0bjygSQtLhxLAEGUlmNDd4qBKCPrz21XmFg
uTFqW6sqAa15meXG/Su+g0JmrjoB3WEzW+yEKz7pvKEFjRXfzoHR6qEVX7l7
xAEtAlTUpe46j6z4HEnTAm0CYnyOvdQYxWDXSPMZexoBrr4N2dn/YPAfbx5R
Mw==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxFzXk0lHscBvBhbA2meI15s5UlxvqOdJVy/b4lWSrJJNlu1ixp0UnJbXRc
NCXkqmvJ0T3DcE22pITSVUl1s8Z0TsgyCG0aORThuufcXn+85z2f8/ye56sb
eMw9RJpCoQQsff/9VZx511lYpl3bkJ3mmcFBNGbb8JmHbqP2/8009rFIQo2o
5X8Tf7JaElAX6Q4btm3i6hH0ox/rYDKEeU2QfUvsvGk6MUnmhdTTIZm3psj+
gqnbqFbkDOkD+4zDC9bNkqbLeqO8m99JP76TzMjaskjuE20dORcWKPAj59r3
FTsclIYf9/g5xkwxJktaN6b5tSRHnjQvzXM4fj+N7Dubb7ZPGlYi86s2eyZv
hKwk8yG7opPFdBXSJoVuGj9xVMn3rqnv3lqGLzsqOrHK4tyyaxxqdrFKVMm+
49s15zSpGJmnVXNwBrHsV+d5lXSfZc8e1Y1TjFq2tuc9FwXesg07Brm8lGVb
7FSolMvAQBSySP8yPYg2PrEYTsrC4NvunJ4JJTEC5MGUzcNAy9qq+IOeGDnX
/uqSmI+BvU7LyfFNYuRulc+lFmMQLBe69a2rGAUbTQxJVWFQ/upad3+sGDnJ
VfuE1mBg515dG50uRmYjZzub6zFobunIViwSo6l82uOsZxh8bFTw3NghRok6
hvnmfRiYVZ3qTDMaQgKGn7/XCjUoveze/HPXEBqivui9eVANhE60B7nmIyhw
oEh0UIkBgrozfM+BUZTmlxx12lUdPCrkVarHPqCy6QDLthImjK2wukAjJGiW
E5I7IMEhodHG1/zeF7S5xdd4PUcDqHdZMe3caYS4R/rVyjVBieky/IfVN3RC
IkSVEi2IWnwkaK2bQ1nx3Y9T3XTg/hqDMl7MAnonsp7Uz14DlsGfZLoTKBDP
3i8ojFwLzhNBPlJPpEBO5lLAaw1d4GS2iMJ0qZBfK/oSXq8Ll6SCZi8ekoGN
XI3sa0f04M6FD9veN8kC0Xu4/YqGPhTtuFz1Zq082Gl3vhm/pw+Nz/xaLwYp
wI7IDfP9EQbQeWit8qmHKyAkr0Synr4OVJ7TpzUVFGE0nIh1LV8HjEB1eY6T
EgRuL1Oj+RqCIlPV9p8CZZiibE3UWzAEIt1Gc26UDudetMr2lBlBfobJymr9
VaAbc8L3814WOKDWkBdPV4Fhg55j6yQLXHhxbsIwFTBQb7HfxTcGpzes3UZM
VbBxTWUYbTcBX8a4jnSdKjhedfzGnzKBwz4F0twIDGqi6VEjfFPotY2IbWCq
Adi8r0+yN4NgiuNT/1o1eEh7pNU0aQYjHdqG/DAGeD0odwvKNAduEs3bTkkd
9ikX48+tLSCmi6onKFUHp4jcydZhC4i0nJkTejOBIxTwLXkEnD5OKVGaZ8LN
EeyuXDIBXaXHGgYXmUDXS2juSSFg/XifqFoah2fXAmaSMgh4H1BPCVDAwTZF
Z3d3HgH+nNj9dzAcDI5lf/3tNgFO1lNSv5jgMLUhZU/XIAH499EDFZ447I2a
CxYOExC9yfNoojcO5WURsXGjBLw82ZTg5YdDmKFzIesjAZc+CsqpQTj0MuXm
zn4lgNIfIHPgKA6B86gzQ54NYw97KihJOKTnzvjNK7Bh+4LLExEPh79tKsZC
aWzI31zXfSMZB61TOgu2ymzwrcqW9UjH4dWn76xRVTa0Czx8hLk4yKTertqr
xgazwcbjcddxsDKNtLvPYEOy9obzHP7SfmgP53d8aT9TtXK+aGlf9krf3Go2
8F/GN70U4vCpwCX8kCYbKCslPX+VLt3bJj3VrrV0b6e/5GwFDjsHauO26LCh
jtcm534Lh38ByES2Kg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnc/R+3BjNpPDLL/GX4+5RBzuRB9mSmpkhvM91/9U
FprOAufztJXVa35kg/PT7b9OiFLmhPNPza+qbPHihvPFDQSqUxfwwvm/Fy03
SjjHD+c/WbScsVNUEM6/cLwuNM5OCM7nuBfW4hAsDOeb8Gy3r6sXgfPXaEtc
OzFdFM5fMe/P9f5VYnD+TM3MtE1XxOH8a0uvnX/4SgJhvtWZozkSUnD+PkVX
9RIHaTj/wK99yR0hMnD+ttcHdH7Uy8L5P84evlAyXQ7O1z/hx+h7TB7O/9q1
7tyFcgU4v0LLrKuRSREhf5WR58EMBF/il+9vF1UlOP/v8WiFF+sQ/LsL13Jb
uijD+clf6lMmnEfwHwdNa56apgLnq0bn3bjxC8HnvXNsllKrKpz/PiNZWUpa
Dc4vz2uQlFiO4B+UjXcNMVCH89luNprbHUXwP/KoTtcL0ECErw/P3jPPEPxE
1pKAwmJNOH9d+lzJkL+aSP7nWvlkkhac/2jPj6XVctqI9LReK/PAVgS/xEcu
ydlLB84/kjjpxJkrCD5fs9dX5mxdOP+fTHO/43cEf0NCbfzeBj04P3bD7q/P
RPUR8hVVP8UWIvgJHxz+HHuH4HNsaa63ljOA8wFDsnEh
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkXk4lAkAxiXXzjiWcY4xGec4xvf5io2s77WOoUOkUg8SkdQgNkaWymIn
atjkTLnCkqjQbnY7aY8Oqk2Xu/BUbIpm0aFd/fE+v/9+vz9eXnjcukh5OTm5
NQv7TE0fSTmfVeRqeVw8tWQLAxF5JRd66T10zDWJQekOBjasE+Y305n0F25G
4xrfMtDdyt1fQhfQmytjpTMSBnIichKldA2dM/avfv05Bl64XH0jodvo4nAR
v1yBCT2rILss+jp9ybIrbqyeCaKC35VB99DvggvHgyZUcc+JdMk0GKMbjTVT
7fM0kOJpPcLa/Jpe01rNFs19idrF4siiFhmtzROndHC0sGm9VfRJ8/f0iqyX
DnkbWOg8n6NTvOI/erW8tvc2sTbS3AfrPUPlET/oUVF9VgdVpVZ6z1iK6I+o
UXYY1QUv+faTqVJliBKVAo8v1ockN3A0fSMDLY4Z6/RcDOAjcHbPGlXFeQXr
8vatbBQ4rZ0+FakB/0qSyDpgiBHXuj316poIfGa8taedA+taP7ZDgBZ0mOUl
/CEjRFi+HlnUykLR3NsnAu4ShA/XPQhV1YFy/0CHo60xckNy4sW+urCHytLl
V4zRNBNmf6dRD62r2mS2oTy8D4gsG57Sx9O9ugEzMh6cu4KtqAA2Pu4WTN8p
NgGdFjOk3WwIl1VxaZ7LTZEw1UCfm+KgT/PRxIFuUxSn93ZK/bjIrtz6blGC
GcYfOE6blizB5XCN/UKmOdLJjTW1ImPUj3eKTavNoaRwKOwJmwcWN3dvipcF
qtsfvI2+xEOoU6Fj8rAFvkpjlxyLMUElS+KleNASRP+uu0fZpjC+5aXHFfDh
anR/4OVvprA0jBEW/smHl2jZ/NBOM7jG5MVmx1kh8kTjFKVujn/qeMWnVK3x
PJpI8W02x43H8zdn66wR7tGkzQi2QGXgyE81vjaQybllmnyygHCXWZznhA32
3+pW7GuyhKY4wMe50Hbhv4TgN/58qMhiX6ktE8Diqomwe5qPt4ojsQN3BDDT
7XJfXWWFfq/TP88m28HJV6pj6WGNgxNwG9QlICwQvquSWWMyuWVerYPAhUT1
+LEqGxw46lyj50ACThOXstxt8ff1iofZGSSuMTo4f0zbIvfXuYbKxyQ2X272
21YkwEtJRa8O3x7r1er1bzjaobktJZiRZA/vnWXT3aN2mOwb9K+/aY+Ahpoq
ewmBsuSomWMGFM6OsX5RyiEw86KzcYhNQd0k43bfYQLmku8cV3Io/HUsbDYr
n8CRHvGjWS4Fl8PcNb0nCGRG+d1INqNgFlcy930bgW0F+aWHCAqyZYfX9jwl
UCiVrv3Bk4J//IeIhlEC2UbkPaaQQnPTzpR9zwkEDZ85TntT2GHhU8t/tdD7
2oU5t5JCv57Sh9Q5AgmF8/2X/SiEz9P385VJGBj6MTcFUfixbDZkXoVE4qOn
/oohFK44nXkRxSCRFHjFWLCFAieJ+8lFjcSiFpVpjzAKDyc/8p9rkZCqqoWd
3k5BQdrW6q9NIl/h94nuKApLbUSuF3VIjHunJqVHL/ij+gKO6JO4ONrqtlS0
4Fc8OvjBYMFvelL3WgyFyZMro7cbkkg1DKoaiV3ofSMvu8shcapdy9Z3N4VV
w+37VnBJiEPyRQPxFP4HY0gEQQ==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQfcH5YIlo53w7zxn73yh/vml/n/ddOPfbPfaBUL57
/Ok09rdn7GHyv9mt8ljf3rF3h/LvnU+3rfZ9Zu8D5e+bvelwsco7OH+1rYT0
jmcf4Pxy3fAQs92f4Hx+3qvHjFK+2ftD+RZfEyfd9PwOty/p7rvYBv0fcPVb
13J8PfvrJ5zPUafUI33sN1x9tJ+NcubEv3Dz5rj1LVnS/B+uPk/+g9CHXQwO
MPUG63+9azzF4ACT/2THelr4FkK+LE6q2fwnQr5ursvnOnNGOL/tTl7ysVIE
v0965mXeLQi+kPW6bsPLCP60qMPOoZ8QfKmqG78rBJkcYO6dN/Pt5jkGTHD7
EzR/9Os5MMHVK+1kyjngj+A/8eD1CIpHqN9mIrr2fxZCHgASQPy6
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -2.302585092994046}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-2.302585092994046, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        5.703782474656201, 5.703782474656201}}, {{3.2894072757057793`*^-7, 
        16.11809532201759}, {5.703782474656201, 5.703782474656201}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\[Lambda] (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\) cm)\"", 
         TraditionalForm], None}, {
        FormBox["\"Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-2.302585092994046, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Trigger Size \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(T\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[Bold], FontFamily -> "Arial"}, Background -> Automatic,
             StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "Bold", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.710635609128961*^9, 3.710635752351063*^9, {3.7106357839597483`*^9, 
   3.71063583853299*^9}, 3.7106358696474447`*^9, {3.710635910754033*^9, 
   3.710635918627823*^9}, 3.7106362373992233`*^9, 3.710636276964999*^9, 
   3.710636346157333*^9, 3.7106364836109257`*^9, 3.710636892378202*^9, {
   3.710637493546974*^9, 3.7106375085776052`*^9}, 3.7106381974559727`*^9, 
   3.710638397940473*^9, {3.713722256463566*^9, 3.7137222691227016`*^9}, 
   3.713727903074486*^9, 3.713728309909318*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Electron, Photon", "Subsubsection",
 CellChangeTimes->{{3.710638322251697*^9, 3.710638322629693*^9}, {
  3.7106383563689632`*^9, 3.7106383600628853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
  "\[Lambda]canvas", ",", "\[Lambda]photonhad", ",", "\[Lambda]electronbrem", 
   ",", "\[Lambda]compton", ",", "\[Lambda]electronpauli", ",", 
   "\[Lambda]electronhad", ",", "\[Lambda]electron"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "\[Lambda]canvas2", ",", "\[Lambda]photonhad2", ",", "\[Lambda]photonpp2", 
   ",", "\[Lambda]electronbrem2", ",", "\[Lambda]compton2", ",", 
   "\[Lambda]electronpauli2", ",", "\[Lambda]electronhad2", ",", 
   "\[Lambda]electron2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7106380705306253`*^9, 3.7106381252653227`*^9}, {
  3.7106383615040207`*^9, 3.7106383700481663`*^9}, {3.713728391619473*^9, 
  3.713728391767706*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxNzX0s1HEcB/BLHtqNa5xznOvqztMdcUjacbufQpfK40lZzFx36cSMEbMw
cbvtcj1gHKZ2cUZ21wMtVkpprRaXhjYPoZxRLdx1i4getny+Ptt7773+eX/o
wqw4sRkOh4v8m39tGyG7wSTW8HD/T3RV2TWG5WKbPhHHr9Ri5WBdB61EiVWD
5SJ5ngJrBs9ze5dkWCeYzDrtI8VegNk3mQNl2DD4HceXW+40Cy4M95whJi6C
1dvzxTX3TeBT8SxJk9squO+BnFQb/BtcFDrZGp5iFrJpVR2L/IloAaYX9I8a
6qzAsisn9aUJeHCEd1CoVG8NruZEG2+Ld4JneC25rQRbsKc6hrJfYAcWeSzO
bOsggoXTLSMp1iTwlWR5dn6UA1jzI9XvbTsZvCoQN0wbHMFBA0ksfwEFjBVl
TtlrncE5hjbsnoEKri0d61PE0MBfRgKNLsrd4FLfhGZ1xh6wpfnl1FEKHXyr
e+S7pAf5QBFFWZ/JALMnzg9WUVzAvF1DHz4/Qj6cEbA+le4KFje2G/wJbuA5
CbswSossDNPY45PcwSbcwXLGBnLJG53FuMYDTC/ISVqKZYLdexl8nRHZ1WEg
9LiKBeZEKUgeYZ5gfjX/p8qE3JVHyJ5VeYFDOF97pKF7wc/wz6kvjciJT7Qx
Z2q8wfE2rY6vA33AR9IbjDo9sqCtWeUnY4PvzhIfWsqRCYyy/vEK5Ff1qcvS
SmRuBS1yrBHZNUu5cqkT2RRQET38ETk2e03UpkfWatILi+eQz7lHqJnfkCfI
lmsXV5CF69hQpZUv+FrDcvL6DuSnnDvzaXhk6gXaBtcG+f3CL+acHbK5orMj
1h55n1cG7zFpy37auOC645Z9i6rJNSfkhaajkrPOW/4dMjMNUpGPTXcXB9OQ
/wDFQQhY
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQnc/R+3BjNpNDkEjjr3URD/bfubT5aXofgu8199ZL
2Y0IvpqRxqfOb0wOATD10YeZkhqZ4XzP9T+VhaazwNXztJXVa35kg/PT7b9O
iFLmhPNPza+qbPHihvPFDQSqUxfwwvm/Fy03SjjHD+c/WbScsVNUEM6/cLwu
NM5OCM7nuBfW4hAsDOeb8Gy3r6sXgfPXaEtcOzFdFM5fMe/P9f5VYnD+TM3M
tE1XxOH8a0uvnX/4SgJhvtWZozkSUnD+PkVX9RIHaTj/wK99yR0hMnD+ttcH
dH7Uy8LD58fZwxdKpsvB+fon/Bh9j8nD1X/tWnfuQrkCnF+hZdbVyKToEALl
mzHInN7gq4hQf5WR58EMRbh5bC+WNwvdR6iX+OX720VVCa7+7/FohRfrEPy7
C9dyW7oow/Unf6lPmXAewX8cNK15apoKXL1qdN6NG78QfN47x2YptarC+e8z
kpWlpNXg+svzGiQllqs5+EP5B2XjXUMM1BHuvdlobncUwf/IozpdL0ADEf4+
PHvPPEPwE1lLAgqLNeH8delzJUP+asL1f73KtfLJJC24/KM9P5ZWy2kj0tt6
rcwDWxH8Eh+5JGcvHTj/SOKkE2euIPh8zV5fmbN14fx/Ms39jt914fZtSKiN
39ugB5eP3bD76zNRfTh/Q0XVT7GFCP4cMZ1fTVsQ/I4td3+9O47gJ3xw+HPs
nT7cfDX3yjpJRgM4X0bsUt15LgT/t/5dOzYeA7j+W54v/tnwIvjTa//VreJH
8IWeatW3iiD4vT7h9QmSCD7HluZ6azkEHwBYIQyc
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVyns0VAkcwHEzjMe9IyWPkUcxHmG4l8Z0oub+RLWmVFtKJ1tkFqs8Tq0e
KjPKo8luL1uUHmgPFiWW9JDubTVDFiMyKOMoqVatmjIxg7HtH9/z/efjGJ28
KYaup6cX+q3/n2x86mXNHjqU7Nys2D2OUkhDXnRkCh22ZXVYWnxCqdLEomFm
Gh1MboRsaXyPUgNdtSNxp+mQrCGemQ2jlODq83/sa+iw9Dynq+4pSrn6Lv58
8isdWp8wOnRV33xEEz36mD585N6V5sajVMgtDds83wCWofa37w8iFDP7gNhd
ZQi9hTuNbtWYUHGE+ux2tgm4BxWK8i4aU62Fh1MzBShM5v6QQ8syoqzxuUdi
ikzhaes5k3nbDamp62W+UR1mEDVPdnN+EIN6fb2MdtJyHmiIfdL7FgZUZ7No
y06+OZjaXt478p5OGQ9uzYTN86HHoGmlfi+N4jLvECKxBZQrok9IK/SoG54s
RUu+JQiT9F+pnWfJP65N956psIJ4if9g3Ow0eck9PvbPZ9Yg2bfrkVOlllSU
KOQvR1kw53D2WJNokjT2b5MmsBZA+feX6VXsr+RDx1VuKWAL/OPlRGH3F5LS
PhRKwuzAv/O27ECliqx/T3EmxfZQMCCM9y4fIyfbmzpT8h3g/OZt/QFrR0ms
ZT0tVLYQ7u3mWL84M0Kqc6o6Og8ugidLvpRKRofIQx68nGN0R4hNTrjA8Ogn
1T005tBFR8CThSp/iZxkaUOngl2cIK+n0cx/ooGcaY5Y9K7KCQZOKzqWyy4R
yuKb6LJgNrSbWhmMvJISwnHxj2flbFiN4WbvSruJ4U15GRdinUFgnafnb60k
XCKS+vq0zlAfipbd8RomTAdkBU5ZLqAOk99jpL8lPv4kZC+wdQXGg1rdI+wD
cTAp3YZV5gqO4+29fWs+EY/sI1eF4W4gqPnuxJOEz4Rh/7GlfKkb7LjWvWEv
NU6omC753hsXA5IU1eH74SuhWMdsbHuzGK4lzsRUrtYQuxgpG/f+7A6tG67U
rkidIqrirtqEzbiDri+wr6VohlD3IOWvcz3ANnfCEp2YJV49mCw54uAJb/N6
M2vNadB6yyOeuu0Jd44GoCsC6ZCyziE6SMABpN5pZuVufXi8K7el7RkHKoeQ
1i1iA5iTIVDr7/ECYB9hP65kgM4u40zghBcsDP8QTjw2hOqotMjGdG/IGBya
4PUawY7qBvUbSwyUaTucc2gmUH3osMaqGIOMOS88R60RSLpxNjXzdwxm9xtx
pHYIeA6ValQlGKQql3CKHBEoXdOtaavAvrlfOVs9EbhixdEer8MgQsD3+ouP
gKROqR1rxmBJdrF3QQwCUZ9gWjaGwfBMnI+gFgEH5/CjXBUGkTHnfVzuIvAi
PHG6+AsG/W2Uj14jAlvJS9NHJzGQX7bxrZch4LomVWRDw6Fh2d++Ts8RsLPq
EskRHH7b783V6qEwhSn5hkwc5iq3c3sYKDwPeadbborDL8EnuNUICvlpOlGF
GQ7i+UPcWAsUzEc8xFkWOOypOefX5YaCSudHPLDE4S3rod9NDgqdrMDZz1Y4
CNNH/SQ+KJxaFy6OssEhfEMQjx+AQkJsNJG/AIfu+mSeDaAgSE+cbbfFYa3D
Fd54MAruBYdIA3scmrNaePIQFIzrMsQBDjgE/TvOq1iPwn8cwCrW
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
5bdDn46x15gHAf8HmxsmBA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF1HlMUgEcB3CgcgjklSgKPkAkhRCsla3aBCu2Mm3OLJtUKGbUdNpBaTJB
8xi6OVutvLrUHGVmdKFZNrrM1NKc0WWtww61Zc2YRtqqrf1+f7y9ffb9/n7v
7e29x9dkxqVSSCSS6u/x75xJLXt7MY2i8NCu10e+ICkGVXcomvwZ4NUXfgq8
KmYq3P+70b/1ccDdWZAzivcZRd9dwG3vFlGX06hgrdxxMFHgCvOVY4uLxsJp
kHedzNlfGEUHf9Mqnbq9DOj7hnnoU0/NBpcMv7RrWtzAv+rMC5IeuYPnt+WW
bTJ4wL6hOjO5hOkJTlx0+Nz4WU/o9903rN8S4QX+0j+S3tuJpr7eUKhYNwfm
CYeLRj2MXshokRuM3nj/NZ9K6+lMcNM8lr2zggn7xKm0BAnfB3zmxNTT8kY0
b2gBt1buC64S7dh2acAX9rV+4rK71CywvcHe+3YEPZb5OMqc74f3v7TnXjrL
H/z+vGnfziZ/6N/kK4N1CjZY7nZAaehiQ9/mvJliiudAvmxcvkoxwoHcOmqT
TBoDwE833TZY6QR48uGdPl0FAfPea1yH30i5kMs615JjOriQF080mvWhPLCj
tPlRXxYPr5e4WyJqR2eLw0vzKXzoh5M43ZYYPuSOJ2TGm0rMWc6YXyuFgeDp
+yre52b0q9rz9CUrBWBet0/rUIkA9qX8MG492IuuF9B/eLGDoP8+7mjBkW3o
mQkUaYslCPpCVcazZ050VU31tWm5EDx7sKM6sEgI84ZApproQ49tTxH4s+eC
L4/uIvyS0VkZeX4s81zYx+nIlFlH0bcC1Mr4sGDob9XvjHiQg3Z5nr844l4w
9Kd2r9NaaSHg7wxhhTQ2BL+vJlZjbg3m9mhGe89HzDkimws3VAR58ixd7K49
aJOVelXTKoJ+s/a4X/w0up+IT+asEuP78IR2dugQ+t2NyQY9MQ//JxfEO2xX
0VzD6Q9kkgSsiyY0K6Ik+HwSNjJN5ei7yYc6ewbQbgVRjhlpoeDfnILyyAm0
JSlX3Z4nBRebjonjuqVwvc2W646PTBm+3941EwYV2pKd89OnVgbzSd8UUx1f
MadeKTAuI8LAfwC8ciBu
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVzH9cy3kcwPGZZTX9WKulZvpd23fKd1KJnM+bRGioDpUT0jWPq1YORVSE
Qkw3JD9KLL9SSlyR8u0X67d1oRB1cv3c9ft3bZ374/V4/vcy8w/1/JVMIpH8
f/S/tGVj9ZNcJXpB7xYIPfvQjh5vp/7lSmRxvvcruL4lMlMKUv9xVyLX8Qcf
G6rqCOVmttpnPyXi9K1xEm6pIzaRo4PkYUqkQM3Dk+9riVvPWupfxyqRS5RE
4+KOWqI/cJXTy8tK5NZ3Oczi7xpCUk1Ru/dciVZ+2GssUFQTbVGBQTeqlIgy
U+DzbX81Yc+vqE9sViJh5gF5xFgV8eFyQupRkgpVp8f7SMlVBMuP4eThpkKH
CwtWThtWEEH0g6lrfVVottovLySpMqKw9D1lRbAKsYcFLpiljPDjXKu3TlSh
s4+rQrfhb4g7/SZB040qtOFY7tUc13ICO2mbel84g56Sa9N3/V5MRDpcpKQc
mUGdcn1BVx9BVHX0/yZJmEHisIM1jKlXRLD7s6VR2TPILDHRMEC3iMhhOtd7
js0g97KHX1Q/vSDYP1uSY1xI8J0j09S6+oRIb1/swGsgQbhkSXj46ljCSpfu
0t5MAv+6GvxVzwHinnPvljvtJGiyy/JKuLSBuJ+YEcyaJEFD54cHp1qjUMZy
i3Sa2SwIbU9VTOsmo2yxvl6PaBYkpS/+95E0ExU4jvU/opHhiizNKKD3FZLH
FWbarp4Nqo3zkK2mHO3rS+zqiFeDfa9v2D9PaUGCSWqbUykVdnfxe8WHOxDa
0RDfakODFcZWNRf/6kMppzoHVoo0YcZ0IPxLwxBSp3hSh1u0ISNvVVPVvHHU
yshWmEjpwPbEde0E02iQ6ut0u0QX6vK37A0zIQGNm/1RMM6A4tzCTm9XMvjY
PPyylaUPb6KK28fdKFB3Yhg9dGTCZrUlihNr5sB6cvcYJ8gAWgKvnhOFqMNk
4CkGOWEevDUrtBAdoEHuaEUstcwQVO6aO3n3NSGx0c/De8QIvA6Syr/+pQ3p
N6/FUvTmww6O1DA5hA7E+WiNZjc2lIyeze8+owv0PepD2r8tgHWFRq8iJQwQ
7l5hFyI1Btc/3cTRT/Xgn5yStwaNJpAmqbG7KNeHmsGRDq2jppAmEIY/+cyE
DPNWxj0DM1jth02lqQxAWs7u67lvBvSynLoIHUPAdWIjtzuawzbnENkcthGs
DC3MaZKbQ8BkDx4NLNi3an0ydY8FiCNZP+3ynA9M7BHPXWkBeg6M5AXH2LDt
hUNwXpIlVJ+8dd3x9gLIfcnYVWdlBV0LK8vwp8bwR0P59FSxFUg+ibI+NJtA
ws7KjY0e1nCViReJj5iCYeLo+qYWa+iMNKkxJpsBt2l8sPcIB6JsD+09lGQG
XhKB4KkGF5ZJA65MmZoD2T/C88JdLgRt/3rcJd8caqRD6sylGIywjvQ8drEA
TJwsKn2Nwb1PNweCay1AQ8yIOb2bB9etX5/s8rcECqkFRvt5kOGrQ4nutYTY
+ONZxy4shCa6wl5+2gou52+o5HJs4OYen5ciljWU+AiTYvNs4Fmg5QTrrjXs
1/XRHvSwhdbT5/PFzhxY4ZyyVKfNFgx3emtQKzhwXYtG99y/CGZvKFWTe3Dh
6MjGSxlzcdgUUbQ3roMLEZtbZTk3cPgsCojr+h0DxxsvW5ek4jDH8l3vtUMY
DLcnTeSl4VAemk1dcBiDsGjBwqK7OKztaQuVHcNgX1aBuDIbh3ifIWpAHAbe
c69s/VaGg7P77oKv1zBYLlvfpqf48Zs9paVRgsE4w2o6qReH02dEvIoyDPL8
SEzWAA6x158gnTcYLBnNW2s6ioNT5bmbjVUYJDEYWw1IfDjj+3hk8zsMxKti
npvT+DBxoquuvwODkA7FmoC5fMivLe840I2B+wXf+ruafMjU0DJ+rMCA9tGh
m6vDhyuCVsezAxjEhSnm4/p8OKkS6qybwuBXA98HYUw+7JIL7ceVGKwplNnn
GvChUY9PsibxgKwuFTgY8eGt3+QQRY0Hf2fRP4Wz+HBwvw0zj8qDYq/owOfz
+WBXRF20jMaDtImewQk2H5IH3IVemjyIueUT42zMh5iiS99LtXnwH1xpyzk=

         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 6.907755278982137}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {0.,
         0.}}, {{3.2894072757057793`*^-7, 16.11809532201759}, {0., 0.}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\[Lambda] (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\) cm)\"", 
         TraditionalForm], None}, {
        FormBox["\"Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      6.907755278982137}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Trigger Size \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(T\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[Bold], FontFamily -> "Arial"}, Background -> Automatic,
             StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "Bold", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.710638126343959*^9, 3.710638225292419*^9, 3.710638370618696*^9, {
   3.713722272568489*^9, 3.713722278473634*^9}, 3.713727911568219*^9, 
   3.713728317853445*^9, 3.713728393047246*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLejZPk9DeJrdjakJUWsuiDmIa0brtdofsYfx9edr
nG22vwLnX7Q0sGmRfArnV7lqPRaOfA/nL2UuT5226QucHxGimblY9Recf3hr
l+h06/9wfq3zvRWu8UwOMP7CmZrij4RZ4XzFijM3P85kh/Pb+8KfNIZxwfme
ulbOrU944Pwplv6fVqXyw/mP7ZaVrOAThPO1lgZImQYLwfkp6u8fM24WhvOT
Hiy7Gs8jCuf3xXYVlvuJwflrvyUanl8tDuf/Ck6d/eCjBJxvdTZG0yhYCs63
r829L7JOGs4v+rjSfuNHGTh/euOtw70BcnD+q6tmn5RnyMP5jQZhS5bmKMD5
bCzdiTelFOH8RTuvfs7ci+Cb10rNmJWrBOfr38m+MFlKGc63k7189+VuBN8t
x+Tv/SwVOD917uqPRnyqcP7zTP0qv3UIfpLLWhGuGDU4/wuDY4vSPwS//vQ5
1ttr1ZHiryjmQ6AGnK92QMn93CcEX0XsrLPPQk0439KvV1TdRQvOd5/i/nPh
FwR/Rylf4dOF2nC+g+Xrva3OOnD+Qa5DMsc+IfiR+9YFJE/ThfNDeFdInDTT
g/M9smZ/OvcEwQ9euWShYbs+wn8mPf5XHiL43g921lnLGcD5AEprf0A=
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnc/R+3BjNpPDLL/GX4+5RBzuRB9mSmpkhvM91/9U
FprOAufztJXVa35kg/PT7b9OiFLmhPNPza+qbPHihvPFDQSqUxfwwvm/Fy03
SjjHD+c/WbScsVNUEM6/cLwuNM5OCM7nuBfW4hAsDOeb8Gy3r6sXgfPXaEtc
OzFdFM5fMe/P9f5VYnD+TM3MtE1XxOH8a0uvnX/4SgJhvtWZozkSUnD+PkVX
9RIHaTj/wK99yR0hMnD+ttcHdH7Uy8L5P84evlAyXQ7O1z/hx+h7TB7O/9q1
7tyFcgU4v0LLrKuRSREhf5WR58EMBF/il+9vF1UlOP/v8WiFF+sQ/LsL13Jb
uijD+clf6lMmnEfwHwdNa56apgLnq0bn3bjxC8HnvXNsllKrKpz/PiNZWUpa
Dc4vz2uQlFiO4B+UjXcNMVCH89luNprbHUXwP/KoTtcL0ECErw/P3jPPEPxE
1pKAwmJNOH9d+lzJkL+aSP7nWvlkkhac/2jPj6XVctqI9LReK/PAVgS/xEcu
ydlLB84/kjjpxJkrCD5fs9dX5mxdOP+fTHO/43cEf0NCbfzeBj04P3bD7q/P
RPUR8hVVP8UWIvgJHxz+HHuH4HNsaa63ljOA8wFDsnEh
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxFkXtUjHkcxruSdH9nopJq3orSdWZ6J6V+T0VIF/csVkqRMLNHSTlsy1Ek
HFFxhDCUoxJ2t3UpklSj0mS3i5TGxMgytai0XVh7DuOP3/mdz/k85znf7/na
RIkWx2ioqanFfHn//9KAewns9Dzfhm5fi+Tnz0mXfm/4RGUZqf/KcyPq1o9X
1pPGrzwy3kuorewg3/J3cq/fj7ftVXlD/eZqbvSgileFzqI3Zo6Rpq98ZZJ/
1oxiDXzzLbt9qzlh4/Ctr827sH7AV1fFa5PLiq8466nyPaUNhzdMMYD0K892
z9gne22oykuX2VYUPTXCt/n77fPcZc3GKm82ZCampCaqvpwULbK21UTVZzK+
r73omYkqr2taZRKo/J4f5Qn3JOlSKi8TVUZ2zqZU/vGhzU2GUd99VaGpn38K
pZoHPPXOw2nfffmtN0lPD1Ewtj3kEqh4Trz8W1jTsylo+QvOJGnKSamk4mrC
KQoDEc/1C63lhLuoMPiemIJiV8auTh85KWnL7tEvpNCe66E0XCUnl17FWRfc
pHCrNb0+IVtObEXLyj5UUCgZ4M0quC4n5wbJCtRSOEc9K3zSKCcntdlHnrRQ
2BvGzfDV7SYH6bufJ/ZTCKlpn6+T0k1EEVTXTy4stJTOqMmNfUGY1tunvcQs
DGQ33Kv0VhD+Q8vtUZdZ6I1cNi1qhYLwylMWHrjGwmvnzoPq2xTETRyg2X6X
hY4Hb8NxRUEcRXWxyR0sVA9M7C23fkWsxj/l3WCzkbssyPymdg/REQxLPPaz
4cOu2VrS+Jq053gOum0xRWpWBX1qnZJs+lnpyV4zGevNgo7nHHtPpOdDj910
NodLlF5wF3eQcPpetS6wnYI/h32bNa2HyYjF6h3FxlOxd+k085rhMXIpdSe/
sdMKfRR/bqpEDWcz4jaLeqyx7+LBN1llGmh5vzkovMkG/fGZBdGHtaApzLAs
beAgJO5RCGffOCT8cDxv5wMarn6KRSWJOghdl+wsLrJF99LLW0Zn68Jq9/ar
KLBD2pH8eIGXHlaVLyC+mfYY0wnL5BoYoH2j/i5x4jSMRj7WG2szRJjjm5IU
0XTEvwu8ufKlEVwn5PXeDnfAEunwx5wGY2iPCjmiJY5wuP9wRpDEBFYRTtoH
gmbA336/QcyXu4pldz9ouTuhpsBirCufBctEUeugozP8fOpkTWfZUHccqJ7H
coHdu4VS+oApHEJjYzT+dUEwu0rYKZyEuWkfh7jvXLEpZImGwYbJiBW61Edu
dkO/+Ma5M6FmKKBFOS9fu2GrgReTP98cFj0n15tFuGPl8cwWfb4FrkX7GKg/
dv+yb4tdp9kU+L/Z4nYhlItLpwVxNGUJnd3pKz5WcsGXCG9JRiwhseaNaPvx
UKpT+VnxcSqKkpZsqy3jYecNjf5NfVao6loz4OXGx/L7ejumb7JG68Khvthi
Pjby8xOWf7mTVdPOfwI5Hrj2m+M2/o82SJ+QVNuW5QELpV1IdaMNeheoW9gb
M/jFtSSPCuZg/+lt8XQqA/Pd9JBRBQf5tdw1DvsYeBbJ5KaVHFR96Jvnms5g
eevphilVHKgFxU31PsTgqPNk8fRaDrYPrpEszmYwoV0vFFIO1ofNs9pzkcEQ
d1AsknEQoG5RJ3vAoPlFbdgjNRprndp+V9QweG+Y5vWXBo2fw7PPvpUwMPIO
sGvXonGr2DBxqIFBcGb58EsdGtyVWjZGLQyqfK5fHDOiYf2rMpEoGFzPyR1x
sqHh++xy5JweBtJ7KxRcmsbqCbHBC/5m0PuW3eRpR+NEhNwmvJeBY8CR/NkO
NAz1WuuFgwzO9e1dtNqdhpMg64+EIQZ3zP1nRfFoBEUtOr9jmEHHnM/2sR40
0m7UbU/7xGDyqeTR+Jk0LnTvjzqoJgBTw7xK9qZRaRAYclRDgKXvPzSl+NCQ
zdT0PKElwFbLa2WphMan6ArOmXECHJknLMjwo/EfenzWuA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxFzXk0lHscBvBhbA2meI15s5UlxvqOdJVy/b4lWSrJJNlu1ixp0UnJbXRc
NCXkqmvJ0T3DcE22pITSVUl1s8Z0TsgyCG0aORThuufcXn+85z2f8/ye56sb
eMw9RJpCoQQsff/9VZx511lYpl3bkJ3mmcFBNGbb8JmHbqP2/8009rFIQo2o
5X8Tf7JaElAX6Q4btm3i6hH0ox/rYDKEeU2QfUvsvGk6MUnmhdTTIZm3psj+
gqnbqFbkDOkD+4zDC9bNkqbLeqO8m99JP76TzMjaskjuE20dORcWKPAj59r3
FTsclIYf9/g5xkwxJktaN6b5tSRHnjQvzXM4fj+N7Dubb7ZPGlYi86s2eyZv
hKwk8yG7opPFdBXSJoVuGj9xVMn3rqnv3lqGLzsqOrHK4tyyaxxqdrFKVMm+
49s15zSpGJmnVXNwBrHsV+d5lXSfZc8e1Y1TjFq2tuc9FwXesg07Brm8lGVb
7FSolMvAQBSySP8yPYg2PrEYTsrC4NvunJ4JJTEC5MGUzcNAy9qq+IOeGDnX
/uqSmI+BvU7LyfFNYuRulc+lFmMQLBe69a2rGAUbTQxJVWFQ/upad3+sGDnJ
VfuE1mBg515dG50uRmYjZzub6zFobunIViwSo6l82uOsZxh8bFTw3NghRok6
hvnmfRiYVZ3qTDMaQgKGn7/XCjUoveze/HPXEBqivui9eVANhE60B7nmIyhw
oEh0UIkBgrozfM+BUZTmlxx12lUdPCrkVarHPqCy6QDLthImjK2wukAjJGiW
E5I7IMEhodHG1/zeF7S5xdd4PUcDqHdZMe3caYS4R/rVyjVBieky/IfVN3RC
IkSVEi2IWnwkaK2bQ1nx3Y9T3XTg/hqDMl7MAnonsp7Uz14DlsGfZLoTKBDP
3i8ojFwLzhNBPlJPpEBO5lLAaw1d4GS2iMJ0qZBfK/oSXq8Ll6SCZi8ekoGN
XI3sa0f04M6FD9veN8kC0Xu4/YqGPhTtuFz1Zq082Gl3vhm/pw+Nz/xaLwYp
wI7IDfP9EQbQeWit8qmHKyAkr0Synr4OVJ7TpzUVFGE0nIh1LV8HjEB1eY6T
EgRuL1Oj+RqCIlPV9p8CZZiibE3UWzAEIt1Gc26UDudetMr2lBlBfobJymr9
VaAbc8L3814WOKDWkBdPV4Fhg55j6yQLXHhxbsIwFTBQb7HfxTcGpzes3UZM
VbBxTWUYbTcBX8a4jnSdKjhedfzGnzKBwz4F0twIDGqi6VEjfFPotY2IbWCq
Adi8r0+yN4NgiuNT/1o1eEh7pNU0aQYjHdqG/DAGeD0odwvKNAduEs3bTkkd
9ikX48+tLSCmi6onKFUHp4jcydZhC4i0nJkTejOBIxTwLXkEnD5OKVGaZ8LN
EeyuXDIBXaXHGgYXmUDXS2juSSFg/XifqFoah2fXAmaSMgh4H1BPCVDAwTZF
Z3d3HgH+nNj9dzAcDI5lf/3tNgFO1lNSv5jgMLUhZU/XIAH499EDFZ447I2a
CxYOExC9yfNoojcO5WURsXGjBLw82ZTg5YdDmKFzIesjAZc+CsqpQTj0MuXm
zn4lgNIfIHPgKA6B86gzQ54NYw97KihJOKTnzvjNK7Bh+4LLExEPh79tKsZC
aWzI31zXfSMZB61TOgu2ymzwrcqW9UjH4dWn76xRVTa0Czx8hLk4yKTertqr
xgazwcbjcddxsDKNtLvPYEOy9obzHP7SfmgP53d8aT9TtXK+aGlf9krf3Go2
8F/GN70U4vCpwCX8kCYbKCslPX+VLt3bJj3VrrV0b6e/5GwFDjsHauO26LCh
jtcm534Lh38ByES2Kg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
/g/eSv4V
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVznk8lHkcwHFmEMqEIWcjw+MqnseVHPX75kgkRiO061iiIl7SiWgSVllE
NDkWO8lVmRVqyTGj+6KRo1dG2IzVSSYhx1r7x+f1+fetGxqzJ5wkISHhs9L/
V3JLLzWisrdNyi0zu73I/LCLBU0D6DjaoiNy9t9F5u/d43qJi1IRP8SucHgH
md/VQGMVoHwk6iz3ndxK5meEZZzIQteQdNa9TOVNZP57B/7XdNSIPscN6e6X
JfPVjH82S0MP0CrN0ESZDhIfLzPqTEG96OLQW226OYnfbUs4pGqMoadXHUNC
P0jwE1xMRqn7JlFb5ecr+tbLvAryqXB2/TQivQxOdoxZ5Pn7GEeUY/NouS+t
J8n6B+/+7QzVK/bL6CRT5quANMNLchqqdgkmwfmCrISKADGPU2is9o4qDR4D
7z5r23/h6ca9eDNVuAo+aj+87r44xkvP9hMl+8pD0+Gob0EPhTw3UzunNNEa
kJ21fkFmPeHl23qJr4evBeNZiZNJv1xHo9sqj1dTlKAWOdFTE3uRSQVD05qp
DNQJ3/pz4e9QmOHkqGQDFSjHWSzFwE8odKSyL3iNKpR09J621Bej7MCM2FOe
60Dt+dnobv8ZVDsTYv7yhhqkJ0u6EtPzaJ4ZXjwypQ5ankVO4+7LyK4zwNiC
qQndrLomHSkSoKToYRWuFvSwL9xxDpCCo1M16NaUNijKe1n1X5SBK8kD97MY
NDiSJDOVPSMLH/s2i/UKdCCBRD3daLMakgnfaxVRG8ADCdQ9jiiAjNRvIW80
dYFyauKAzOBauNrc9y2iTReaVYP2HVFUApskzYKiaDr4V36xSPJQBnzwsCBP
Uw++38xRXEihwrb1PW8/tOgBReSFp1epwI4oq6XhSH2g8TTutohUIbzkxpQF
BYN2lmpYh4IajEfgCZ5cDGL9CktazdUh1LlWRT7AADh+U5JRMRowLbE9lf6v
AfhuH3BkF2gC63mXtLDWEB7vqXmWItQC3bijAV+9jeCyoIzTIbceDPh01y6x
EZTKPWqrs6CB/rpOJw+OMcQxWnNiT+iArWeWqqGzCbS4BQZyvDeAa77rD860
CdyKD2iM/74Bmk5QYsc4G8FR4ZBtGVsXwPZTW5rTJvDqHvazMKVDh/w97Ufi
TUBJqW9tFdBhXzuXsZ9tCmzVY8V/ROiBj0K1+tPNZnDVt2GXaFkPdkYWi7tE
ZsBdOx1pU64PzJprHPN0HKwy+BW19hjUjVH/ksnAofTcuoODWzGg0FNeCDNx
WGxPS7wFGDwpCplNu4TDg1/FDK4LBg6ZtN0DJTjcG7Ws3c3AQD+mYO5cIw7R
Ysu5/nAMpq0yvXr/xkElt2rKLAcD79iFsBoRDmdpLaPxeRhwayMTzozjcMaw
qSX4MgaHDNwqjL7gQAliPM0swuBhaNPdpUkcnCmbH4/8jgG9zFDwSowDx71i
8HYZBiwhe6zqOw5ee0UGF8oxGFSTWUicw+FmLtMhqBKD0CXUc2kVAZpbrDr7
mzHIKZ4NXJIlgJZ7KK+rDQOe7Z/vD8oT0FunPHeWh8HE6wPHXq0mQCjn2h53
HwPtk7R/HRQIsNlxp2f3IwzcVfrPV1EI6JL3M81/gkF8fRZVWZGA8vmfmuyf
YVDNcClNVCJA0uZZp2InBv0Ti0bjygSQtLhxLAEGUlmNDd4qBKCPrz21XmFg
uTFqW6sqAa15meXG/Su+g0JmrjoB3WEzW+yEKz7pvKEFjRXfzoHR6qEVX7l7
xAEtAlTUpe46j6z4HEnTAm0CYnyOvdQYxWDXSPMZexoBrr4N2dn/YPAfbx5R
Mw==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxN0X0sFHAYB/BzdLvOUV3hjnO4c3Tnda2xsp1rsdUNM67aWOG8Jc2hCxHH
Djs2Y7Y6L73R7MoOpzhasSt5CXE1HS29KJOywuYWh9629jz98dtvn31/z/N7
c5NIo5KJBAIh4s/4O0vJVXOd6UShxv2yylHBEs7GDhAlJZbCtn8+3rHBoams
IKeW58h5qyRwarCpJoazE1y3HFi2HECB+tGb+ZdKRdbgldRQs+wiFdY7+O8u
SL5lA6748sYo6bEFbzarD8RP7ALPN6stKuz2gA3DRSfOCGhg8ruTpcLoveCD
1J7gIvk+sMaLbhxR2YHv3Niarm61B9fz0lLuTTmAez+7OI3G0cHGFuPk3Fc6
3GdZ+kKkLmHg/ofHB8/THcGf2pQ5mRp0v1uop0zoBNab+xOVYiZYt6T3Xpc7
g9efDxhkKhbYbyTCInzIBWyqbJ8w5LpifUy2N68PnccPqCwhusF5AwjMMW24
G9a/sqB+qEOTFtUK2ns03Ry+GcJlQz1lbqrK/hwb8u3hWNfFdvS3LqurNRvo
t01t1odCOODENXlSzST6Nsd6jebkju8VdVVxJcUd9rM6RfTt0WLOjc2YmTGj
6xsbHmwHc8E2s0MN7DJ0EdsujmVAL59N5Dg6eUD/+0tZLEaCB+S5GcUMuhrN
HJL66ZbQj53jQsX+nuCkgkzBs3w06XVJoGDQE/pvZUen6ij7IV+lclW+keh5
Db21sBFtDKP2jS+gmTw9ycWHB07YIYvMusCD/koduVvSi3l76nWGeBv9kiVO
YB7j//fflLvzteiPj9ZbClhe4NEOfpq+Gy0LY0mOirzBTxNqR8an0LYKkcky
3Qfvb0h5wu5E/2Qqqo/88IHzTguKc38F+UKujS+M6ytGlyuv8aPG0Ke1D00L
dn64Pi9/w74JHb8i3Br6jiZ3KeRBLH/wb4Iz6VA=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkXk4lAkAxiXXzjiWcY4xGec4xvf5io2s77WOoUOkUg8SkdQgNkaWymIn
atjkTLnCkqjQbnY7aY8Oqk2Xu/BUbIpm0aFd/fE+v/9+vz9eXnjcukh5OTm5
NQv7TE0fSTmfVeRqeVw8tWQLAxF5JRd66T10zDWJQekOBjasE+Y305n0F25G
4xrfMtDdyt1fQhfQmytjpTMSBnIichKldA2dM/avfv05Bl64XH0jodvo4nAR
v1yBCT2rILss+jp9ybIrbqyeCaKC35VB99DvggvHgyZUcc+JdMk0GKMbjTVT
7fM0kOJpPcLa/Jpe01rNFs19idrF4siiFhmtzROndHC0sGm9VfRJ8/f0iqyX
DnkbWOg8n6NTvOI/erW8tvc2sTbS3AfrPUPlET/oUVF9VgdVpVZ6z1iK6I+o
UXYY1QUv+faTqVJliBKVAo8v1ockN3A0fSMDLY4Z6/RcDOAjcHbPGlXFeQXr
8vatbBQ4rZ0+FakB/0qSyDpgiBHXuj316poIfGa8taedA+taP7ZDgBZ0mOUl
/CEjRFi+HlnUykLR3NsnAu4ShA/XPQhV1YFy/0CHo60xckNy4sW+urCHytLl
V4zRNBNmf6dRD62r2mS2oTy8D4gsG57Sx9O9ugEzMh6cu4KtqAA2Pu4WTN8p
NgGdFjOk3WwIl1VxaZ7LTZEw1UCfm+KgT/PRxIFuUxSn93ZK/bjIrtz6blGC
GcYfOE6blizB5XCN/UKmOdLJjTW1ImPUj3eKTavNoaRwKOwJmwcWN3dvipcF
qtsfvI2+xEOoU6Fj8rAFvkpjlxyLMUElS+KleNASRP+uu0fZpjC+5aXHFfDh
anR/4OVvprA0jBEW/smHl2jZ/NBOM7jG5MVmx1kh8kTjFKVujn/qeMWnVK3x
PJpI8W02x43H8zdn66wR7tGkzQi2QGXgyE81vjaQybllmnyygHCXWZznhA32
3+pW7GuyhKY4wMe50Hbhv4TgN/58qMhiX6ktE8Diqomwe5qPt4ojsQN3BDDT
7XJfXWWFfq/TP88m28HJV6pj6WGNgxNwG9QlICwQvquSWWMyuWVerYPAhUT1
+LEqGxw46lyj50ACThOXstxt8ff1iofZGSSuMTo4f0zbIvfXuYbKxyQ2X272
21YkwEtJRa8O3x7r1er1bzjaobktJZiRZA/vnWXT3aN2mOwb9K+/aY+Ahpoq
ewmBsuSomWMGFM6OsX5RyiEw86KzcYhNQd0k43bfYQLmku8cV3Io/HUsbDYr
n8CRHvGjWS4Fl8PcNb0nCGRG+d1INqNgFlcy930bgW0F+aWHCAqyZYfX9jwl
UCiVrv3Bk4J//IeIhlEC2UbkPaaQQnPTzpR9zwkEDZ85TntT2GHhU8t/tdD7
2oU5t5JCv57Sh9Q5AgmF8/2X/SiEz9P385VJGBj6MTcFUfixbDZkXoVE4qOn
/oohFK44nXkRxSCRFHjFWLCFAieJ+8lFjcSiFpVpjzAKDyc/8p9rkZCqqoWd
3k5BQdrW6q9NIl/h94nuKApLbUSuF3VIjHunJqVHL/ij+gKO6JO4ONrqtlS0
4Fc8OvjBYMFvelL3WgyFyZMro7cbkkg1DKoaiV3ofSMvu8shcapdy9Z3N4VV
w+37VnBJiEPyRQPxFP4HY0gEQQ==
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -2.302585092994046}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-2.302585092994046, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        5.703782474656201, 5.703782474656201}}, {{3.2894072757057793`*^-7, 
        16.11809532201759}, {5.703782474656201, 5.703782474656201}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\[Lambda] (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\) cm)\"", 
         TraditionalForm], None}, {
        FormBox["\"Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-2.302585092994046, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"Trigger Size \\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(T\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             Directive[Bold], FontFamily -> "Arial"}, Background -> Automatic,
             StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", "Bold", "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.710638126343959*^9, 3.710638225292419*^9, 3.710638370618696*^9, {
   3.713722272568489*^9, 3.713722278473634*^9}, 3.713727911568219*^9, 
   3.713728317853445*^9, 3.713728393534566*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 675},
WindowMargins->{{222, Automatic}, {-8, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 85, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[668, 25, 234, 4, 57, "Input"],
Cell[905, 31, 452, 10, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1394, 46, 176, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[1595, 52, 1236, 35, 94, "Input"],
Cell[2834, 89, 613, 11, 50, "Message"],
Cell[3450, 102, 1721, 52, 132, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5220, 160, 175, 2, 43, "Subsubsection"],
Cell[5398, 164, 1684, 42, 134, "Input"],
Cell[7085, 208, 1171, 22, 60, "Input"],
Cell[CellGroupData[{
Cell[8281, 234, 621, 18, 59, "Input"],
Cell[8905, 254, 263, 7, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9217, 267, 694, 21, 56, "Subsubsection"],
Cell[9914, 290, 438, 11, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10389, 306, 150, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[10564, 312, 810, 17, 41, "Input"],
Cell[11377, 331, 797, 15, 29, "Message"],
Cell[12177, 348, 504, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12718, 362, 649, 15, 41, "Input"],
Cell[13370, 379, 801, 15, 29, "Message"],
Cell[14174, 396, 416, 8, 35, "Output"]
}, Open  ]],
Cell[14605, 407, 2357, 61, 190, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16999, 473, 290, 10, 59, "Subsubsection"],
Cell[CellGroupData[{
Cell[17314, 487, 569, 17, 42, "Input"],
Cell[17886, 506, 317, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18240, 518, 496, 14, 60, "Input"],
Cell[18739, 534, 209, 5, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18997, 545, 202, 3, 43, "Subsubsection"],
Cell[19202, 550, 9460, 252, 447, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28699, 807, 123, 1, 43, "Subsubsection"],
Cell[28825, 810, 7981, 205, 454, "Input"],
Cell[CellGroupData[{
Cell[36831, 1019, 832, 17, 97, "Input"],
Cell[37666, 1038, 26151, 516, 392, "Output"],
Cell[63820, 1556, 27762, 544, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91619, 2105, 1222, 21, 78, "Input"],
Cell[92844, 2128, 46518, 926, 307, "Output"],
Cell[139365, 3056, 49966, 984, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189368, 4045, 1085, 20, 57, "Input"],
Cell[190456, 4067, 40538, 776, 314, "Output"],
Cell[230997, 4845, 43598, 828, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274632, 5678, 105, 1, 36, "Input"],
Cell[274740, 5681, 13970, 273, 294, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288747, 5959, 712, 15, 57, "Input"],
Cell[289462, 5976, 43973, 832, 314, "Output"],
Cell[333438, 6810, 45269, 855, 312, "Output"]
}, Open  ]],
Cell[378722, 7668, 1488, 42, 228, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380247, 7715, 145, 2, 53, "Subsubsection"],
Cell[380395, 7719, 1633, 45, 135, "Input"],
Cell[CellGroupData[{
Cell[382053, 7768, 644, 12, 47, "Input"],
Cell[382700, 7782, 595, 11, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383344, 7799, 162, 2, 53, "Subsubsection"],
Cell[CellGroupData[{
Cell[383531, 7805, 746, 19, 155, "Input"],
Cell[384280, 7826, 364, 11, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384681, 7842, 1471, 39, 98, "Input"],
Cell[386155, 7883, 240, 8, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386432, 7896, 1050, 30, 167, "Input"],
Cell[387485, 7928, 153, 3, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387687, 7937, 169, 2, 53, "Subsubsection"],
Cell[387859, 7941, 7181, 192, 637, "Input"],
Cell[395043, 8135, 7857, 212, 718, "Input"],
Cell[402903, 8349, 2620, 75, 178, "Input"],
Cell[405526, 8426, 12337, 326, 886, "Input"],
Cell[417866, 8754, 7887, 203, 431, "Input"],
Cell[425756, 8959, 2403, 63, 124, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428196, 9027, 99, 1, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[428320, 9032, 1115, 19, 57, "Input"],
Cell[429438, 9053, 60577, 1205, 326, "Output"],
Cell[490018, 10260, 57824, 1159, 326, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547891, 11425, 160, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[548076, 11431, 742, 15, 57, "Input"],
Cell[548821, 11448, 52403, 1047, 311, "Output"],
Cell[601227, 12497, 59416, 1185, 326, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
