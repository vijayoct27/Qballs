(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    513738,      10738]
NotebookOptionsPosition[    509850,      10608]
NotebookOutlinePosition[    510240,      10625]
CellTagsIndexPosition[    510197,      10622]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PhysicalConstants`"}]}], "Input",
 CellChangeTimes->{{3.7026599174107428`*^9, 3.702659920282866*^9}, {
  3.707578062616406*^9, 3.7075780627309227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\\
)\[NoBreak] is now obsolete. The legacy version being loaded may conflict \
with current functionality. See the Compatibility Guide for updating \
information.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707578065594265*^9, 3.7105062105315323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic Collisions in Lab Frame", "Subsubsection",
 CellChangeTimes->{{3.70439758295687*^9, 3.7043975846021852`*^9}, {
  3.7046500341470222`*^9, 3.7046500373350277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m", " ", 
        SuperscriptBox["vi", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "m", " ", 
         SuperscriptBox["vf", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], "M", " ", 
         SuperscriptBox["v", "2"]}]}]}], ",", 
      RowBox[{
       RowBox[{"m", " ", "vi"}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]}]}], "}"}], ",", "vf", ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "v"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7043956982810183`*^9, 3.70439578376477*^9}, {
  3.704395820560055*^9, 3.704395852925693*^9}, {3.704509543602092*^9, 
  3.704509563726329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(\\*RowBox[{\\\
\"Solve\\\"}]\\)\[NoBreak], so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7043958260514793`*^9, 3.704395853329617*^9}, 
   3.704509568536331*^9, 3.704571395293263*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7043958260598097`*^9, 3.7043958538832006`*^9}, 
   3.704509569081953*^9, 3.704571395829649*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second solution is physical one", "Subsubsection",
 CellChangeTimes->{{3.7043980437290154`*^9, 3.7043980559534397`*^9}, {
  3.704574584179956*^9, 3.704574588758279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efin", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "m", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "m", " ", "vi", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["vi", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["M", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["m", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "M"}], ")"}]}]], ")"}], "2"]}], "/.", 
    RowBox[{"vi", "\[Rule]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", 
       FractionBox["\[Epsilon]", "m"]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7043960422641973`*^9, 3.7043960544458313`*^9}, {
  3.704396240710936*^9, 3.704396279919651*^9}, {3.704396340045801*^9, 
  3.704396370510132*^9}, {3.704396445968672*^9, 3.704396514333053*^9}, {
  3.7043967352607117`*^9, 3.704396742762102*^9}, {3.7043968693853273`*^9, 
  3.7043968697025843`*^9}, {3.704397182522834*^9, 3.704397182658051*^9}, {
  3.704398005085311*^9, 3.7043980412580748`*^9}, {3.70439878158025*^9, 
  3.7043987979006968`*^9}, {3.704399752419772*^9, 3.70439975350599*^9}, {
  3.704509994202764*^9, 3.7045099942736397`*^9}, {3.704572323167429*^9, 
  3.704572323462879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"etransfer", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox["Efin", "\[Epsilon]"], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704396546902505*^9, 3.704396607194059*^9}, {
  3.704396761924859*^9, 3.704396782931272*^9}, {3.704396814323419*^9, 
  3.704396879598176*^9}, {3.704396967581319*^9, 3.704396984124893*^9}, {
  3.704397018870875*^9, 3.704397048373542*^9}, {3.704397080568088*^9, 
  3.7043970810537663`*^9}, {3.704398800183436*^9, 3.704398802788703*^9}, {
  3.704399755475451*^9, 3.7043997683233967`*^9}, {3.704399805605715*^9, 
  3.704399809694181*^9}, {3.70439989540063*^9, 3.704399909864231*^9}, {
  3.7044000245512333`*^9, 3.704400071471487*^9}, {3.704400135746211*^9, 
  3.704400144247656*^9}, {3.7044004096083508`*^9, 3.70440045654058*^9}, {
  3.704400519616852*^9, 3.704400542127236*^9}, {3.704400627018744*^9, 
  3.704400630721491*^9}, {3.704571410513069*^9, 3.704571411851252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{"etransfer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7044022745721273`*^9, 3.704402275170223*^9}, {
  3.7046431189752283`*^9, 3.704643136431507*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["M", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", "+", "M"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
   3.7046464293566523`*^9, 3.7046500467900877`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Proper calculation (lab frame angle not exactly isotropic, unlike CM angle) \
yields \[Zeta]= ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["M", "2"], "+", 
     SuperscriptBox["m", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]], "~", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}]],
  CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
    3.7046464293566523`*^9, 3.7046500467900877`*^9}],
 "for heavy nuclei"
}], "Subsubsection",
 CellChangeTimes->{{3.7046500515776463`*^9, 3.704650119513261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.70440410874854*^9, 3.70440411616311*^9}, 
   3.704404547012455*^9, {3.7045096674135942`*^9, 3.704509670484754*^9}, {
   3.7045123769536*^9, 3.7045123821119337`*^9}, {3.704512611686779*^9, 
   3.704512614126163*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["How many elastic collisions before lose O(1) of energy?", \
"Subsubsection",
 CellChangeTimes->{{3.705885897668036*^9, 3.7058859056366777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.5"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "100"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7058859103272743`*^9, 3.7058859324218063`*^9}, {
  3.705885976319331*^9, 3.7058859764544487`*^9}, {3.705886027126842*^9, 
  3.705886033957623*^9}, {3.705943088548449*^9, 3.7059430887606573`*^9}, {
  3.705943195355322*^9, 3.7059432031155157`*^9}, {3.705943902371518*^9, 
  3.705943902503972*^9}, {3.707845046068416*^9, 3.707845046199988*^9}, {
  3.707845185226728*^9, 3.7078451884638042`*^9}, {3.7078458212813377`*^9, 
  3.707845821374362*^9}, {3.708289196874199*^9, 3.708289201169088*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7058860342969112`*^9, {3.705943196581669*^9, 3.70594320370866*^9}, 
   3.7059439028797827`*^9, {3.707845046696259*^9, 3.707845051529893*^9}, {
   3.707845185883759*^9, 3.707845188745452*^9}, 3.70784582172502*^9, {
   3.708289169244665*^9, 3.708289201698689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "41.76187795018794`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.705885932763235*^9, {3.705885973524386*^9, 3.705885977018015*^9}, {
   3.705886027829247*^9, 3.705886034303774*^9}, {3.705943196590994*^9, 
   3.7059432037176113`*^9}, 3.705943902888917*^9, {3.707845046704797*^9, 
   3.707845051539077*^9}, {3.707845185892404*^9, 3.7078451887539253`*^9}, 
   3.707845821733531*^9, {3.70828916925389*^9, 3.708289201707345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.1"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.705886049855261*^9, 3.705886050221634*^9}, {
  3.705943107644319*^9, 3.705943116657132*^9}, {3.705943191643855*^9, 
  3.705943193162631*^9}, {3.705943472991119*^9, 3.70594347313236*^9}, {
  3.705943905592835*^9, 3.705943905655376*^9}, {3.70784505351272*^9, 
  3.7078450536885*^9}, {3.710501953729549*^9, 3.710501953840839*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.705886050718212*^9, {3.705943108367778*^9, 3.705943119066016*^9}, 
   3.7059431937456837`*^9, 3.705943473521803*^9, 3.705943905939335*^9, {
   3.7078450539696283`*^9, 3.7078450550749893`*^9}, 3.708289178506966*^9, {
   3.7105019444601927`*^9, 3.710501954261179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "14.383478270034349`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7058860507249393`*^9, {3.705943108380752*^9, 3.705943119074711*^9}, 
   3.7059431937544947`*^9, 3.705943473530431*^9, 3.7059439059484653`*^9, {
   3.707845053977713*^9, 3.7078450550841503`*^9}, 3.7082891785156183`*^9, {
   3.7105019444699907`*^9, 3.710501954269981*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dedxelasticmeson", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["50", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxelasticnucleon", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["10", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxnonelastic", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["n", "Z"], "\[Sigma]"}], ")"}]}], ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513538766163*^9, 3.7045135539076567`*^9}, 
   3.704514583862818*^9, {3.704653197664641*^9, 3.70465322775366*^9}, {
   3.7046569486914463`*^9, 3.7046569600981073`*^9}, {3.704657075972364*^9, 
   3.704657092396399*^9}, {3.704657123457366*^9, 3.7046571242309227`*^9}, 
   3.704657404385747*^9, {3.7046574439806223`*^9, 3.704657444087554*^9}, {
   3.704657726936661*^9, 3.70465772711018*^9}, {3.704658280463488*^9, 
   3.70465828562953*^9}, {3.704660621160759*^9, 3.7046606273574343`*^9}, 
   3.70466077608735*^9, {3.70588605545405*^9, 3.7058860617022257`*^9}, {
   3.705886186054516*^9, 3.705886227407016*^9}, {3.7075780760162067`*^9, 
   3.7075780830795107`*^9}, {3.708289209258444*^9, 3.708289224114139*^9}, {
   3.70834400503961*^9, 3.708344005374948*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In units of ",
 Cell[BoxData[
  FormBox[
   FractionBox["MeV", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], "cm"}], ")"}]], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.704574619732512*^9, 3.70457463963356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "4"], " ", "Barn", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", " ", "Fermi"}], ")"}], 
      RowBox[{"-", "2"}]]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "2"]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704514588859489*^9, 3.704514592946843*^9}, 
   3.704657484832375*^9}],

Cell[BoxData[
 RowBox[{"0.0025`", " ", 
  SuperscriptBox["ElectronVolt", "2"], " ", 
  SuperscriptBox["Mega", "2"]}]], "Output",
 CellChangeTimes->{
  3.704513724181877*^9, 3.704514595082625*^9, 3.704571537201365*^9, {
   3.704657485405818*^9, 3.7046574934856033`*^9}, 3.704657544678402*^9, 
   3.704658335364869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["ElectronVolt", "2"], " ", 
     SuperscriptBox["Mega", "2"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], ")"}], 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{"Mega", " ", 
     FractionBox["ElectronVolt", "Centimeter"]}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704657566969379*^9, 3.704657599499071*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5.`*^10", " ", "ElectronVolt", " ", "Mega"}], 
  "Centimeter"]], "Output",
 CellChangeTimes->{{3.7046575981931477`*^9, 3.7046575997617064`*^9}, 
   3.704658338614678*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic and Nonelastic stopping powers (\[Sigma] in barns)", \
"Subsubsection",
 CellChangeTimes->{{3.704657690998494*^9, 3.704657702060732*^9}, {
  3.705886102361073*^9, 3.7058861116458282`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.032"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.704513112032195*^9, {3.7045134498770247`*^9, 3.704513482349444*^9}, 
   3.704513579191454*^9, {3.704514413242275*^9, 3.7045144170409307`*^9}, {
   3.7046532603069563`*^9, 3.704653260443033*^9}, 3.704657552055846*^9, {
   3.704657744526149*^9, 3.7046577454312477`*^9}, 3.704658448553891*^9, 
   3.7048353739347363`*^9, 3.705884750609273*^9, {3.705942322879837*^9, 
   3.705942322988016*^9}, {3.7075780918725777`*^9, 3.707578100560158*^9}, {
   3.707765834171659*^9, 3.707765838128194*^9}, {3.707773007648993*^9, 
   3.707773029575079*^9}, {3.708288669218328*^9, 3.708288683881666*^9}, {
   3.708292232863494*^9, 3.708292233475561*^9}, {3.710500059078541*^9, 
   3.71050008383671*^9}, 3.710501558599949*^9, {3.710507271816463*^9, 
   3.710507300759535*^9}, {3.710514739041901*^9, 3.710514739054528*^9}, {
   3.710519639820921*^9, 3.7105196398328037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canvases for stopping power plots", "Subsubsection",
 CellChangeTimes->{{3.705932188927627*^9, 3.70593219683154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"canvasphoton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasphoton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "9"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513918893631*^9, 3.7045139420762377`*^9}, {
   3.7045142304986773`*^9, 3.704514230761878*^9}, {3.704574665161747*^9, 
   3.704574687830915*^9}, {3.704833813057259*^9, 3.704833814220786*^9}, {
   3.7058853430377703`*^9, 3.705885370645385*^9}, {3.705885643600559*^9, 
   3.705885676648418*^9}, {3.707578106777104*^9, 3.707578116768587*^9}, {
   3.707764744887583*^9, 3.707764800231929*^9}, {3.707764857842807*^9, 
   3.707764873779258*^9}, {3.7077649086124487`*^9, 3.7077649627712927`*^9}, {
   3.707765222579644*^9, 3.7077652254806004`*^9}, {3.7077656542511387`*^9, 
   3.707765663814499*^9}, 3.707765752849141*^9, {3.707766356610561*^9, 
   3.7077663631847*^9}, {3.7077664759080963`*^9, 3.707766514837055*^9}, {
   3.70776655353336*^9, 3.707766575501569*^9}, {3.707769725410735*^9, 
   3.707769728402549*^9}, {3.707770810316902*^9, 3.707770812393553*^9}, {
   3.7077711602882023`*^9, 3.707771180296599*^9}, 3.707771213610237*^9, {
   3.707771280615444*^9, 3.707771287541771*^9}, 3.707771381689966*^9, {
   3.707771573369876*^9, 3.707771618427503*^9}, {3.707773409492894*^9, 
   3.707773555950324*^9}, {3.708289097445088*^9, 3.708289099987447*^9}, {
   3.710501180558084*^9, 3.71050118797084*^9}, {3.710501224676174*^9, 
   3.71050126171336*^9}, {3.7105012919076242`*^9, 3.710501322219295*^9}, {
   3.7105073702031*^9, 3.710507432411334*^9}, {3.710514981672676*^9, 
   3.710514995717244*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"photonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton", ",", "compton", ",", "photonpp", ",", "photonhad"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"photonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton2", ",", "compton2", ",", "photonpp2", ",", "photonhad2"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.70588566480058*^9, 3.7058856669276857`*^9}, {
  3.707578609739561*^9, 3.707578620794757*^9}, {3.707765933511084*^9, 
  3.707765939291894*^9}, {3.707766187762607*^9, 3.707766192966907*^9}, {
  3.707773323544589*^9, 3.7077733320633698`*^9}, {3.707774910511572*^9, 
  3.707774914940811*^9}, {3.707775144508655*^9, 3.7077751535802813`*^9}, {
  3.710501151684119*^9, 3.710501151817232*^9}, {3.710507729703883*^9, 
  3.710507729815445*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 16.11809565095832}, {
      18.420680368020108`, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Drc2KUz5yP0//He8Xg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkWs0lAkAhl1XynWkyDBmzDAzzMyH8RHWvNiNpYxq2+lmJCkyzbQnlxZb
0Ulu2zlySW2tTqM7bVdKQlbMLEo303ZjVagMpZpInLU/3vP8fc7z0tcrliUY
6OnpLZnZ/+wOvZlim18ZxMla+oFeRsHl3dMHs7VZIpFnc0lTBQWeh+7vDdEW
iVYM8IUxhynYymqcZmgPi7KjzVIrlBRYJnv722irRY+Z7TqLixT0mo9I5mgb
RAVdgV8mb1MQFtux0UTbKRp2Yuv3zLLBpIm/3Fj7VHTu5rRFQZYNGn+/+Nc2
5oiI66CiJaXPhaX5wzavDTqRVcmmwFNxtlgTFeiSVDwl8s/8aCIOm4dz80NK
3WsMsDr9iEqG+ejJDmpjiL/By2Jq2Ru2HR4FnO38FDQbCc11P/Uy7TFU27Vv
E9UC7Fi0B1AXoHsFs7n6iRUk1MrQcQMH2I/bK226KcjU2l9xn3IAqbl+xF85
F6bPNns1DVDxuNxPR2yZh6eBp6X1HY5I3qH1s5Xaoeq84S6PVid0H4squcZb
gJ4QYc30WRoYo4OaSCYVu1KaB5XLnTHpsDajxtoJtTtjor/edsapPVnCO89o
oB961WgUQsfRws0yxZAz9jZOnlQ10tEzJouQ3KWDMfa1PNCbAUN5oWNtFwPX
BEV6sgsMpKw6UJl1ywU/s/YHi3kuiIr/haesZkLK3Z3Xf9QFtOz08zjJQthC
gwhPJybW3IgUBRW7IkEisyZKmHicZP6rMs0NVbwl5/uNWRBz3/65U8Ge+a1B
HZ3DgsC0cuS6hAPxlO1ruY4F469yhmI5F/W6qZzwFFfQYj2MCyLcEXZq7ceH
o65Q9jV9MPL0gGnSiWSbeDc4pik0Oi4Pbd47Ysz63KDP/dQWPpePq+bBK678
yAYnKjHBYIKPzsoMJqWdjbDcz+Ne7wV4EhAi54ZykCjnd8bJCNAGP94Yq+Xg
pIui/NVrAtLDPnlpQi4chg5ttI/1xL11cSvPnObiwoZvLfTveSLxmaHefqo7
Qt5uIaqivDARL2T4HHTHrOz8lZ9bvNA0IY7IM/eA2tl70jjYG7sOTgyXF3qg
evvyVFWDN+Lf229aZcJDa6/0kz8hROZK1mBHBg+a6PHRxBoh9qkb/534zAPt
bta7RQwf9PwQ2q+R8ZFvul31qNQHyAmqT+rlYyRS38HVmsTx1nazujUC5B1J
3eayh4RoXmDC5TsCnFB5STl7ScQET4jr7wrQ+mE0XJBPIlNW6998XwC9iM1O
Ab+RqGshrDo1AqTrpOplZST4Ctb1F70CbBSH03KOk3BUWVjbvBMgVN+ho+8W
iamGrc/9ZhFY5/HoykA7iaJld+4HmBLYISk7OqwmZ7rx1EGzCdTXWKaNd5FY
aPP20ndmBLxWG9GtekikJiXkR1sRcL6kTRMNkBi2XS1MtCMQ9PxM3PdDM35n
r3KS7QmsNU1cHPmGxOzg+TT5AgIVsf10yQgJtuyBaQqVgKWZplOuIxHfEtW7
05mAh29pXco4iTFJzYMcOoGI9UuPZXwhka2d8/ceBoHcqx3pudMkKu3UlwuZ
BKpe5K0v0vMF/5zbmX0sAi0Wi5bsN/DFjdDcymJXAn0LDf0qjHyx+J+XpaVu
BKY3NDP++MYXT+ShBQfYBP4D2vEGkg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkpXQl
Z8PkR7FHlOJQbmwe0zWzhrXK9JNS+TFkPbLo1zX0w3ZdsY61P16P1/9PbtTO
kGjKxMRk5fv+f5nFilxuAoW6tU8C12QyMOQfnuSdSsGQO+EpL2RANXE2xuYw
hSO+651lGgbs660jnqspuBvOzGPVM/CTQrHuZi2F61pzG0MLA1rfO/eM5ym0
ZCWW8rsZqLGXbhPdpnA+opf3+SMGylupfSUvKdRbVUmvTjdHtuvJ8hiJGdQJ
H20qWmWOcF2Pjmo2Q6LH3u+EPeagFH5f+HRNwwfahzKFbgZCYhxPa98wEHP6
Yly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZyms8r89NloPCoIYpbMBhoP
uHCrbOH8TduA1XFb1F11uMjT2OHL+5aGwWY7WEyF9xpu2ENz76Jb6YA93I3W
M+qesZDyLMiv+S4LZswSbs/D+ZDxlAMN7+bjesD1C+3mbDRsT5XPMzqC0xq9
wGEaB/m7iurd5nLQlbFUc5bFBa/gFBoXcqE4GeS1XMDDUZGD/wSPh36/FvFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbHnjj6teIUrfnlQvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUXzjgjuZDzyqD0j2g
D+Oc2prqgSXxbV+/SF+EUPVi9TvlIpScHszLUQlRM8brm8wRYpRqv5ZX4Im+
zv0Hm7I9MTPpyFJuoBeMUZ2/JqzxQuX2arG40wtpXPVo2B0vcASJ29jrRHhp
Y+LcvFqEIlZP+VcdIkQwO4x3e0WYsq3aWxEmRuONUJvbn4mxsds1t6hfDObR
5VeUg2KcKbPzkW31RkhBu6o01huvi0/pI0e8kR3M3HVC5w3++ge6iHgJGub+
bLYqSYIwx9zUWXoJujVzuu6OSbC39unKimQphuTW3/65U4qs2KEPq/+WYtgt
iaV+K0WBaEWhPJVgqOFQq9d+gqzmSF/DBMHaaL0q/gDB2I42vaeR4MLcSHG1
ikDuKK6NmyI4sUdUYZ9BsFQ13W7AjMYaUf/uyTyCV0u0w1esaJzTOrNvlRFE
NIwXF7JpFFa1JCt+I5Boj416+NGYDBEINJcINJsmNTEBNBKoYw/uXSGYxYzd
UBlII2iLYtXaNoLhOJ/LtsE0jOyZHGkXQaXrwxMToTTi1JvaqUcEVlWe/m3R
NPo+vpYue0KQElL61jSWRsC4kCh1BDpTsx984mksCKM0f40QXN7c51CXSKPX
7ntlp55gPzvtRfE+Gn7X5nhYviF4fPtpVUcKjR+TVUP+4wShaZ9utFDROPz7
J6ub3jsI7ztdVaXTeJt5znTsvUPZ4YKUxkwaMWKnJgFFw8LnjfBVFo2eofyE
bdNo7Bve/JifQ2N5oYF7kkHjcenN0q15NP4DId7s3A==
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, 0.}, 
     PlotRange -> {{-0.9210339996043925, 19.3417143676245}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}, 
   3.710519856389924*^9, 3.7106323359378643`*^9, 3.710632821793014*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
eyZeqd6okiJiiEbWTUuVAv8HH5ydNg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkXk81YkCxSkUk+793d8lS8K1xE+2Sz+qyT0oCZFMaTEplSfLvSqkiTyU
YtJmSbJkmTRZIu8poauSLNEyRVmylHiai7FexIz3x/mcP8/5nqPpJdhxZJGE
hETogv7vr22fBCnEZlrpWU6uCu3pEf4nev5GpCiMV/dVTikjr0domvrHeRvR
Rd6hJHWiJqBHGKjzeJ4jSuPljtovZs50Cxl+ZutJUQFPtfBmfx6rW9glP+T+
g6iSx9kUdeDe+Q7hFs9G7yWil7zZFUrRfKf3wtkl6/nSog7eqfnlmqXuFcLH
N+8/O6E9xOsS9G+fOPeBx5B/X8s9PMlzpv2O//l1kLfP+Ueto1fneCc60pIK
bo3zilbYJBoULkJw1ZfU1KPfeS2RVrUcFxl8ruNH1LRI4sOG/JcTVnLoi2o/
d71WGgNlTZf+tXI5xufmtsjmyuL1Tu3qgnYmCkdD181ayWPPmuJ9Zz4zIcy8
EpjhLI/eRT9OuXxj4rXTnTzr/fIYv+dmNDbDxMTtVoUL4fJQlotOW6dCwGof
PcqulIfX457Q2t0E3jwbu2u0biFHN9O0+z2B8UT+Si8zBsLnqKaSTgIyNjFu
0rYMyLwr84nuI6A8nB53ZwcDSpHNmboTBDZubRIPHWNgY/ucfACbhZg5g/en
ixmIuewxOL2DhWWl47UNikwoi5VzyNcsZKrej/iSwERyhBTvQCsLK3PSVE1v
MsFaMtxW8ImFFOr8g/BsJuQUa1h2IhaurPMYVixh4rsZPypUjkSUu4zn1mYm
Qit2r3pOkJj/NDKT9H6B08b2EaFM4rR3e3JvBxNDrkqjd1eTCAoubj69sEu3
4OnBzk0kvBP2WhUtJeAxVTCn70SiV2Vz2wyDwMcz12+EuJHwzDYO2bKCwNt4
/zcMLxK7S6SKunUIOCu4B3gcJfHOcniroSGBxjRr2d8DSbhWf+w7ZU6gJl/R
2iaChMOrIjXSlgDMJDsvxZCo3XWj3NOBQNWjb6Ht8SQ2KKqUslwJrLdpYesl
kZjew5As/4lAWX11cVAaiQfpUi6eC79wXfOdnuSQCO6ZTpP2IHDvQ9KAfD4J
c53hwXxPAnf6fTXyykmUFHyMEXsT0BbsrByrJsEfaX6X4Usga5K3G3UkDM1r
OJv5BFKlFa58bCHxe0XR46vBBC5qCf/+YZxEdkP0JHWWgMCT7Ao0YiNxwND7
5ywCdGtF+vocNk5qR21+2k7AvEHtpNddNibVzLi7ugiYVUVsjythI2TFl1WD
vQRMcmwXtwnZCJKzExODBChBo8+pDjaOjcjmHxQTUF/SbvZQQQH+lVeZkgos
LLWYqV97QQEHfspq5zmz0JZsOWkSoIitZ6uPVVWz4HdGZKmwXwkssUqC8QLn
62znhHJDFWyKc6yWzGKDM9zf6qi9EgEmKb0OaQqYVfX4pZBYhTa7t6Wz1xRx
51yY+atOdRSf7r2y7NQK3PrV118woIGwmuWHEo8roWXU38H9jSbuGxDWYfuU
sZj/q1pZEwfdt43Z7e4qCNpzPTPsuRZcr21IznJRhfOhU4Y5Bdqg0tS06+iV
UI88WYw8HcyWq+YdMVXDvipHntVVXVhMDq89pLrQ46h8eE7IapRll5yok1CH
C/XtXoRADwaHLt/OnVaHsWzmUIW7PmSyso6PBGpA+jufI3CjcCw1dlnDkAbU
PddIxzkYYN5xINzdVxM53cIxKdM1qF7GnUjs1IRaiKB1kjJEeKtsf/xeDiSp
iVp7thEEJS8/0a840Hf2ObJo2gjRtjJFCdZa2BIzJeb+ZYxrXU1T+VVa8OEb
vTzob4KWuH9vCTLVRp6WILnvfyZQwBNCXKQN1YFUb2VPU8RKiXoMtHVQcnjj
csm3pgvcl2PJ6zqw+RZgkuvMRfGS6vwyUhdLI2N3Tz3lIiS9/Q/ZC7qo1zCb
lbY2g8XGcyFKMqtREOoWXFdpBpWk30baIlejpmv/xHoTc3C/Fwdum1iN1u3i
YZ9Cc2wOcPA7fVwP6m/CRuw4axEvavbb06+HWNnQug+JazGl02D7bY8+hhwl
VXUJGh4+bsmWLfq4kB58QuscjcnyF0NrHSjcruPu1z9Pg9139uMGJwo1Y8P2
xrE0uEybGmtnChIOvqs2xNPge1fe2LaDwsnJ/fU7kmj0sUo2HdlLwdvFXj3q
Nxrv/FJTE30p2EqqNnY/p1GiFmA3FkfhwJoP//36gkazPWU6fZHCGfekW3/W
0/jzRL/q35coPCpkhIibaOg1HPxLLoECd6+UJrOFxq2QXWmcmxQ0SkUhvK80
Lr3ijbrmU7D6dPfg5gEaBTPfO9wLKXjI+jg5DtJo0Hn04ud7FFI8ezXdh2jI
hJmnHy2lwFjW+pI/SSNcT98+soLCGovEB0FiGqluX7nnqyg4eLlm/zJD4+GZ
HLV4IYWYh40nY+ZpjL9TG0t5RiH38wWvixIWYEm0d2Y8p/B0ud22a4ssYGKQ
Upf7gkL3usWWKVIWcN61s/RuPYX5w9WcDBkL+EeyMoobKfwDjAVCuQ==
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVj2s0lAkAhvnGdCEt0orWZcZ9MHzDfKxy5s0lkXRSIdt1VqYLpyaMu6JN
YXK2ldtQrS5s97XtpDbMV62DSChpFRlplbStzFLWmLU/3vOc59dzXpZwX9hO
QktLa9Xs/mf5/IBjrFgCZYX1sVUXmbTSL0rsnkZgw6afDp+UMen0qRsxBvkE
bp0NLajNY9ImNfqb38sImI+qSntTmfQvItG6B5cIHOaXn1PvYdJXBO296jsE
crd4mD3YxKSrTfjR5EMCBUcefl+8iklXNBFJpR9me92aDFc7Jp1jf7oixoOB
64nRkTuUOnTU8JNhooGBXrmLfmOEDk2IfDOXderAnaIlUn8GHRZjfvnK5BwM
Uq+Dllpo01u/y+ra9a8urpJEQIPHlOKzYxP3/chCJP0pkco3flTcLOQE6pUa
gt0jlzUWv1LYnm3uW1C8CL7mTtwmfr3i4AvdiYGGxQjuL731SPBcUNlb71DW
ZwL+9iHxxaK/BClvAn0bekyRJjKz3O0+KVjOlvTJp5ciJ/RxfmCTRiDfm7bN
TG0OylvVEjvEgHT/DzUOxlaYtgns7PWeB/bxM7hpw8KGkjR9w4wFKCSX+E2x
2ZAaX883WGaAqXfCnGrKGlG5/kZ7hUZYzjX10fOyQb9+zUHeTmMIu+Zq7/Cw
BSe8YG7/li+RIW1mWq20w/YHXxhuzlqC+HZVRlGAPUJCd2kHHjLDNrtxKiHK
ATYz0fE6l76C64Cj2n+PI34Xd2kutFjgD1Yb1SbiQJqa/3WU0AopKaipS3WC
c5fmRnAiC6pIqzPfpjmjuuZl5VgiG+tlXrJpiQvmjE9W5ImtUT3GfjpzlIuo
4MFn0mwbPO1IPlKb44pcR69jAVm2UAs7fotd44arFtuTRUV2yGDJRiPbZ718
/LmgxB4fDLRsG0JInEhVhOiedMBmvUfqnm4Se/dtmfGpcsTNlvUGDzfyYDka
Y+1QxYFe4Yr7kgEeWjJ9c9PuOCHseGt62S53RMSHT9OtzshZrbe/ZNgdig/d
g3UtLpAb/8oIFnvAPNtel93HRVelUWfPmAciKobO+/S7QrlN/0L/Pj68F8RV
2ca5YcRBbCr7xIdfd4eZ8h83KOV5TW7JFLyFI81JiSRCd6rS96RSqDbckFmT
RKLOeCvvfDqFxXfr3d+lkCiJJ0+ZZFH42/LE6a2ZJNaQzw7M5FKo6vNMCDhK
4vYVW4u2cgpGm45YLiqb/X2OThApKIystZJcqyMxE8bhVN6lEKHJdXrTQCKW
OPmy9z6FxmvjA6y7JAJ3iIJDmyn8qN+0uqiRhNpioRW/k0J4axwrvZ3Ebtk3
rcQrCvdW3mkLGiDxNKjx0PLXFFwnbLIPD5Lw/8ylJMMUTl0o8KwfImEZSVS+
fUchWUd41u0tie7FFyUdKgrce/OSTT6S8G00ctadpFAuPuCyTkXi54R0pd9n
CvNZLwbzJkjkP14bUqumMHTw+pqZKRKfsm9rj2korHM1ZXipScTwrGs5hCcU
/dm3xBoST5TS2GgdT7gUjMZd1uZhxYkJ1uk5npD5hFu/ZvDwHyZ8/D4=
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}, 
   3.710519856389924*^9, 3.7106323359378643`*^9, 3.7106328222013817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"electronall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron", ",", "electronpauli", ",", "electronpauliflat", ",", 
    "electron", ",", "electronflat", ",", "electronbrem", ",", "electrondpp", 
    ",", "electronhad"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"electronall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron2", ",", "electronpauli2", ",", "electronpauliflat2", ",", 
    "electron2", ",", "electronflat2", ",", "electronbrem2", ",", 
    "electrondpp2", ",", "electronhad2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705886294227656*^9, 3.705886309689898*^9}, 
   3.705886354455186*^9, {3.7059295081654882`*^9, 3.70592952681656*^9}, {
   3.706591208668486*^9, 3.70659120946497*^9}, {3.707578151211833*^9, 
   3.707578154097561*^9}, {3.707578534107463*^9, 3.7075785360290823`*^9}, {
   3.707770599686041*^9, 3.707770620060073*^9}, {3.707773274966692*^9, 
   3.707773314613207*^9}, {3.707774917389535*^9, 3.7077749200210876`*^9}, 
   3.707775155723225*^9, {3.710500580655548*^9, 3.710500580781083*^9}, {
   3.710507723168262*^9, 3.710507723303005*^9}, {3.710632617434235*^9, 
   3.710632619746599*^9}, {3.7106328174617977`*^9, 3.710632817589737*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 13.815510557964274`}, {
      18.420680368020108`, 13.815510557964274`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs0lHkYB3DkloRBNMTc3pdxyTuoTqtlnlNWRthk2bOphq7URqLYMiIH
Q5HpJkVjBqWplJTr6liEyopJRK1cKnKNxp1p3z3H2feP97znc77f5/m95/fS
9obsOKCkoKAQhD//vYcXSnozLBbZEd3jUQwyBXiq/Mfjdovst3k1kSNGFNDV
8RO2cxbZh8hH2jwpFLhFtkmu9F9kk2/a3S9gUKDZupWblLrI/lI+XxFkTQHE
m7qCNrjI1nyTYPi3IwUahaUB20Vy9kQqSeDiT4HUzPDEdjUF2JwQofcthwJd
6/PWbTipCG4FlVibLhX88+tUHAXKMDKw0b4jjQpKnCvPdSLUQInpO1cho0K8
BaJsc0MDpk3Vte950UDfiaSe/nAl9F6KE5dm0yCgyufMQVcdUHF8ubOhhwZ3
FJdtuNVOgqZ8n95iKh0UO1UPurvrgbbAJvKCDx3cpIe9DLv14XmWwqHYJDpc
+8ij8X83ACvbeAV5CR2mUvoPc7sMocCa8/nrBzr89GthiF8IGTYHcpK01BmQ
W9IyUvnJCMRdncP9lgxYbifaXvfLGqgPU1Ifc2MAt7E5+FuvCahGFaYKjjCg
dtFXNdGXAn3RajFb+AxIuX3znjCcCgZP9jbczmOAw+6gBk8HGlxWCTWcqmJA
yJ4P1MIJGtQkL3yz6WBAVohKe145HXodVq7ZOMEA78a25x4nGDD3zkc5SR0B
zeLvBa7WCJQ72LXFmiBQ+eDt+JsJBH6bXbD0sUdgSrYr1OAeCqsaS8f7XBAw
dxN4fgk3gy+t5f1b/RDoHjwWGMIyhxLmln1ZRxHIXJ0f7jpgDlvkgztmoxHw
8r3QVfSACf80/8ixECCQ+oEWLw2ygE2jz2oFIgRqIvcnxdlbwtB6J3bDIwTm
b8rPJM5agsbDmi5KDQIVOs5FTo+swC+mfXykBYGwiz84809ZQ0auxJ7fg0AR
t5MUv34tRO8JLcsZw7+3TNrSOrwWuK9rnaYWELBFTo8VF9nAqHNmfNwKFGQd
TRz3oxgUbUvdumE1Cl9N02X8Yxh0B4DVedwj+7jCZ2GEB/PN3ZQiiP7nkTGZ
0ykMbB3Id/tw99mVCk/zMDhldqgqnYxCd0SMW2kM4fd/uk7K4jCw5PboeRuh
0KFIyrZNxMBkcihShudtLh1uwckYhO3XcjYwRkF6TjQpSSHyV81B2f1pGGyf
w1RP43njKrttyGXCz4TV2VnXCT+18J4yEBGuCDYWeecSLi3q25Z2G4PhKPm5
qyYoPJ65O9UowSB1b0Q0irvQMVy0vICwpF55+uxjwrleV9wXyglnX909vfEp
BkNL+7LeoeITf2HgkBAUomGKwnXqqPujWsJXDxRPj9bj96H5wjMW9yVJtNjq
JeG0MRePwCYMUto53vO4z6/TnsltIfYn/dEu7mnFYF1yf+wsBYWEp0IP07cY
eJFsSdFUFM4uC5zZ+Q4D44i4O5F4fsaVlZPeRfSjUmY8Wnvw+1jqR0qrZnQ+
EfkJw6QcjwEMzIy14BINheO7vDyThzB4sfnhPoSOQrCIPFs3ioFHwlCaKp4f
+dyTs2yCcKCVxBMmCe8/dnw2aobYF/DEIbdsHoOXS/v2zCn9PCUn8vvCT1Fk
RRb01PHBh4GCdTVHWqLE+j+XfLxv7qvMAmXx+63l+DxTTZcnU2FB71L/lsVJ
6UU1Yh5x7zS3Xc4Cb3GZZBJ3TrAT75UGYbpALD2qSTi7SJWpqcWC6ppQniuK
gmnbYZ5EmwXf1+pdKzZDIXOmSepKYkF5xkDnPJ4bGdsz+3UJZzim8+L1WSBf
6q/2n5cyDFhg39E1cgPB//9ZLrPakNivn1fD8ycT8xfrzV/LjYi+zuA5ZtYa
4vwLml95m0wJ/wvB2MmI
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDP13hGdvUVB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AOtzU8M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
fvRVQwwVtGHAActHIttp8H9bznte
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDhNSuleUuHA4PutZ3TNNH8MU/HOr6
6IDgt+ytYpichuBLrZwkuK0TwVf8L7VBYw2CrxZhcqDtIoIfen5tdtoXBL/J
c0eHoZQhnK+gZ2zsY4/gPzfgq3yRiOCvNasyKGhH8OdEuTVXrkLw/7xoSr50
BsGPqgrYKvYJwX+kWbfojogRnJ95x4axzwrBT/iZ/bYvHsFvNPldItiE4C8o
ks6rX47gvzw3myn/FIJvoLeWw+sDgv/iu96cElFjOP/kfYHTChYI/spTzdk7
YhH8TZfDll9sQPB13GcVWC1G8JfszVvddwLBdwta3JjyGsF//jLjpKqgCZz/
4/W8eWZmCL4xjyn/yQgEP0c/5qNbHYJ/vuBxnttCBH+RzO3KqYcR/JLTyd/O
v0Dw82f48PVwmyLCM+PYdGNDBL8nbMGemBAEX2H9q7yrZQj+Jq5jkyznIPh5
LYxB8vsRfA3Gc00fniD4wS+4HAW5zOD85W+Xz9qsg+D/+no11TEIwS+XSTkT
UIrgp6xNOrB+OoIf4PhJ9dceBD/180O1Y/cRfNeJk9WNPiP4qvquGvPYzOF8
AHfYV9M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0fk71AkAx3FESMwIyZExh9uYL+o7Qr4ftZVlG11WjodCNbmmw/3ooFxR
IVLJaps2HkZrawsdSCVXT9SGlaTsMsk4thybsO0P7+f1B7yZQaJtexTk5OQ2
f+t/29c/jNLJKHYR8vU0C0aGqN9PzF9MkiVSZRFqYeZaUsr20su0dbIsalg8
97hmjZQ6YFI7z5JdpkLp7+N6U6UULczeUUsmoSI/lPUzmR+ot+qj3mqy+1Rs
oXOlxGuY2hTYuldZ1kalLgR6NtSOULPKjpFKsl6qI/hlY0zTOFVbePPRYc4o
peWq1HpQYYqiqb9qtAuZot7oVAQ3DHyh/ATO7P05cxRtZMIjR7JA3dBdl2dV
oYBbH+lzBZEK6ExyaWR5LgbrTbBRbo8iup3K2yZdloDjI2FFJShDeufZmX2G
GujxeiTQ0ViCdi9OveQ1HTsEOht2Ry+F3oyeWKt9GXZ1+Bvl02kgu+4VOYq1
oVc61l9TR0fPeYcpImI5es0uNKpMaCLsqMxBJ2AFhsLvFXk4a6H9quBcDVcf
r3hf/ww+qA3W2FCXB8cQS6urlA/U62DWwD+hQtMIl4/7Nvup6qI0JXHV8zcM
0J7qjxs6r8CVzNBwkdQYLS+8VF6k66Hzn3B37w4mhP43Uvzr9LEoMnPlnWcs
CMqTPvfQDBHlU1Cc+ISNs47O0w6+KyEIjueKJRzc3KQdGH7GCIyk2EqUmMBI
f1/1uV4G/B54UC45puDfDnNyO2WMnv3qR8QxZsg6UhBCspnwtPz46zGROU6W
Hk81amaCp1o8es/bAqLcGd+JYBaUvkayRNstMd/HNa9VY4MRaK10yt0Kd1t/
rEuoZEPcX/dJ0dYa+2I1VFnuHKyMEXVNWXJRnXLC49E4B/KWk41u2jaY3ZYG
zywTWAiEexT+tUFY/dGFFo4pNqVOz9hN8HAs274KLaYQRtq07Q4nkMKIZf4c
YoYStuj83x8I8DTjTs6qmcNAemmvXqAtmh8qX0KpOX4LWash/8IWOcsy46Nd
LbDuYwRxTWCHuSetW68NWUAlKWPndIMd/BwKex8kW6LZ2H5WydUe/urmuzos
rSCJ2x7ddN8ep5JLK/54boXHbwMmHYlVKL9TVdGw3xpdW2bGhBWrINp88noZ
nQtGR+L4RtZqcMRvtx6RcJGhGtfUnbcayhdtnlIbbDDqIW9gqkni9ITj6q/D
Nkgvij7MTiGhpNrpJU7h4XqTXYBFGonuArO/vNJ5ePxpzI2XQaLcNP6QSiYP
cu6hRk6nSWz5zvBsRDYPsVMBzdvySVw8FtTEL+Rhr6cbI/kXEtypUce2Sh7W
yxu09j8hsWNA2XjyNQ+7rLtvDz4lYXLI50ZJHw9HvfOvjDSTmJErd/Z9x8Pd
ClrMzDMSRUYCn7pBHux8FZn0ThJSn7zcjG8fjG/JYqhBEmuF2QpnFxFw6Svb
vUFKooRX871UkYC/qvAHj2ES9Ol32a6LCVwIfM/0HiUxkGLP+KxCgLa0qy1y
ikSauNPJR4OANT+vKmqGxHjoQvJNGgH3oK1XE76Q8LEzb1HTJJBa3RqbOk/C
+mH8zlotAtcG0oOy5PjIT79arKtDoEFj4+ZcBT4WPFsHDywn0L9mkcMFRT6E
up+5LboE5kPqWT8t5qOjzzCarUfgP6lyEmo=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx3lYzHkAx/H6RcuEFElKc3TOqNFM3348Yn8fFa1jskW7PW2PVJqxGhSV
JLvsVs6eEKKLEXK062rK0YaHNDRlOkxpDSUkOUrzRGmatX+8n9fz5kZvCIml
TExMfvjW/+aPXbCLK6dw032o3sTxAdPhH57gvZWCVZ1kFdvyIZM2dFU6cS+F
arpb+WFcLWN7eXzE+zwKSSfSLapYauaKTBb88DwFJxYnKmtMHVPK1LcZblK4
tzvrc7V9PVNi67NaVEchYezXrBHhI6aghtp89COFmFFxuorzGibTrahASsxw
1Wwhi9/QyIR3NXdRVWYIoYZjLBxbGErm95tvwyjsN8psNRXPmRDp9Auln80x
1sC+VZr0hlmZvqNxzVcWCueE/R3kp2cG+TXC928noDGjU/ozd5gpzxEEWhy1
QsRto/XjUAouJ1W6cUcmwVfni9Zgc/z+lDXQXmWDD8G347cXs6Bo+8f9mM4W
4iBXbW/7BGx5E+hX1WKHPlKYXrjWCnN5yTrlsD3K1teyD2dPgjJua+Q0w3R4
XtMoBrNtsC/+4GX3yRzs90w97XXTFrys4yh35qJSeujukqd2yBFN9R/i8VB0
MUPV1GqPoZ7ozBLaCXJn+2VCE0fMFdrNs5jtjJRm/2epphxEN35nGkVcUJQi
PqkxcLBtn2o0Z6Errov7z2Rb8rCpXr/t8AI3XExks0dbOiHStZ9ODHdHvnp6
a6eTM2a28w0Ba/mIy1xRVObtgidcNa2WCWCjGmjxFbliyxZcrkydASU7LsQj
wA36MM7xmK0e8DIuRlOAO5bnzc4bTvZENmJ85eCjpI+nHdkpRGeuZPP6YAG0
mpSMisyZsN5c7Or24wwYojU35BIv0PLaKYtWe2AbN+9dWP23716ZypV64uNE
E5eqpSJMUwl6eqKFiLB4ZGh5LIK+UlXATpqJ8gfLJ9aFitHs0N2ePscLFjnz
7ya3i8F/rc0RVnshJKs27dgab8S3r5IES0TIXGIRn9vljVNFJ7BMLYJycpnZ
4gSCJtmiZtOfxGhUWDe09BH06ksU2VoxOiLHn362wQfGKyeTjqzwxlv3BLu8
Lz4Yk2b+NljnjQ7lnhqvFBrGMZyjbyIIgmL1aWtTaciv7ZbwIgkqJ68Un0qj
0SbrpyKiCHI3iQptd9BQ3r+/7lEsgUTUunFkN4249HX+5esJrpe6OKrzabQY
b3z4czvBgeLbibJbNC4OhC5gnyIYCREIFHdoOJy5NRR2hkBOHXredpfGnlD+
pYNnCQKjZIuDVDRiy4anmf9FYHCcwPFpoGG/sbj3nZLg17xfaqlOGjvf9+bf
qCHQLqrePvcVDX1BeLD+AUHAoJBO7qIRvfSeuVBNwA6jFN09NOZdyE1QaAge
25xL1uhp9K/5PnDXEwK/amsP1mcaq6aeHb7zL8GlxLQO/0Ea9TVWV77qCPY2
LVtaYaBxzvWVw4YXBF/+uG7aZ6QxRRvUePYlgVTsVCGgZiE949rOF68Jmjv2
yVePmoVPhDfPoZtg/oEBbpH5LES+3PsptIfgPw4O/eg=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {13.815510557964274`, 13.815510557964274`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9, 3.7105198604481077`*^9, 
   3.710547789842683*^9, 3.710632339212097*^9, 3.710632372187998*^9, 
   3.7106326202691507`*^9, 3.710632818196014*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
og==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDxJrWTTHrRBwedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AFUpb/8=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF1nk0VWsbAPDDMZ5tOifzUCmRqSNKMrQ3ERluhgbJXEglMqWUsUyJNCh1
kiiKy5UxGd4nQzI0GJOLhFxliIgSnW9/a7WWv/b6red999rDM7zy7r62HpwU
CmUbB4Xy/+u1JLt7T44z4E58LPvrWjZKN0sMY3ow4FJj4NmPpHM5G5zynRkw
pRrFt0i6tGpZX9WeAdu93ipvl2cjCNaWfWzDAOZUi2s66VYN31+KFgzIyVmt
qbyOjd59yel9YMyAar5Mhfekhx4MVqzbwQCVOzbP89ez0ZSzVFrGNgYofjG4
lq3ARouStiGrNzPApD1cqW4DG3F3JBxgqTAgVUNNkKrERiKX67SlFRjQOmna
5bGRjWRNl8RuyTHAzr2KMa7MRhs5tn4Xk2AATcTS4aoqG2lV+nReE2FAd0Gs
0SF1NjJnfriaTCXfd4OgvfVmNtr/WcJfcJkO8XrylaFabOSWZW1zaZ4O+Fc3
lcatbBQiUSsc+5kO0ZpzuVW6bHShbXGKa5gOEYIzvz0M2Cj5ktbrqD46WHi7
jKgTbJTNfpAY9oYODzlsfkrsYqOiiv7jSy/pcIXb5PT23WxUHSBucbaWDtwG
59aHWLJR53+x/MGldODcyyqysGMjjrfHYnzu0CHkwPYcI3c2EkjI8hi/TgeR
2p3xxp5sJGncZ+ydRIfBCTmG2zE22vTUiuoRSYfGXfLjY/5s5JihEeHoRYdj
ZZGVqhfZ6KiDt0uvKx02hNBfLcazUYBo5g57BzpILfbuGkpio4S4Vct2VnQI
l57z/HmLjZ76zZ+x0KJDgSaHjmEBG9WrMA82qdFBr8bkcGsxG70Z8dIxVaRD
1rOl7z4VbDRq/37eSIpcb5vvNlvPRqKGVQG6bBFYMuiYpPSzkS89yke5RQTM
XZiioXwU+HLbV0mmXgSorW8KNQQo4Kng9FGgWgR2SB4KmBGmgPM2nX3TBSLA
7Tg3eU2CApZOU/rlV0Ugil/s2EElCqg8dhAwcRCBSN2/d74yo0BrpOf+5+3C
MKPJOpJxlQL11w2bH9QLQ5Bi6v6LNylQmSO7I65MGIy4LbX8WRTIfdW+Yc9t
YRArt7Y/nE2BWCn8e5+bMHx9tCxw/xkFjJ5IXP8xLQQ0Tp6SkBEKVAy+bGMK
C8E9n754CQMOcB1zyePkFIKsoy+kAow4gG96/kLXnCC0TIve6DDlAHu2gk5o
ryBEC2+RybLlgB9ykekvHgpCyU5bvtCjHKB9aPtxJ31BcLIabqHe4ICSrsdc
l7wFYKNl1KONMxxQ2JywbbSOBkd2gPeZYk6QeVbroBTPCzGuiiNeZlzwyM29
Zx8fF5wgblz7h5cHbLay653qKHBbVEld4gYvRJjK3N5cSoGJiMnhyDu8UHhw
my93DgWuRGs6fL7PC0JhvlL5CRRoPHPxaEEBLzS/+OCzZEMB/dcOxiIveSGu
MEJd+zkb5ce/bFRb5AWfec62wl/LKO21VdCtQ3zQKq0Xav+BdG3R5ctufKCC
B2yg1C0j5phxfJgXH4zGDp/Zk7CMROUHhPcG8IGrVP26KcllpDD1+mFrAh/Y
6l8MVNVeQg/CCfepp3ygE8Urme23iCA7mr+Jzg+1+1Ul2/cuogG7PBMxCX6w
VN0j+VtnEWmNhr9xlOUH185Uyf0ci6iSR6O8X5Ef4hQVpXiu/kTG8Skm2Xr8
8K7ZWNqz+AeKkyr6ZnWEH4JXRckqzs+j5Jstq7uf8ANl7KGsbe880ikrTYkq
44eEqibZsJp55P9To0q5kh/SPehy3THzyHK0QeloPT+8KM+Qi5GYR72s3eMP
uvlB3BGtHtX5jooSTHukF/mh9MHS2uzQWRTsi5wH9WmQ4X5rotBtFt1JMzh5
i6BBwtotTytNZ9Hqm//GWRjTwJV1fE/bqln0z/FD7zItaCBwvff8Ut43BPF9
mWIONHCPftpr2zeDem70uNKCaSDiHnidrT+N9itMUxRzafBrjYgrbf000vOV
2a2fT4PR/jxVMf5phHWb+FoV0iC4+MXFfblfUYR9la1rGQ1eZT4YyuudQi8C
k4+Y1dLgbKQry15vEr3wSjSXf0+Drh09wkVLnxFPXsOq75wYqGmXnfOs/4z2
n78idIcbgwvq1z9LJ35Gq/fPLuvyYbBF1rouWuYzEtTuqT4qiMH1n43B+3TH
0GFmbV+oBAa2JeX9P06PIruNFaxIFQxy826Y5+OjqJk9dLhRDQPOrIByN95R
1BbzRIuXicGTFGZKc+onlLHVYC5QCwMR3xxjVukI+uuihjq/PgZvlG/m4bND
qKO2xErcEgNF+SDJuWdDaM7mRNKyFQZhknYXH0UNodl3CosDezDYxCvsQmcM
IYPHQk5X7DBIGolhDGt8RJv6PrLyHTC4tWPym0D/AIo6+19ypxcGZuqPW4NO
DKBMHp8uF28MFmQ8sgd+9SOFtMygT8cw2P+z72ChdD9a+6mq44MPBqIlrWBn
/y+qtbh7NCUAgxTlv5Nud7xD2zAjlfHzGNRXm6aGHXuHsh1vpfKHY/DDZviu
O8c7JHufYbE+AgPns9L5Ksxu5FvbmGYWhYFKS1zLs4ROJN2zVf1QDAZOLgod
6fKdaFVY0Pa9sRhcmUW9UU87UF2P2WOzOAzmZRY+m4+2ozrLr8/XJ2BQd8KD
71/DNiSun6OfdZmMUzhEUM9bJOJY3Xw6CQPlGyyJLN+3qCv94XvTZAzWhOZY
deu+QVrdWHzvFQyeyl5ImJ9pQb8v+6Y1X8NgtUllWs2aFqRUuzEt9Dr5/32+
PYqxakYv+FN1Nt7AwKbGtVH88UuUUOLnGZiKwRcXA65trg3o2LN7Uz23MLCO
C1zFvlyPjivvdvRKw6CsMG9dY2Udeu/Hjp8hHc0hbXhAohbRrBW0f94m9yvb
WK8xeY7+3jdWFXyH3G8b5/KfP6DNHw+LTpPW2TX5a4pVjf5Od9vVzcKA6+Yh
6fAflejUeRflnXcxaPuvSUd47zOkLigwlUf6WHx2EBMrR1Edaeqn0jHQ7hW9
jjxLUYmg9JNXpKmq0UV7aotRQFuMkuI9DFitLl99zxSiNdopv5tJt+myZCi5
+WjIdMpLIoO8X1+I/Vq3XGSeWtblQpoatu8GIZmDLhnaWT4gzVqj2e76JgvR
qZvfjpDe+lxIODImA5mKg4f8fQzuNHTfNAq9jVzlA+kOpJduXhWP/ScBFRup
VCPSSJ8mKiIZim58Wf9igjRofHbC16kgv/DNC2KZGBQ/Vl09EXQGF3Lv3qtH
OvivLJmggXj8UMetYUfStCOSoosR13DPfo5HZ0n3rHW5XcG4jZ/Tv5t9nXTH
lO0VfdsM3NDs53AuaV2rYDvZO1n4WF/2kWrSm7LXHzzVkY0XJU6Mt5CWZ791
foHl4pZGESPdpEXtw47IGOfjmxpKbQdIX+gR26qzoxDX6B/SHSL9+8JEuXvv
E3zTDpf7/3fI5jrdy8HFeGnAhYQPpL/1p1WXM0rx5635iz2kTyT4EUMFZXia
qc78a9Kj2qZ1AhZP8b/PR0U+J+06LLdr238VeHzyREYh6d7kuZdu0ZX4jEiP
PYu0nX6LReKaanxyLif/AunWsfuvyyprcL6zkOVNOsu86tG0KuA3xGNxC9KD
GUpfuBcBp3u4X1QmLbdwVVXm5XP8hsizM1ykHax+n9BIrcXdns+v7SO/f2qW
d4HJkTo8jj8qvJB0x8/Orw6a9TjL5kVaJGkRa2KzH6UBv9mwKXAPaavsPP+L
rxvwIkOlVdKkE5bES26zXuBhuGzoRzIfuB5PajfovMTfmxaWe5I2ZNuH9PI0
4U0FKjcUSIftq6/42tmEz6nYW30g8+8Hxx196VMtuJ9TjIsF6XEHMyPfx6/x
hniL2N9kfm98Uhx94fQbvMEgpCyLdFF08lDrurd4Z17rsAnpr+8X1w9Nv8W1
FrPMI8l68Y5pyxa43I5n2czXd5L1Frc51lRirh1nh1m6uZPO7tMfkz/UgY86
q66ZJOtzWPOR8jblTtzgpCJ9kaxnpw9hf7s1dOGGRra7v5H1fi5hi9UJtW68
eFLLx5v07a1fJoOvdeOb6pu6+sn+0H1pHzPR7R2e0n0lpobsH9Y6akVlyz34
9kvFgy5XMTBOeV+OaffhJy0VdyqS/crZxCi/52EfzvZ6eupIIpk/P3MzH4r1
45Nqi8/uXcIg3+3cZfx7Py53569iQbLfiWuuORxQ8gE/KtXZ3kj2y0BvzVif
tI+493BzWAXZbyPrRjn2tn3EVRKxgZYwsv/L3Tmnyz+E0yR88/8l+/OjNqo/
75khfPPmoCezoRj0be9yvG8/jHN5Hf/AHYKBCS1Es0viE16cMmhR7kvOsyNq
+ZV7PuHnB/eJZZ0k87NmUCkz9hOeE2qYkUjOg7P+u+V8Fz7hB0FF6OBxDAp6
pfn4343iu1W+t7/zJJ83r7pfP3UMv06b2XLKCYMxC2r8A9EJ/Le824jWbnKe
djSeeGU2ga/hO121YIpBuEOi9fy5Cby/1nLts13kfm8xSbNPE/jm5cVbusYY
7IxRyhkvncSlylC+Co5BOlg0aB74iodisjbNW8h5K90cMWg5g/Ps9Z+VW4OB
SzKj+mTyHC6WaOFTOU2Di3ydEYUZv/Ak3XG2TTR53qjsPHLSjIM4q9qXIbSK
Bp67jKTzLnARZ9S7bSJz+cFMyixokYePmOU50wPk+UoIrN38rDDid29c2MQ7
PigqmPn2470Q0W5KC6b78cGMRdLhXyp0okdNNi9JiA9CVTakCrYwCN2CuyoR
5bwwpxYno5wkSsQPeI4YOvGCS9qJzwe0xIknLXpdzQK8IEJNtTd8K0Hw3y1Q
9n7OA4VXLklvuSJFJOZ3Wl8N4AGjOM4NupoyxJGtqukVm3igLsskaveCLPF1
05LJqTFu8jz3KmJVyWoi0KHBUvIRN9y/N344RHktca9JpT3Yjxu++3cXHqfJ
E7ataQfp27nB6BdH5tE+ecJ5KHdgkp8bNDnfDhvlriMOXJA8/uwDF0jJcL25
H7+e0BH9PjtSygU/x0KcaQ4KBEuoaf1CChe0vbS7uaC3gZjipWsX+3BBppNv
4JSQIsEIUpZtsuIC8VPqmbX9isRS8Hu1ESYXRKbanJGpUSJSpoKKH4twwSe/
srnzyRuJUQfnt0fmqGDoFCnl4a9MWC+kW17spgLxcipJ2UaFeDnovaq9ggo6
Y6xHC2tViaJGefOke1RQkn5y3JxTjZDcpHUqMJoKwhw8HdmdakROx8bDJd5U
uO25nDCYqU5UrB/+/NCaCnIDDhPpUZsIjeVhqb3aVEij/ZzxtGMSCyNukXZy
VNC2l9bEDqy4/aGe/z8OTOKDo63+a1kqnJx1LLJzZhIDf0wzDPu24MYkiLHn
ihoyVMhOuqfJ8mAShn9s1Af+hPeKB5SHikZOMAlhziuM+9JUOHuaOhvnxyS2
y++pPStFBfEGBS31wJV4EWNXQNtpJqH7J/6Xq1dxUCiTcN1YumdYkgrj+XGz
UuFM4tKvAiJPggpxvx5r1UQxiXb6k/dmZFxhd0uAe8xKHFIninkSmETp2OrD
NNKOI4JzuZdX/GMzc8ueFCbRpL96d40YFa6HWwfOXmcSpx9RahikNV6dKrl5
a8Wt0tfm9FgrNrCR/N6ayyQSKo/SfzCo0Ju+feupAiZxQdOk/Z9VVAiecAgS
K2IS8X/iDN1zpRWlTMLU5nyPHumC2LvfnSqYROQ9jqmzdCqYd9Vs5axe8ei6
waBsWHGUH0eZeT2TiP5kEyElTIXVNevmpxpX/Awz1r7WsuL9Bz2Ct71hEhZj
HcydQlT4lh1T9m87k/Ad6QRPQSokzeXMh3cziag/61WMmrQVepmE5Z/1L5K/
BL/sZxL2G851RwtQwb0fKz/xcWU/W0V9QeQTkzj4Jz7dInNOikODUHxpLFDI
T4UafzXWOKcGUaal3FPAR4VEKYOqaq4VO4BVXzKPBkHJFIQHvFTY6OW85Ma3
4nlBX9kttBXXl4Tr8whoEFh32poUHipcPXTFsUdwxW6c98/lCq9Y4/ET1jn6
in/vqa36a5UGUcxq2mvORf7P+fa+tWIaBNt3Gg/gJuvn7vDSN/GV+FHjOdkG
SQ2i5I+1x7kMbkqvmOuqmJO3rAaRpKec28FB1o+O4nm91RoEvXs+RIxKhf8B
oUNPQw==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIFDn7XmqsuMzAcedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AJSuWXM=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
h7VnE/xuCvanP2mXyljhV8HOyzW9FP4P97rgnA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
w2KwgJ6nZAPZrB1ueV04/AMsn0je
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx39YzAcAx/Hz7RddcurOSanu6uq6um9dP76MPH36TcuZGClPcUtHu0my
hAvR0qZ7jFo40Y78mIXC1cSu72atrB8qdamHFPNcIUQr3Vxmf7yf1/PmydLj
NhAMBmPxx/73xLTIAp6CwKOyNfemLeXQA+EJGQG7CNwi7vbtjeTQSuO1VNZB
Aps9+SlHFnFobtX0tcNqArzYr4fOBHHoq3L58r8uEri3pXGzVsyhK0Jae003
CejNORcdBRz6PDcoRdJCoOfY+qe5Thy6tIHYfuwVgT7amChlcuh8z1OlqYFm
GGKJlxgG2XSCodNA6MzwofKwm0M5mybkYbsXtpvDeyThvnIOm45Lnftzxbgl
9mcMh0ZY2dNJebkdG/+1Ro5sIZlqMZOe8Gogh5/ZYp2LhLHY0ZauLhJFM4/N
xDDvzI/O+mm04HTjQ5sSe9hayDMdey3oPQ+sx/p1HCR8/zgss2AKren9VXj8
IRdi4UStRYmxbsdgdJiu2wGtr9tWZlx6UxfMz3qofe+I/fZ+bYKAv+u0X+5K
nmOaixfOXIYVTdcVbjlSJWS7QvfnwVrFit4QvqoM1e486Cq40kP+L0OKJLPD
jXw+DBNttXLmeIjxuSz/POUGlxaPrvYLH0KCSYdFzPnuOJquqB/vMYOsw2rK
+kABfBmeXdImK+QUNlq4RnmgdNBrMMbOBpmtozk/RHpiQfZXKaypLCR7vKW2
JQhhJ0zTt0js4NvvZYpI88LVE92y9OVs9PCaqWa5CJYuTvqc2FnYsQNVt3Z6
I6rVvClp62yMxruWfbHLB8GqP85VZM7BCvV89fssMYwz/intS3PC+RG+fvIA
idO6O+wnhc7Qt2V/U5Pvi7262k9Eka4wydpqFUv9UH7tsVfsGh5yeOoX8a0f
3y9L5Z7IxysWQ6CLlaBgRtjky9VuWMu8a+rukkBm3n+Fn+aO6jsrWC2f+2NW
7lCnTZoAzKLQ21n9/qDt6xes2+OBOFWT8vjGAEin9lw6e8gT+Z8ytxw1BKA6
L75YoxJCy75uFpMRCDb34k1LjRc6NHbt3SOBkErkq/inRRhInn62Lz0Iiktr
J31PeeOZMMNB/S4Iu0PcDeeu+GBA+12DXzYFxZrV4Z2XxZBuGFWm7aQQ9Yvo
cvQ1MW6xk/zLlRT43MnZN2vEOJopOcnNpXC/s/ylhhZjqeT+1slvKUR89uZ4
eocYNyoEzs0nKDhFq15bj4lx+Ay9TV5HoTnw9snQRSQm40QizW8UzhWVTNWG
klAQxY96b1PY92ZTpjCKRPR6eYy0kcL8StaSGctImJxtXYPaKZR7J40+WEdi
kzqxiXhCQcmfiMnOI6FfUr83+CmFVbnN2ucFJCImSCrLQMG/v8w1WUXCJZ7Q
DD2nMHgyaiyyhEQX56estlEKKx2KNfYXSITV2/lYj1Mgs+U2BypIVG5TDoRP
ULDuXrDdWEni4L1lsTUmCnTxQOzADRLv9t2YMvKBgvrt9ZqVOhKp/m41ImIe
suIK+I2/k+gcKFSkmM9DXFWiamEDidDDY7xTlvPgw/J9d7mJxH/GpPTY
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -11.512925464970229`}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-11.512925464970229`, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-11.512925464970229`, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9, 3.7105198604481077`*^9, 
   3.710547789842683*^9, 3.710632339212097*^9, 3.710632372187998*^9, 
   3.7106326202691507`*^9, 3.7106328186894493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nucleonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon", ",", "protonpauli", ",", "proton", ",", "nucleon", ",", 
    "elasticnucleon"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nucleonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon2", ",", "protonpauli2", ",", "proton2", ",", "nucleon2", 
    ",", "elasticnucleon2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.704513803952091*^9, 3.7045138230540257`*^9}, {
   3.704513948536606*^9, 3.704513948814498*^9}, {3.704653721000185*^9, 
   3.70465372112542*^9}, {3.705885699054138*^9, 3.705885718124003*^9}, {
   3.706591220601418*^9, 3.706591220745357*^9}, {3.707578161324291*^9, 
   3.707578163393965*^9}, {3.707578739435869*^9, 3.707578739881011*^9}, {
   3.70777326604653*^9, 3.707773268884601*^9}, {3.7077749261809998`*^9, 
   3.707774950189661*^9}, 3.707775158698888*^9, {3.708288718620987*^9, 
   3.708288719939405*^9}, {3.710507740401231*^9, 3.710507750424079*^9}, {
   3.710632684400735*^9, 3.7106326872978992`*^9}, {3.710632813559716*^9, 
   3.710632813660969*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 16.11809565095832}, {
      16.11809532201759, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9a2x3u4iFqgw29G0hfbSs8Pql0X/5/8C13VYug==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
whikR+ycS7H/DyF8oYs=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4UjY66x3YUQLSD/pmB
7Xw/Qfdr+wJ+FEAxmtOHQu2MP21hSTw+hRRAcCW+/iLtnD/FNQS+tJMUQA9r
MzoT7aw/dt55waGwFEDfDe5XC+28P9cvZch76hRAR1/LZgftzD+a0jvWL14V
QPsHOm4F7dw/Hxjp8ZdFFkC+m7LDcyTuPxjLexNWOxhADw3VxjJk9j/jurpM
1A8aQBSqRqDngPY/JSIXgwEXGkAaR7h5nJ32P2aJc7kuHhpAJIGbLAbX9j/p
VywmiSwaQDj1YZLZSfc/7vSd/z1JGkBi3e5dgC/4P/gugbKnghpAta0I9c36
+T8No0cYe/UaQLpKes6CF/o/TgqkTqj8GkDA5+unNzT6P5BxAIXVAxtAyiHP
WqFt+j8SQLnxLxIbQN6VlcB04Po/F90qy+QuG0AIfiKMG8b7PyIXDn5OaBtA
W048I2mR/T82i9TjIdsbQOBtUduMsP0/GNPZ0eriG0BkjWaTsM/9P/ka37+z
6htAbMyQA/gN/j+7qumbRfobQHxK5eOGiv4/P8r+U2kZHECcRo6kpIP/P0cJ
KcSwVxxAIGajXMii/z8oUS6yeV8cQKSFuBTswf8/CZkzoEJnHEBWYnHCGQAA
QMsoPnzUdhxAXqGbMmE+AEBPSFM0+JUcQG4f8BLwugBAV4d9pD/UHEAwr/ru
gcoAQDjPgpII3BxA8j4FyxPaAEAZF4iA0eMcQHZeGoM3+QBA26aSXGPzHEB+
nUTzfjcBQF/GpxSHEh1AQC1PzxBHAUBADq0CUBodQAK9WauiVgFAIVay8Bgi
HUCG3G5jxnUBQOPlvMyqMR1AjhuZ0w20AUBnBdKEzlAdQFCro6+fwwFASE3X
cpdYHUASO66LMdMBQCmV3GBgYB1AllrDQ1XyAUDrJOc88m8dQFjqzR/nAQJA
zGzsKrt3HUAaetj7eBECQK208RiEfx1Anpnts5wwAkBvRPz0FY8dQGAp+I8u
QAJAUIwB496WHUAiuQJswE8CQDHUBtGnnh1A5EgNSFJfAkASHAy/cKYdQLY0
Fa3/agJA+xGQcUesHUApNWJW
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9, 3.710515961415608*^9, 3.710519864296764*^9, 
  3.7106323434485073`*^9, 3.7106323751070337`*^9, 3.710632450973483*^9, 
  3.710632687883479*^9, 3.710632814046365*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
z0k/Yf+f/w+NEEWL
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkH841HcAx8+Xfl6MG10KueP8uML98mGl7i01/ZKHsoTIpTs1q/zoCic0
WQqhWlznSq0pPG0qbiTbnp6mQouRsmxulkslz233KHJn7Y/X83qe158vlmRf
+C6KRqOt/cD/PjdnzTFWEgVXryi7jGiTWBsUlSzMpHCtKk9XmW4SKyZvSK1P
UBi28u/eWmESM+stY0aVFBYpXrXYNJnE12WysAc1FMJG1NXtT0ziOvHDfuMt
CmsqkpoF703iaqZvAr+TwvJ1yzorHKfFqjbqYPkYBbervf/IJNPifHe1Sioy
x0TivJUWr6fFUboeHdVqjjBDwB51Ng2UbNXh5V0WeJdaQ+srM0O41LG27u1M
rEs96rW2yRyxebndie/nIqJ0ZIvF7VmY8GzzHn1phTHiU3+sjo7GU9xgerkN
dopuW1/XfwTOxXsD877+GBeuTKn7x22Q/Wzu+GCrHSb/Wqm5ttgWVf23PSoG
mHDQ6kekK+cj/UXwqtY+exjeZJoX+i9AAFs+0DC1CBqPGvWX2xei4fPMuIVG
R/BSvnN+sd0BhfvL6j1snXFKF+m6uMAJ7KLzaHRlYUfJJyzHiA+dvyBoks1G
l+i6S/xmFiZfSfKriQv8x6akVjI2ArztV9D9XZHBv+GYkugCSfcss3gRBxd6
q7RtCa7IKrw3w/lTN9w6KRnOl3OQ+tCQdWaNO+q7imOnDrghzu1fkhblgUrP
Iubvx93hM+hpXL3HE18M3RmoVXrgKauDdMi4YHKkTGG5J9LTUd+SsQQaRX+p
Sy0Xhkjn8zszl0IQ05z9oHYJNiv9lVNyL5RWdmfsrF6Kaj37sekrbzw3tDTu
+sELjx8dOqrJ94FtD0PqpPGGUfKoOSmEB//7yz5Duw+yWMrXkQ95cHDRxRRK
eRizpnFaN/JRzAg5o/+bhxj6r8a+Xj7ez3PYS9/LR+P9zdadEQJEtF/Iob3h
g34q8I58UICa08XCmkMChBe1KyoShdAXLxjtoAmRv4G+/6xOCE5I5OCDbCEa
bG+ar08WYct8s7SsOSJ0VzG6+vQiJF+KC6QfF0EbZ3n5j32+yImPsmPM9sVL
j2R75TtfFHBbCzpLfKFtON7GO0SQo+nzS7Am2LTLoNiTQTAqDRytZBC02MYK
vlEQRM+vvdhnS3A2lV/JzCUgBw5bbrAnCOE/STEVELwWcIb4bIKmOo5TxzmC
yGspxdNCgtJLP6XJfiTgXbZ8rtxKYArncqt+JqjcclDZs40giTr9Z/8dArqF
NtQqhiA4XrZ+0z2CYcnN5twdBEYnK2ffLgKVc3RJ4m6C3crodmqIYLbqynKS
SfB43d2cgOcEBzYw9PuyCFZPeBO5jmBoMvPbq9kEiyOpqpFXBK3bQm0c8wh6
7a7KHxkI0pjjw+ZFBKvuMpbOfUug/SVOteIkwfdpCm3QBEGo/H7YwVKCE7+F
btQYCbi9qpaXZwjeHWky009/+JA3M8W1nEAqcNFwKT/MEO13j1US9GgLkxIs
/JA69PTZWRVBYOk4Sz3TD4NlQWVdaoL/AAm98rI=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4AQS70IfPZv7SD/pmB
7Xw/PZ5X5m1/2b8xmtOHQu2MP3j7gNi5C9m/cCW+/iLtnD/5tdO8USTYvw9r
MzoT7aw/6Cp5hYFV1r/fDe5XC+28P9gUxBbht9K/R1/LZgftzD9L0bNyQPnG
v/sHOm4F7dw/mX3TCwzPpz++m7LDcyTuP5fPUs3hKuE/Dw3VxjJk9j/3TUqX
087vPxSqRqDngPY/AcQWpR4E8D8aR7h5nJ32PwdhiH7TIPA/JIGbLAbX9j8R
m2sxPVrwPzj1YZLZSfc/Jg8ylxDN8D9i3e5dgC/4P0/3vmK3svE/ta0I9c36
+T+jx9j5BH7zP7pKes6CF/o/p2RK07ma8z/A5+unNzT6P6wBvKxut/M/yiHP
WqFt+j+3O59f2PDzP96VlcB04Po/y69lxatj9D8IfiKMG8b7P/aX8pBSSfU/
W048I2mR/T9IaAwooBT3P+BtUduMsP0/zYch4MMz9z9kjWaTsM/9P1KnNpjn
Uvc/bMyQA/gN/j9Z5mAIL5H3P3xK5eOGiv4/amS16L0N+D+cRo6kpIP/P4lg
XqnbBvk/IGajXMii/z8NgHNh/yX5P6SFuBTswf8/kZ+IGSNF+T9WYnHCGQAA
QJnesolqg/k/XqGbMmE+AECpXAdq+f/5P24f8BLwugBAyliwKhf5+j8wr/ru
gcoAQE14xeI6GPs/8j4FyxPaAEDSl9qaXjf7P3ZeGoM3+QBA2dYEC6Z1+z9+
nUTzfjcBQOlUWes08vs/QC1PzxBHAUBudG6jWBH8PwK9WauiVgFA8pODW3ww
/D+G3G5jxnUBQPnSrcvDbvw/jhuZ0w20AUAJUQKsUuv8P1Cro6+fwwFAjHAX
ZHYK/T8SO66LMdMBQBGQLByaKf0/llrDQ1XyAUAZz1aM4Wf9P1jqzR/nAQJA
ne5rRAWH/T8aetj7eBECQCAOgfwopv0/npnts5wwAkAqTatscOT9P2Ap+I8u
QAJArWzAJJQD/j8iuQJswE8CQDGM1dy3Iv4/5EgNSFJfAkC2q+qU20H+P7Y0
Fa3/agJAWYP6XjZZ/j8+9JKg
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9, 3.710515961415608*^9, 3.710519864296764*^9, 
  3.7106323434485073`*^9, 3.7106323751070337`*^9, 3.710632450973483*^9, 
  3.710632687883479*^9, 3.710632814478529*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pionall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion", ",", "pionpauli", ",", "pion", ",", "meson", ",", 
    "elasticmeson"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pionall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion2", ",", "pionpauli2", ",", "pion2", ",", "meson2", ",", 
    "elasticmeson2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.707774953653801*^9, 3.707774970470236*^9}, 
   3.707775160738758*^9, {3.708288762336705*^9, 3.708288763886136*^9}, {
   3.710500387190267*^9, 3.710500388107522*^9}, {3.710501409448793*^9, 
   3.710501411172181*^9}, {3.71050778547287*^9, 3.710507795473349*^9}, {
   3.7106327930313597`*^9, 3.710632809213449*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 20.72326583694641}, {
      16.11809532201759, 20.72326583694641}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
//LN/WHOF5g0/tevE7UincSM8/8BSpAhfA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
B4hC1dc=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz6PUyZ5bg0MQLSD/pmB
7Xw/6Cfh+uQbDEAxmtOHQu2MP0D8m3xbKgxAcCW+/iLtnD/wpBGASEcMQA9r
MzoT7aw/Uvb8hiKBDEDfDe5XC+28PxWZ05TW9AxAR1/LZgftzD+a3oCwPtwN
QPsHOm4F7dw/pWnb5w6rD0C+m7LDcyTuP8tngJVFyxFADw3VxjJk9j+WV7/O
w58TQBSqRqDngPY/2L4bBfGmE0AaR7h5nJ32PxomeDserhNAJIGbLAbX9j+c
9DCoeLwTQDj1YZLZSfc/oZGigS3ZE0Bi3e5dgC/4P6zLhTSXEhRAta0I9c36
+T/AP0yaaoUUQLpKes6CF/o/Aaeo0JeMFEDA5+unNzT6P0MOBQfFkxRAyiHP
WqFt+j/F3L1zH6IUQN6VlcB04Po/ynkvTdS+FEAIfiKMG8b7P9WzEgA++BRA
W048I2mR/T/qJ9llEWsVQOBtUduMsP0/y2/eU9pyFUBkjWaTsM/9P6y340Gj
ehVAbMyQA/gN/j9uR+4dNYoVQHxK5eOGiv4/8mYD1lipFUCcRo6kpIP/P/ql
LUag5xVAIGajXMii/z/b7TI0ae8VQKSFuBTswf8/vDU4IjL3FUBWYnHCGQAA
QH7FQv7DBhZAXqGbMmE+AEAC5Ve25yUWQG4f8BLwugBACiSCJi9kFkAwr/ru
gcoAQOtrhxT4axZA8j4FyxPaAEDMs4wCwXMWQHZeGoM3+QBAjkOX3lKDFkB+
nUTzfjcBQBJjrJZ2ohZAQC1PzxBHAUDzqrGEP6oWQAK9WauiVgFA1PK2cgiy
FkCG3G5jxnUBQJaCwU6awRZAjhuZ0w20AUAaotYGvuAWQFCro6+fwwFA++nb
9IboFkASO66LMdMBQNwx4eJP8BZAllrDQ1XyAUCeweu+4f8WQFjqzR/nAQJA
fwnxrKoHF0Aaetj7eBECQGBR9ppzDxdAnpnts5wwAkAi4QB3BR8XQGAp+I8u
QAJAAykGZc4mF0AiuQJswE8CQORwC1OXLhdA5EgNSFJfAkDFuBBBYDYXQLY0
Fa3/agJArq6U8zY8F0DJ1GtS
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      20.72326583694641}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {20.72326583694641, 20.72326583694641}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 20.72326583694641}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775161205503*^9, 3.708288764403833*^9, 3.708289255457758*^9, 
   3.7082892968292437`*^9, 3.708292244979699*^9, 3.708344025227751*^9, 
   3.7103508964247837`*^9, 3.710500107105405*^9, 3.710500388661186*^9, 
   3.710501170077609*^9, 3.710501339207707*^9, 3.710501411887267*^9, 
   3.710501564921658*^9, 3.710506830697893*^9, 3.710507795969468*^9, 
   3.710508126060598*^9, 3.710515028583988*^9, 3.710519869727491*^9, 
   3.710632347071649*^9, 3.710632398188032*^9, 3.7106324538071747`*^9, {
   3.710632796127961*^9, 3.710632810369072*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
M/1N+Mfem6+WSTf+P///AdgkG8I=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkH841HcAx8+Xfl6MG10KueP8uML98mGl7i01/ZKHsoTIpTs1q/zoCic0
WQqhWlznSq0pPG0qbiTbnp6mQouRsmxulkslz233KHJn7Y/X83qe158vlmRf
+C6KRqOt/cD/PjdnzTFWEgVXryi7jGiTWBsUlSzMpHCtKk9XmW4SKyZvSK1P
UBi28u/eWmESM+stY0aVFBYpXrXYNJnE12WysAc1FMJG1NXtT0ziOvHDfuMt
CmsqkpoF703iaqZvAr+TwvJ1yzorHKfFqjbqYPkYBbervf/IJNPifHe1Sioy
x0TivJUWr6fFUboeHdVqjjBDwB51Ng2UbNXh5V0WeJdaQ+srM0O41LG27u1M
rEs96rW2yRyxebndie/nIqJ0ZIvF7VmY8GzzHn1phTHiU3+sjo7GU9xgerkN
dopuW1/XfwTOxXsD877+GBeuTKn7x22Q/Wzu+GCrHSb/Wqm5ttgWVf23PSoG
mHDQ6kekK+cj/UXwqtY+exjeZJoX+i9AAFs+0DC1CBqPGvWX2xei4fPMuIVG
R/BSvnN+sd0BhfvL6j1snXFKF+m6uMAJ7KLzaHRlYUfJJyzHiA+dvyBoks1G
l+i6S/xmFiZfSfKriQv8x6akVjI2ArztV9D9XZHBv+GYkugCSfcss3gRBxd6
q7RtCa7IKrw3w/lTN9w6KRnOl3OQ+tCQdWaNO+q7imOnDrghzu1fkhblgUrP
Iubvx93hM+hpXL3HE18M3RmoVXrgKauDdMi4YHKkTGG5J9LTUd+SsQQaRX+p
Sy0Xhkjn8zszl0IQ05z9oHYJNiv9lVNyL5RWdmfsrF6Kaj37sekrbzw3tDTu
+sELjx8dOqrJ94FtD0PqpPGGUfKoOSmEB//7yz5Duw+yWMrXkQ95cHDRxRRK
eRizpnFaN/JRzAg5o/+bhxj6r8a+Xj7ez3PYS9/LR+P9zdadEQJEtF/Iob3h
g34q8I58UICa08XCmkMChBe1KyoShdAXLxjtoAmRv4G+/6xOCE5I5OCDbCEa
bG+ar08WYct8s7SsOSJ0VzG6+vQiJF+KC6QfF0EbZ3n5j32+yImPsmPM9sVL
j2R75TtfFHBbCzpLfKFtON7GO0SQo+nzS7Am2LTLoNiTQTAqDRytZBC02MYK
vlEQRM+vvdhnS3A2lV/JzCUgBw5bbrAnCOE/STEVELwWcIb4bIKmOo5TxzmC
yGspxdNCgtJLP6XJfiTgXbZ8rtxKYArncqt+JqjcclDZs40giTr9Z/8dArqF
NtQqhiA4XrZ+0z2CYcnN5twdBEYnK2ffLgKVc3RJ4m6C3crodmqIYLbqynKS
SfB43d2cgOcEBzYw9PuyCFZPeBO5jmBoMvPbq9kEiyOpqpFXBK3bQm0c8wh6
7a7KHxkI0pjjw+ZFBKvuMpbOfUug/SVOteIkwfdpCm3QBEGo/H7YwVKCE7+F
btQYCbi9qpaXZwjeHWky009/+JA3M8W1nEAqcNFwKT/MEO13j1US9GgLkxIs
/JA69PTZWRVBYOk4Sz3TD4NlQWVdaoL/AAm98rI=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz66jnw6hR4AwLSD/pmB
7Xw/YrrBuA4QAMAxmtOHQu2MPwnmBjeYAQDAcCW+/iLtnD+weiJnVsn/vw9r
MzoT7aw/7tdLWaJV/7/fDe5XC+28P2iSnj06bv6/R1/LZgftzD9eB0QGap/8
v/sHOm4F7dw/R/GOl8kB+b++m7LDcyTuP2glRBHRKvG/Dw3VxjJk9j9vzJBY
sLHjvxSqRqDngPY/ZZKtpUZ4478aR7h5nJ32P1hYyvLcPuO/JIGbLAbX9j9F
5AONCczivzj1YZLZSfc/Hfx2wWLm4b9i3e5dgC/4P8orXSoVG+C/ta0I9c36
+T9HFlP48wjZv7pKes6CF/o/MqKMkiCW2L/A5+unNzT6PxouxixNI9i/yiHP
WqFt+j/0RTlhpj3Xv96VlcB04Po/oXUfylhy1b8IfiKMG8b7P/nU65u929G/
W048I2mR/T9aJwl/Dl3Fv+BtUduMsP0/MStgvvBjxL9kjWaTsM/9Px4vt/3S
asO/bMyQA/gN/j/ONmV8l3jBv3xK5eOGiv4/oIyC80Aou7+cRo6kpIP/P2aV
5dHJLKe/IGajXMii/z/dpEHPUkijv6SFuBTswf8/nWg7mbfHnr9WYnHCGQAA
QI5NVx23a46/XqGbMmE+AECKuucMuduPP24f8BLwugBAYrksLFONsz8wr/ru
gcoAQKKxfq2Of7U/8j4FyxPaAEDpqdAuynG3P3ZeGoM3+QBAZpp0MUFWuz9+
nUTzfjcBQLI9XpuXj8E/QC1PzxBHAUDMOQdctYjCPwK9WauiVgFA9jWwHNOB
wz+G3G5jxnUBQDMuAp4OdMU/jhuZ0w20AUCvHqaghVjJP1Cro6+fwwFAyxpP
YaNRyj8SO66LMdMBQPAW+CHBSss/llrDQ1XyAUApD0qj/DzNP1jqzR/nAQJA
UgvzYxo2zj8aetj7eBECQG0HnCQ4L88/npnts5wwAkDV//bSuZDQP2Ap+I8u
QAJA531Ls0gN0T8iuQJswE8CQPb7n5PXidE/5EgNSFJfAkAGevRzZgbSP7Y0
Fa3/agJAk9gznNFj0j+dlY46
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775161205503*^9, 3.708288764403833*^9, 3.708289255457758*^9, 
   3.7082892968292437`*^9, 3.708292244979699*^9, 3.708344025227751*^9, 
   3.7103508964247837`*^9, 3.710500107105405*^9, 3.710500388661186*^9, 
   3.710501170077609*^9, 3.710501339207707*^9, 3.710501411887267*^9, 
   3.710501564921658*^9, 3.710506830697893*^9, 3.710507795969468*^9, 
   3.710508126060598*^9, 3.710515028583988*^9, 3.710519869727491*^9, 
   3.710632347071649*^9, 3.710632398188032*^9, 3.7106324538071747`*^9, {
   3.710632796127961*^9, 3.7106328107863083`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton.pdf\>\"", ",", "photonall"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron.pdf\>\"", ",", 
    "electronall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion.pdf\>\"", ",", "pionall"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon.pdf\>\"", ",", 
    "nucleonall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton2.pdf\>\"", ",", 
    "photonall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron2.pdf\>\"", ",", 
    "electronall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion2.pdf\>\"", ",", "pionall2"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon2.pdf\>\"", ",", 
    "nucleonall2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70777510737917*^9, 3.707775131585671*^9}, {
  3.7105134353191557`*^9, 3.7105134551898746`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["$$$$$$$$$$$$$", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.7060593812350616`*^9, 3.706059385481599*^9}, {
  3.710502245744701*^9, 3.7105022486474657`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xhad", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", " ", "\[Sigma]inel"}]], 
       RowBox[{"Log", "[", 
        FractionBox["\[Epsilon]", "10"], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]inel", "\[Rule]", 
         RowBox[{"0.1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]el", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", "*", "\[Sigma]"}]], "*", 
       RowBox[{"Sqrt", "[", "10", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", 
         RowBox[{"1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7059417325703278`*^9, 3.705941734089673*^9}, {
  3.705942481098905*^9, 3.7059424812484827`*^9}, {3.705943959443667*^9, 
  3.705943961182448*^9}, {3.7059471483075314`*^9, 3.705947148786978*^9}, {
  3.705947207793386*^9, 3.7059472079054747`*^9}, {3.7105020479850693`*^9, 
  3.7105021791007*^9}, {3.7105035793080053`*^9, 3.7105035816738653`*^9}, {
  3.7105081398855143`*^9, 3.7105081400187187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Xhad", ",", "\[Lambda]el"}], "}"}], "/.", 
   RowBox[{"\[Epsilon]", "\[Rule]", 
    SuperscriptBox["10", "10"]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.705945716937483*^9, 3.705945755799615*^9}, {
   3.705946410532455*^9, 3.705946427577038*^9}, {3.7060325196014433`*^9, 
   3.7060325225371637`*^9}, {3.7105018300920277`*^9, 3.710501862804953*^9}, {
   3.710501914016526*^9, 3.710501914279923*^9}, 3.710501970585722*^9, {
   3.710502187533626*^9, 3.710502190284931*^9}, {3.71050222788789*^9, 
   3.7105022335907393`*^9}, {3.7106359643502607`*^9, 3.7106359673019857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2.0723265836946407`*^-6", " ", "Centimeter"}], ",", 
   RowBox[{"3.162277660168379`*^-8", " ", "Centimeter"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705947315261444*^9, {3.706032501127593*^9, 3.706032550030827*^9}, 
   3.70603258285816*^9, 3.706063987222834*^9, {3.710501833567007*^9, 
   3.710501863138879*^9}, {3.71050191454672*^9, 3.7105019261077623`*^9}, {
   3.7105019624907217`*^9, 3.7105019709577627`*^9}, 3.7105021905907393`*^9, {
   3.710502229253213*^9, 3.710502233935169*^9}, {3.710635962466468*^9, 
   3.710635967811949*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Electrons and Photons", "Subsubsection",
 CellChangeTimes->{{3.706059348466249*^9, 3.70605935380217*^9}, {
  3.7060593908497257`*^9, 3.706059390969508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["Elpm", "\[Epsilon]"]], " ", "\[Epsilon]"}], "X0"], ")"}], 
    RowBox[{"-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "\[Epsilon]c", ",", "\[Epsilon]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706059448735363*^9, 3.70605945549938*^9}, {
  3.706059582918623*^9, 3.706059604588517*^9}, {3.7060599385677767`*^9, 
  3.7060599578500547`*^9}, {3.710502025387974*^9, 3.710502026025921*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["\[Epsilon]"], "-", 
       SqrtBox["\[Epsilon]c"]}], ")"}]}], 
    SqrtBox["Elpm"]], ",", 
   RowBox[{"\[Epsilon]", ">", "\[Epsilon]c"}]}], "]"}]], "Output",
 CellChangeTimes->{3.710503230070257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "X0", " ", 
       RowBox[{"(", 
        SqrtBox["\[Epsilon]"], ")"}]}], 
      SqrtBox["Elpm"]], "/.", 
     RowBox[{"{", 
      RowBox[{"Elpm", "->", 
       FractionBox[
        RowBox[{
         SuperscriptBox["me", "2"], "X0", " ", "\[Alpha]"}], 
        RowBox[{"4", "Pi"}]]}], "}"}]}], "/.", 
    RowBox[{"X0", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"4", "n", " ", 
         SuperscriptBox["Z", "2"], " ", 
         SuperscriptBox["\[Alpha]", "3"]}], 
        SuperscriptBox["me", "2"]], ")"}], 
      RowBox[{"-", "1"}]]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"me", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"Z", ">", "0"}], ",", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71050229377032*^9, 3.710502315426525*^9}, {
  3.710502366708797*^9, 3.710502408158175*^9}, {3.710502442707308*^9, 
  3.7105024651848383`*^9}, {3.710502548326982*^9, 3.7105025784284887`*^9}, {
  3.7105026593550663`*^9, 3.710502733624035*^9}, {3.7105027706367683`*^9, 
  3.7105027969248466`*^9}, {3.710502839714679*^9, 3.710502870062058*^9}, {
  3.710503249266605*^9, 3.7105032496872683`*^9}, {3.710503332245306*^9, 
  3.710503356627955*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["\[Epsilon]", "n"]]}], 
  RowBox[{"Z", " ", 
   SuperscriptBox["\[Alpha]", "2"]}]]], "Output",
 CellChangeTimes->{3.710503529556312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xem", "=", 
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"], " ", 
        SqrtBox[
         FractionBox["\[Epsilon]", "n"]]}], 
       RowBox[{"Z", " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "*", 
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], 
       ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Z", "\[Rule]", "6"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["1", "137"]}], ",", 
       RowBox[{"n", "\[Rule]", 
        RowBox[{"0.8", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "3"]}]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", 
        RowBox[{"\[Epsilon]", " ", "Mega", " ", "ElectronVolt"}]}]}], "}"}]}],
     ",", "Centimeter"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710503389615067*^9, 3.7105034464378557`*^9}, {
  3.710503565401925*^9, 3.710503575052148*^9}}],

Cell[BoxData[
 RowBox[{"2.479589668292241`*^-7", " ", "Centimeter", " ", 
  SqrtBox["\[Epsilon]"]}]], "Output",
 CellChangeTimes->{3.710503575268528*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Lambda]\[CloseCurlyQuote]s", "Subsubsection",
 CellChangeTimes->{{3.71063306787739*^9, 3.7106330686435537`*^9}, {
  3.710633249467394*^9, 3.710633251211505*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]electron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]proton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]proton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"dedx", " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "12000"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (nuclei)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7106330839539833`*^9, 3.710633085123887*^9}, {
  3.71063312696987*^9, 3.710633214596197*^9}, {3.710633345102055*^9, 
  3.710633399358563*^9}, {3.710633430636283*^9, 3.710633436819221*^9}, {
  3.710636577078765*^9, 3.7106366022508497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]electronpauli", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondegelectron", "+", 
               RowBox[{"dedxpaulidegfermi", "[", "\[Epsilon]", "]"}]}], ")"}],
              " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pionpauli", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]protonpauli", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronpauli2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondegelectron", "+", 
               RowBox[{"dedxpaulidegfermi2", "[", "\[Epsilon]", "]"}]}], 
              ")"}], " ", "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "0.511"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]pionpauli2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "140"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]protonpauli2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"dedxpaulinondeg", "+", "dedxpaulideg"}], ")"}], " ", 
             "5.`*^5"}], ")"}], 
           RowBox[{"-", "1"}]], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", 
             FractionBox["1", "137"]}], ",", 
            RowBox[{"M", "\[Rule]", "0.511"}], ",", 
            RowBox[{"Z", "\[Rule]", "1"}], ",", 
            RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"m", "\[Rule]", "1000"}]}], "]"}], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Coulomb (electron)\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7106334615475197`*^9, 3.710633534532024*^9}, {
   3.710633578185161*^9, 3.710633582784881*^9}, 3.710633613543623*^9, {
   3.7106336651202507`*^9, 3.710633665240654*^9}, {3.710636615612805*^9, 
   3.710636645918812*^9}, 3.710636676720388*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]compton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "comptontot"}], 
            RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
          RowBox[{"-", "1"}]], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"me", "\[Rule]", "0.5"}], ",", 
           RowBox[{"\[Alpha]", "\[Rule]", 
            FractionBox["1", "137"]}], ",", 
           RowBox[{"Ef", "\[Rule]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", 
               SuperscriptBox["Pi", "2"], "n"}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], "}"}]}], ",", 
        RowBox[{"n", "\[Rule]", "8"}]}], "]"}], "k"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Compton\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]compton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "comptontot"}], 
            RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
          RowBox[{"-", "1"}]], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"me", "\[Rule]", "0.5"}], ",", 
           RowBox[{"\[Alpha]", "\[Rule]", 
            FractionBox["1", "137"]}], ",", 
           RowBox[{"Ef", "\[Rule]", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"3", 
               SuperscriptBox["Pi", "2"], "n"}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], "}"}]}], ",", 
        RowBox[{"n", "\[Rule]", "0.032"}]}], "]"}], "k"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Compton\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7106336842720423`*^9, 3.710633701687048*^9}, {
  3.710636691453319*^9, 3.710636695908367*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]electronbrem", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"brem", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Bremsstrahlung\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronhad", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"electronuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "8"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Electronuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonhad", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"photonuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "8"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Photonuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonpp", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"pp", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "8"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Pair Production\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronbrem2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"brem", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Bremsstrahlung\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]electronhad2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"electronuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Electronuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonhad2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{"photonuclear", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Sigma]\[Gamma]", "\[Rule]", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "0.0025`", ")"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "10", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Photonuclear\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]photonpp2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReplaceAll", "[", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"pp", ",", 
               RowBox[{"{", 
                RowBox[{"Elpm", "\[Rule]", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["m", "2"], "X0", " ", "\[Alpha]"}], 
                  RowBox[{"4", "Pi"}]]}], "}"}]}], "]"}], ",", 
             RowBox[{"X0", "\[Rule]", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"4", 
                 FractionBox[
                  RowBox[{"n", " "}], "Z"], 
                 SuperscriptBox["Z", "2"], 
                 FractionBox[
                  SuperscriptBox["\[Alpha]", "3"], 
                  SuperscriptBox["m", "2"]]}], ")"}], 
               RowBox[{"-", "1"}]]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Z", "\[Rule]", "6"}], ",", 
             RowBox[{"\[Alpha]", "\[Rule]", 
              FractionBox["1", "137"]}], ",", 
             RowBox[{"m", "\[Rule]", "0.511"}], ",", 
             RowBox[{"n", "\[Rule]", "0.032"}]}], "}"}]}], "]"}], 
         RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
       RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Pair Production\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7106353070820007`*^9, 3.71063536058596*^9}, {
  3.710635405733457*^9, 3.7106354522191763`*^9}, {3.710636043216696*^9, 
  3.7106360439279346`*^9}, {3.710636094561348*^9, 3.710636096737505*^9}, {
  3.7106361742270403`*^9, 3.710636175601259*^9}, {3.710636253069036*^9, 
  3.7106362711754303`*^9}, {3.710636726471518*^9, 3.710636753527442*^9}, {
  3.710637432493547*^9, 3.710637457937435*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]hadshower", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxnonelastic", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "8"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "10", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticnucleon", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticnucleon", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "8"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticmeson", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticmeson", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "8"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]hadshower2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxnonelastic", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "0.032"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "10", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticnucleon2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticnucleon", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "0.032"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]elasticmeson2", "=", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ReplaceAll", "[", 
            RowBox[{
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"dedxelasticmeson", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"n", "\[Rule]", "0.032"}], ",", 
                 RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
               RowBox[{"M", "\[Rule]", "12000"}], ",", 
               RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
           RowBox[{"(", "0.0025`", ")"}], 
           RowBox[{"(", "5.`*^5", ")"}]}], ")"}], 
         RowBox[{"-", "1"}]], "\[Epsilon]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "1", ",", 
         SuperscriptBox["10", "10"]}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.710635513506115*^9, 3.710635560360156*^9}, {
  3.7106360687148857`*^9, 3.710636073488315*^9}, {3.710636764104178*^9, 
  3.710636777071892*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]canvas", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "3"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Energy (MeV)\>\"", ",", 
        "\"\<\[Lambda] (\!\(\*SuperscriptBox[\(10\), \(-5\)]\) cm)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]canvas2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{"300", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Energy (MeV)\>\"", ",", 
        "\"\<\[Lambda] (\!\(\*SuperscriptBox[\(10\), \(-5\)]\) cm)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.71063568946541*^9, 3.710635745830166*^9}, {
  3.710635777654771*^9, 3.7106357818304996`*^9}, {3.710635825137496*^9, 
  3.710635836825729*^9}, {3.710636785177038*^9, 3.7106368171590767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
  "\[Lambda]canvas", ",", "\[Lambda]hadshower", ",", "\[Lambda]pionpauli", 
   ",", "\[Lambda]electronpauli", ",", "\[Lambda]electronbrem", ",", 
   "\[Lambda]photonhad", ",", "\[Lambda]electron"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "\[Lambda]canvas2", ",", "\[Lambda]hadshower2", ",", "\[Lambda]pionpauli2", 
   ",", "\[Lambda]electronpauli2", ",", "\[Lambda]electronbrem2", ",", 
   "\[Lambda]photonhad2", ",", "\[Lambda]electron2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.710635472841764*^9, 3.710635492974225*^9}, {
  3.710635567600065*^9, 3.710635606606481*^9}, {3.710635749062862*^9, 
  3.71063575178197*^9}, {3.7106358058277483`*^9, 3.710635808787722*^9}, {
  3.710635864171525*^9, 3.710635869114883*^9}, {3.7106359038436403`*^9, 
  3.710635918139237*^9}, {3.71063634298438*^9, 3.7106363456084337`*^9}, {
  3.710636478360758*^9, 3.710636483188218*^9}, {3.7106368268889236`*^9, 
  3.710636891735867*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxNzX0s1HEcB/BLHtqNa5xznOvqztMdcUjacbufQpfK40lZzFx36cSMEbMw
cbvtcj1gHKZ2cUZ21wMtVkpprRaXhjYPoZxRLdx1i4getny+Ptt7773+eX/o
wqw4sRkOh4v8m39tGyG7wSTW8HD/T3RV2TWG5WKbPhHHr9Ri5WBdB61EiVWD
5SJ5ngJrBs9ze5dkWCeYzDrtI8VegNk3mQNl2DD4HceXW+40Cy4M95whJi6C
1dvzxTX3TeBT8SxJk9squO+BnFQb/BtcFDrZGp5iFrJpVR2L/IloAaYX9I8a
6qzAsisn9aUJeHCEd1CoVG8NruZEG2+Ld4JneC25rQRbsKc6hrJfYAcWeSzO
bOsggoXTLSMp1iTwlWR5dn6UA1jzI9XvbTsZvCoQN0wbHMFBA0ksfwEFjBVl
TtlrncE5hjbsnoEKri0d61PE0MBfRgKNLsrd4FLfhGZ1xh6wpfnl1FEKHXyr
e+S7pAf5QBFFWZ/JALMnzg9WUVzAvF1DHz4/Qj6cEbA+le4KFje2G/wJbuA5
CbswSossDNPY45PcwSbcwXLGBnLJG53FuMYDTC/ISVqKZYLdexl8nRHZ1WEg
9LiKBeZEKUgeYZ5gfjX/p8qE3JVHyJ5VeYFDOF97pKF7wc/wz6kvjciJT7Qx
Z2q8wfE2rY6vA33AR9IbjDo9sqCtWeUnY4PvzhIfWsqRCYyy/vEK5Ff1qcvS
SmRuBS1yrBHZNUu5cqkT2RRQET38ETk2e03UpkfWatILi+eQz7lHqJnfkCfI
lmsXV5CF69hQpZUv+FrDcvL6DuSnnDvzaXhk6gXaBtcG+f3CL+acHbK5orMj
1h55n1cG7zFpy37auOC645Z9i6rJNSfkhaajkrPOW/4dMjMNUpGPTXcXB9OQ
/wDFQQhY
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQLf2o4svGbCaHBeWss4+XiRywi/dSs+JhgfOT7khH
HFrDCue3y4UnPjXmhPMnmEz9rVfPA+erusbeeLuTH84/cy5ubfxcQTj/R4rA
9tv2wnC+sHyfcCKrKJxfci1AcOEhMTj/+Pcp4V8SJeB8TtulHwJUpOB82zdm
lw6ckIbzt8/gDX2dIgvnK2Ru0JJXkYfz9wZmqWxOUoDzHzY8irntogjnH72e
r3hvM4K/Uu/v0wdKSg7zYfY/WFWT0aUEl8+cGCH84SOCf9R75z/LJGU4X5FN
6lXzJQT/kr5MquISFTi/Krul07ldFc4/ptr/zylNDc7nnnpL3MdMHc53F+u5
dVNcA86v8alzLHyF4IcwCv98ukMTzlc5wRt1f4YWnP/W2TP+UaY2nL/24ive
LB8dOF/gnh7veS1dOD9n/uYNtr8Q/ANF8/4a3NaD83l/n3ynu1Yfzv/H4CPR
YmsA5xfxPus1XovgJ5csuJouagjn+z/hLYprQ/B3rJv94OZ7BL9oR9V353Aj
OF/jNE9ywXEEP9pi/wJFA2M4v3OdivHUhQg+Z8rt3O8CJnA+a8mmqnsVCP7f
Hps77S8R/CKG5/zbgkzhfIvNj15f2ong/8qbKLNJ0wwh35ogLzYJwf8ZV6oY
dQbB32XRpTyPzRzOBwDtj4nF
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
j+vJM1GsxLfgTYpsNCkdGGC0gon+Bx9qNzA=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVjns81PkexmdGg5XrzPx+v1wLuU2bmQpdOH6fSJbKbVq7ncMWuSc1ZSW3
XrFOmZDNPYfikNEwCkWpnS97IkKtRZvLmsplXdZtqdCMdf54Xs/reT2v53m9
Df3PeAXSKBTKqXX93y8PZ9aWW8hI25ho6yddBOKaJhGVbBlZbf/jauV6fiiy
GlMgZeSGAVFPbCeBbHeM1f2LJyPHqmxiXDoIhB7mJtUGy0iWYtgk9oJAB+1c
vDbGycjpqATjt20E8nKunH1cKiM3B1lOnG8lUIjvObbOBxm5EvExQ9BMoJl3
xst8FTlpK0zAjzQRKDKkt7XNQE429dV7qyMCXTq/J/Cis5wsuc6lpD0lUE6K
/NZveXKSEE4/i2kg0M8PBFiu7Rqp4WGehYsJpBwfO1biuUbybp64Wl5JoMMH
wuvFwWvkSH7qkI2IQH3dR461ZK6REaOUEg8hgSZnNQuXptb7rgveZ0vW99mH
GGw3CuRv3p36XQ6BOC9/yb8qp0ByOyVrPI5A3TtdE9O/oMKqkfw6xK7z5jSH
ZbGoUK66T5R7kUANvrW2t9lUEIxr7IEoAjlMZw3Ve1OhrlEYHXOGQN5ffGs4
LqYC44kq44YfgeIdfxc6HafB7fT2TocD63xnc3U2hdHgXv/7iEAHAlkWeaRO
RtLglKst899AIOmn5jPXBTTYYm/k32S3/i8ut3nzgAYF316jbbEmkKI2/3/h
qgoQbvAXijMh0PUZBWnmIwVonKu+UrOBQMX5FsQ7Jh2KjVwC9jzFka6JlfeK
Ph301phOio04yr5nn80wp4NoODG7uwFHKa08pqMdHSzK0gRBdTjiL8VrlAbQ
QbNocCJWhKP9nt1KQQ/o4G7/uNA3H0dvlWM/TXgrQu7brtv0SBwZRne8mc9X
gsGElly2CY6upH8zctlbBQQmlEbnUAy5bN/nmDyiCmNmRbu8hCyUtdd94W6g
BvCHK5XLh5jovf2dSKG6FtzdY5u8a4mB2GUeOtY8BphEs0+eYjBQgNnse2ot
Exy//4dKElML+Uvv9B5XxaCw/cTQGS1NlO4r4F9ww6FKO06QYK2Oqj747Xgp
IiDUJNOPylRFK7zAAun8JtBPcfs6c6MK2tfpY7GTpwO+1eZHW18qITL+9DBL
rAv9XyVNfZdDR+fmK8j783rQee2FQVucAsq93P9zmocBvDuaWnKfQ0WTvTYL
xnmbITElyrRNWS65zPUuLQvfAvxR2keKZFmiuOGa3xsdQ5hUasfG1ZckJY96
/wp9agjzp4WYdvmcZHe8Tt7N00bg5ex+8uX9cQln8NSrTB1j6Ml733Q6eFBi
r//r0ESjMch/Yhfst3omORhuJRsO2wrS0kOKkrwmMrBQNL9T3QQwn/LXzbJ+
cjyUE+MmNgH9qavuq+fGSP8DVSwVH1Poyy6jT2vPkYuU/T8YyU2htUgSKbu7
SF560UUfqDKD11FxpuKSZdIw+pzPnKc5fA6i/pPiKidNkZFz14I5SK2eR4gi
qLAV73Q8XGwBuw0tj6EpBdjrloaZHWDDdqmF4Z+kIjhnOS8XL7LhSGk/raRV
GRq+V+ePFm8DF9WOVg2njQB7p54mO34J78S6r9fy1KBJpVmvZeFLKObnXDuk
qQnHfhJ7nMzZDitW85+NSS04qibc1GZjCYwJ5+qlEAZ8FVaw0DViCfnJZ+1f
VTKBV1FavOMKB2rosc27Blhwb5RZryjggJpa4MHgYRaoGyV1DKRyoC3Zka81
yoLnN/0+Jt/ggCj8TtDwDAvsUg2O9BdywDIyI2NOAYOtZ/I+JdZxYJu2w+Jj
SwwWrVLde95ywNn5YVxlIgae/NWAihEO7OsyazmegoG4KiwmYZwDzW7y7tlU
DEJMXcrM/+TAD3hUOzsXg2f+DY9lsxxYJDXFNQUYGN0ye9W9wIHqhpnffIox
uDSQM1q+xIGAu94VDhUYDBKKq3GfOGBgbN0zLcbAX0b+ekOJC4aODnxmLwYZ
BR99ZcpciJN2fHAdwkCyt/qPYBUuZFuttQRLMZh5HXS+eyMXln5JOXzrDwz0
ogzkdmpcqHINueAyg4Erq+9quToXElVHO2sWMLhYk8ZkaHLhhAOPV7+EgdDD
qShOiwu6jTsS/FYx6Jv5bD7O4MK8ss3zABoOG9Lqaj1ZXPgPhartTsdh17Zw
+ycYFwJWFvQfqeGQETzA+3ETFxpxwdE6AgcJPfP3Ve11voD0onoDHGb+6xoa
pMsFJ59js8WGOOg50BZf6XHhc89uncNmOBySPkqwNeCCcFmB4muJw9/32AJq

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxFz3k8lAkcx/Fxm5loxjMRRWGsIZqnlA1rnl9RjhyFRMk4e7lCiFXZ2mpi
1hUdNiVUOpVrXwh5nhTlWMs0uY8GxXq5E6M2bfvHTn98X9/X+8+Ptl+ES6A0
iUTy/rb//mMg8EtCpYmHl4LLm7oR4snCotfRJZLEn5S5vn7KX/H/bSOoqWt9
JZbYzYzg5E/OSdxW6V9Wqzwj8ZVI5T2V3HGJ/WkkZ532MYnR4lnHlB2jEque
DnHcfuK9xP84DzsslL2TeLoit2XPnu8eWufl8HBiROI+V/OUrqrv7khc3SLH
/+626gWqyf7vbpwW7vbRG8FDwX4srhMh6nTLklM/DOMPdW1rDggRomZ/RnPV
s2F8XH7XBct2hCjGHXev8h7Gg//cvk2m+VtfeoN905UhPOiAWVJa7bc+dqXd
FkURHhjDYhUUIMRSv2k6raMX974nHySIRghWXk4kPb4XjxygR4xHIoSHn6yL
ytpe/FeGZqx0OEKUv29nMPx68NunTc5tDkKIqOmwbLWpLnzcwycv0wshJki3
CrTkO/BYclWXy06EeKu7ssbItA1PDTli91oVITTv5tzS9SzFnxoJDYVPVIh4
ckh00zUhpps/m241Qyf4ae5KWoXvsfNJFdI+hnQiNKhjX73GLObLFGxrPEoj
3MhnMpW9FrEkn3gdcF1JJMgn/TG7+QtmKVr0TOxXIga2FmwxjZWCKZuXhayI
FYTPvQY5ywxZeJRmal0gohDSdpcbaXEK4MVx9qsOJxM8A6bsxmsUWNOqUF/Y
p0AwOHTFrGIleG1FtxLvlSd8iX2nDtvS4KTOC5t+kSxxX0rG9E4nHUxEqhk5
LjKEVI/8YQcHBPoUEd/FfinCXhCyV+0tAy7Sio4Z2ZOI30cStJPCVOG3f37c
HXfiC76QOhrCHVCD1vsBla+yPuE795dEHIxQB1St/XHbsUX8dkX75NN3GhDl
fqGUyp/HyZvz9zS4rYW7vrMTnx7M4tyWtvAPQ5qw5Mn03a45ib/44i6f6L4O
Ai9RZT44jeKpd28U5sasByXnqAq6rAg3PxT8yslcG3ZZmZVuevQGj/AeXF8y
pw1z3NJ9q51e4DkRcp0FVTrAVMNqlp7dxFxbOhodj+lCppdF40m5FmxF+dfH
tkZM6LEzqgiL6saeFnXNvpljwrG5Q1F5k0PYwrzXUdVCPfhp7enw2xVjmL59
htPfMT9AXb2Oh8XyFPZ2PDIoAtWHhnfpiOmROez66nsxtmP6UH49zDrb4SO2
1z19oKyIBckXyRM2IWIsbVCbJwg2gIRK1/N1Lp+x5z8H8M+aGIKLpnfW+fhl
7PON5VOJS4agfnB4W/MrElTTrMs4pRvgKic818xcGqIzzayTjhsBeYfns5Ym
GSjj9tB5W42B35ft1QBysPBE0C6cMIaVGcl9gUXysIl5Yrq8bCPwAvvUDC0V
Yb671c7hCBuo7Wdb3IrJMKOVNZ8UyQbZgwyd1nIyTPpzc+uj2fBl5HaczVMy
vJ+cnuccZ8O0uF7HvIkM3VL0vE2JbHizXjF+3QgZag1cF1Tz2XAjMkVvXI0C
/PjOmyIhG7bSLv9y6hQFztfmOmp1sQHN1hOKeRQ4IxMkPtDLBn1muUFUCgVO
poodhSI2rNnWKQy4SoHwfPWlhik2fOWqb7Avo8CDkUf67rIoNBfldDJGKcBS
UEmYl0PhudlG47RJCtwxiBVkKqBQ/bz2jMI8BW6FcxL+oqBQ1Dlo/IlEhevi
VoEtHYWLX7XPDWpQQWONCWtUBYVkfmm3hzYVrlpmJfAYKCQiVmyBPhWunOGy
6tRQOKEf0PNiCxUYBc8TfNRRiC6ZZ3MsqJD5Uv/1sgYKoRY8XsV2KtDGk1k5
a1Hwr1/Vi9pSIX3FTIKFFgpc5zvoAycq/AvlItHs
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAmIQnc/R+3BjNpNDkEjjr3URD/bfubT5aXofgu8199ZL
2Y0IvpqRxqfOb0wOATD10YeZkhqZ4XzP9T+VhaazwNXztJXVa35kg/PT7b9O
iFLmhPNPza+qbPHihvPFDQSqUxfwwvm/Fy03SjjHD+c/WbScsVNUEM6/cLwu
NM5OCM7nuBfW4hAsDOeb8Gy3r6sXgfPXaEtcOzFdFM5fMe/P9f5VYnD+TM3M
tE1XxOH8a0uvnX/4SgJhvtWZozkSUnD+PkVX9RIHaTj/wK99yR0hMnD+ttcH
dH7Uy8LD58fZwxdKpsvB+fon/Bh9j8nD1X/tWnfuQrkCnF+hZdbVyKToEALl
mzHInN7gq4hQf5WR58EMRbh5bC+WNwvdR6iX+OX720VVCa7+7/FohRfrEPy7
C9dyW7oow/Unf6lPmXAewX8cNK15apoKXL1qdN6NG78QfN47x2YptarC+e8z
kpWlpNXg+svzGiQllqs5+EP5B2XjXUMM1BHuvdlobncUwf/IozpdL0ADEf4+
PHvPPEPwE1lLAgqLNeH8delzJUP+asL1f73KtfLJJC24/KM9P5ZWy2kj0tt6
rcwDWxH8Eh+5JGcvHTj/SOKkE2euIPh8zV5fmbN14fx/Ms39jt914fZtSKiN
39ugB5eP3bD76zNRfTh/Q0XVT7GFCP4cMZ1fTVsQ/I4td3+9O47gJ3xw+HPs
nT7cfDX3yjpJRgM4X0bsUt15LgT/t/5dOzYeA7j+W54v/tnwIvjTa//VreJH
8IWeatW3iiD4vT7h9QmSCD7HluZ6azkEHwBYIQyc
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkXk41HkAhy2KXOU+xso4xvymmCHZZ0rz/ewiIUeo7VAitojH0qG1YZVZ
m7AdMuPKKmxqKSsbW/x0PB7KuVI5QmiJRzIpjGvtH+/z+e/9/PEyAyO8g2Vl
ZGTcl/l/1V2SrrI1MwQxF48eUzSR0kG/iiu7yHHyjrhbeK6W0ju9nS+VkkSy
tys+LXN+lm4uN4oXk3SyOS8rhP9ylk4OSj6RSgrI4v1tnwpSZukR+9oPSeQu
UbxfH86emaF1qX1WQvKEDAhry+rbpmluHrvpLHlO1Pyn9xWlfaLb+Dz7RP23
RFSba7n12Qc6xokzqLlngrCEL3cbTY7QhXLRwRl/TpGPYuPT8Zn99G5fKuS6
uZRcYawbqjnZTD+uSNYWbV4iM+oCJ3GAmMQ69N5w8peFwKM1NZFuJ/mZlO6A
5grESv4649U/QJinGjsnMxVAj4e0nNk5RpLSvh1K2KUEN1eF+HsuEuJiuclB
OKSCQ9bxQznXPpN0vqfkZvBqGMTYd4WPS8mgoOj4DTV1MHN+zFO7ukQ4hV4G
G300cCfCwn1CVhZBFhODX5Rr4s6GoHM6ofII7C/q8FfRxoOAnrrahpVI258c
Ge2hgzoNUdttuVUo+Rxg3XJLF6rSgbEtkcqQ+gRn90/qoUlpzZXESlVsavKj
bHwMkGVdbjutvwYkNrxPq5SBmbao8VwfdURNFpOySUPsNW+Na/xBA6KErsep
XkZozd5Xlfi3JkY77CSm4rXYnhC96eawFhJ4uwoKw4zxSCJ7TLhGByvlzwd0
GjCRWd0rDfDVxbWqjo8h1UwIXI17HBP18FWsgTgr3AQv92QY+bbog9tztPWy
gSnqPaPrRrQZEHzZ/vrdfVOMtlUdr3E2xNYw24W+UDNsv+yffD79SwTn3pq0
UTOHilP1gH6jEYZDuDEepeY46Bg1bLu4FoGOJVpKfiyQmpywuEJjTMl8nWiy
yMJRxb3+UjAR/6x5RXeJBQzqmtNq3jHBPBXl92EHGzeDfpuMTzIBq9bEuVnC
Rhyd8Y+riSnMdJoctudTsHouKvV+agq+R6q2hSMHG7weLpHDZnBOd57Nn+Jg
f6By9hF1c1SeUIt8m78Ot7/3bk6tNAf4Y9VCh/WQ62g5mOLLwkOlR4Z1kvV4
0u7yS90CC3tqSr0OZVii3I2aaMu2gK/qDb0GOyvwC6RbRuzY2BaaLWkessIY
s6zMqY8Nn+KCfOskLgSSnXl+pynceat5b2UyF384RCe9iqOgZnK2sTuFC+Wf
/s0pSaBQnxUwLbzEhagi7an0Zwr2KUbuXblcRAo5c+MXKZhFiGfO3OXCsNXa
cf53ClO2KZ7P33DhrXqgs7ydwo7IuaDiIS74Coiof0GhtCQ0Jm6YC4b/e5Fh
J4UjLJdC9jgX3exit7O9FHp0V86dnuHCpeGcHmOUQuACab+kwIMFa4ul8hKF
C9nT+xcUeZhKX7srVpYDmn975LASD2+uMnZXyHNgeNJo0V6VBxXX8Ix5JQ5e
vJ9nD2vwoLbq3qtybQ7kU++W79DiYUxeFNunu9xhXZjggTYPDQlX5A4wOLhw
uNvnoh4PG5VGjSuMl/0rLvfO6S/77QYdXpty8P66a8h3DB5om8cjiqzlv29k
p1oNeWBE2Cy+ZnPg1l8Vt9mIh1tzRSdXrefgP3bzJw8=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 6.907755278982137}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {0.,
         0.}}, {{3.2894072757057793`*^-7, 16.11809532201759}, {0., 0.}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\[Lambda] (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\) cm)\"", 
         TraditionalForm], None}, {
        FormBox["\"Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      6.907755278982137}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.710635609128961*^9, 3.710635752351063*^9, {3.7106357839597483`*^9, 
   3.71063583853299*^9}, 3.7106358696474447`*^9, {3.710635910754033*^9, 
   3.710635918627823*^9}, 3.7106362373992233`*^9, 3.710636276964999*^9, 
   3.710636346157333*^9, 3.7106364836109257`*^9, 3.710636892378202*^9, {
   3.710637493546974*^9, 3.7106375085776052`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLejZPk9DeJrdjakJUWsuiDmIa0brtdofsYfx9edr
nG22vwLnX7Q0sGmRfArnV7lqPRaOfA/nL2UuT5226QucHxGimblY9Recf3hr
l+h06/9wfq3zvRWu8UwOMP7CmZrij4RZ4XzFijM3P85kh/Pb+8KfNIZxwfme
ulbOrU944Pwplv6fVqXyw/mP7ZaVrOAThPO1lgZImQYLwfkp6u8fM24WhvOT
Hiy7Gs8jCuf3xXYVlvuJwflrvyUanl8tDuf/Ck6d/eCjBJxvdTZG0yhYCs63
r829L7JOGs4v+rjSfuNHGTh/euOtw70BcnD+q6tmn5RnyMP5jQZhS5bmKMD5
bCzdiTelFOH8RTuvfs7ci+Cb10rNmJWrBOfr38m+MFlKGc63k7189+VuBN8t
x+Tv/SwVOD917uqPRnyqcP7zTP0qv3UIfpLLWhGuGDU4/wuDY4vSPwS//vQ5
1ttr1ZHiryjmQ6AGnK92QMn93CcEX0XsrLPPQk0439KvV1TdRQvOd5/i/nPh
FwR/Rylf4dOF2nC+g+Xrva3OOnD+Qa5DMsc+IfiR+9YFJE/ThfNDeFdInDTT
g/M9smZ/OvcEwQ9euWShYbs+wn8mPf5XHiL43g921lnLGcD5AEprf0A=
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQLf2o4svGbCYHzxn73yh/vml/QHDzr0PzEfwUx7cM
Vy4j+GsWJPJ+s2Z28IHy7eK91Kx4WODySXekIw6tYYXLt8uFJz415nTwh/J7
NMv0um5yweUnmEz9rVfPA9e/1eL4pnu+vHD1t2x+ZvbJ8MHVq7rG3ni7kx+u
/sy5uLXxcwXh8j9SBLbftheG6xeW7xNOZBWF80uuBQguPCQGV3/8+5TwL4kS
cD6n7dIPASpScPNt35hdOnBCGs7fPoM39HWKLJyvkLlBS15FHs7fG5ilsjlJ
Ac5/2PAo5raLItz8lXp/nz5QUoLLZ06MEP7wEcFXZJN61XxJGa7+kr5MquIS
Fbh8VXZLp3O7Klx+wQlOl8PfVOHyx1T7/zmlqTm4Q/kZd0263c+pwdVzT70l
7mOmDlfvLtZz66a4Bpxf41PnWPhKA64+hFH459MdmnB5lRO8UfdnaMHl3zp7
xj/K1Ibz1158xZvlowNXL3BPj/e8li6cnzN/8wbbXwj+gaJ5fw1u68Hdy/v7
5Dvdtfpw+X8MPhIttgZwfhHvs17jtQZw+5JLFlxNFzWE8/2f8BbFtSH4O9bN
fnDzPYJftKPqu3O4ETw9aJzmSS44buQQCOUfYnzGePK3Edy+aIv9CxQNjBH2
f/6YeTvDGK6/c52K8dSFxnDzPTkbAtxuItRzptzO/S5gAvcf+xu3L69cTODq
WUs2Vd2rMIGb19hQrm280QSu/2+PzZ32lwj1RQzP+bcFmcL5Fpsfvb60E8H/
lTdRZpOmGUK+NUFebBKC/zOuVDHqjBncvl0WXcrz2Mzh9gEAcC0Qmw==
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVznk8lHkcwHFmEMqEIWcjw+MqnseVHPX75kgkRiO061iiIl7SiWgSVllE
NDkWO8lVmRVqyTGj+6KRo1dG2IzVSSYhx1r7x+f1+fetGxqzJ5wkISHhs9L/
V3JLLzWisrdNyi0zu73I/LCLBU0D6DjaoiNy9t9F5u/d43qJi1IRP8SucHgH
md/VQGMVoHwk6iz3ndxK5meEZZzIQteQdNa9TOVNZP57B/7XdNSIPscN6e6X
JfPVjH82S0MP0CrN0ESZDhIfLzPqTEG96OLQW226OYnfbUs4pGqMoadXHUNC
P0jwE1xMRqn7JlFb5ecr+tbLvAryqXB2/TQivQxOdoxZ5Pn7GEeUY/NouS+t
J8n6B+/+7QzVK/bL6CRT5quANMNLchqqdgkmwfmCrISKADGPU2is9o4qDR4D
7z5r23/h6ca9eDNVuAo+aj+87r44xkvP9hMl+8pD0+Gob0EPhTw3UzunNNEa
kJ21fkFmPeHl23qJr4evBeNZiZNJv1xHo9sqj1dTlKAWOdFTE3uRSQVD05qp
DNQJ3/pz4e9QmOHkqGQDFSjHWSzFwE8odKSyL3iNKpR09J621Bej7MCM2FOe
60Dt+dnobv8ZVDsTYv7yhhqkJ0u6EtPzaJ4ZXjwypQ5ankVO4+7LyK4zwNiC
qQndrLomHSkSoKToYRWuFvSwL9xxDpCCo1M16NaUNijKe1n1X5SBK8kD97MY
NDiSJDOVPSMLH/s2i/UKdCCBRD3daLMakgnfaxVRG8ADCdQ9jiiAjNRvIW80
dYFyauKAzOBauNrc9y2iTReaVYP2HVFUApskzYKiaDr4V36xSPJQBnzwsCBP
Uw++38xRXEihwrb1PW8/tOgBReSFp1epwI4oq6XhSH2g8TTutohUIbzkxpQF
BYN2lmpYh4IajEfgCZ5cDGL9CktazdUh1LlWRT7AADh+U5JRMRowLbE9lf6v
AfhuH3BkF2gC63mXtLDWEB7vqXmWItQC3bijAV+9jeCyoIzTIbceDPh01y6x
EZTKPWqrs6CB/rpOJw+OMcQxWnNiT+iArWeWqqGzCbS4BQZyvDeAa77rD860
CdyKD2iM/74Bmk5QYsc4G8FR4ZBtGVsXwPZTW5rTJvDqHvazMKVDh/w97Ufi
TUBJqW9tFdBhXzuXsZ9tCmzVY8V/ROiBj0K1+tPNZnDVt2GXaFkPdkYWi7tE
ZsBdOx1pU64PzJprHPN0HKwy+BW19hjUjVH/ksnAofTcuoODWzGg0FNeCDNx
WGxPS7wFGDwpCplNu4TDg1/FDK4LBg6ZtN0DJTjcG7Ws3c3AQD+mYO5cIw7R
Ysu5/nAMpq0yvXr/xkElt2rKLAcD79iFsBoRDmdpLaPxeRhwayMTzozjcMaw
qSX4MgaHDNwqjL7gQAliPM0swuBhaNPdpUkcnCmbH4/8jgG9zFDwSowDx71i
8HYZBiwhe6zqOw5ee0UGF8oxGFSTWUicw+FmLtMhqBKD0CXUc2kVAZpbrDr7
mzHIKZ4NXJIlgJZ7KK+rDQOe7Z/vD8oT0FunPHeWh8HE6wPHXq0mQCjn2h53
HwPtk7R/HRQIsNlxp2f3IwzcVfrPV1EI6JL3M81/gkF8fRZVWZGA8vmfmuyf
YVDNcClNVCJA0uZZp2InBv0Ti0bjygSQtLhxLAEGUlmNDd4qBKCPrz21XmFg
uTFqW6sqAa15meXG/Su+g0JmrjoB3WEzW+yEKz7pvKEFjRXfzoHR6qEVX7l7
xAEtAlTUpe46j6z4HEnTAm0CYnyOvdQYxWDXSPMZexoBrr4N2dn/YPAfbx5R
Mw==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs01GkYB3CXQaxkzGR+M8WSu2SmbI50+D3balMNJ/dLatxDQktSGsU2
MSwaJ7fkWkRkQknlFqXIujUusbkMIWVdGtdS257T/Pzxnvd8zvf7nPO851V1
D7T2EhMRETnx/fx/L3gBu+ykWH37qOmWcyMj6KPFJZfTKyKYV+UYbu5y3+qE
PtBV3dD2crnu7x+23VNvmjs9j+UpQXJHqhhTWN48wzvsqjFW1/rDK28NE+V7
Buo6fnhYbVO1nmEHNq90O/OmmlM5Nn/9mkK6CbkQ86cHr7tPiKRiTqC182s9
MlDhfHl2VGykRD3mc9J+wS0ZPFTYZyfYb1QuGcd8jxvpwgv6iAr3OenTY/ec
Mod52EhP4LtXgPVtpaOS5FyWUOF7JqVYapcOrGI5UzLm/tyuNcyDu/N/MQwV
BeE+roVNEiYcHGaxg8nN8melQNhn6ajj9DNkMBNN8RtS723E+m71dhe9zeWx
vEhU3LCgF4+5expnucJRAOH+ov2S3nQ6AZvn+97nZFgTsP6zFbeaKcd1XyHX
ENle630Zp+DG5xHr+YdJlRkiiwDC97eGtVE849b7pRsu/F7BIQDvaJtn/sII
mpim84dYGgEcMy4T+HJ8NEi7N9MqiwCD/cYNytp81LrqcnPOLQJ4UuaCjv7K
R4l9QypoGQH804+18YL56MKJeHrCQwJ86iMw8fF8tGfJOOxtDQFCkZbtlgV8
NI2U0h7eQoCIVEP2iz4+quRAj6gaJUBi8iazxyajqGZP1cBORSJUcJ4+ypYa
Q6W8vaUitxLBqPOszz8qY+jkAsGgYxsRauX1SWTjMfTO5sDYACoRmhKvhyT5
j6FUO409xeZEGIgPprI6x1AjHidFPZwIX9ga+X4Z79BDXX5WpGEi7I9iX91N
nUDTxpiqMf6KcOFVd8ey6zS6GD/hxxgkQbiR6Wfda3PofoeywKOBZEBedeLU
KgXorYed0zXvKNAbpyA6mbeESu/KPdJkuxXyLpU1LV9aRRmtHQGf+EpAfyAv
bpO5hj5bs5eMtv8ZfvpLjmyyTwTib2eVZIeogNtbwckFnigYH/N9aWmsCk/M
Y2/auIpD4PEhlbJ5VdA4HGqLdOIgM1CiN//xNog61VAv6iYJNq09zRZn1GBa
06vAqkcKZCu/lZrrqQNjtTLogJk01HD75rrn1aFh2mfRrVMGFgUupxVLNMAg
7PQC/zdZ0DrEsXwfognJ2/q5Md0bYXgqyCeQpgUbPNNHr9E3wQ2kMMR8Ugvq
h8Qj1I7Lg5V94mAFVxvOKH2YSNDAQ8KQKqvLVwfKCpgJd4fw0Bjmyf7TQBcm
0Pqk40UK8Dnr68XoFV1Q9nZmuwcS4Im8WYVp+XYY7M2uJmsTIThpj1nMeT1I
dUq28Jj9/s+Mfjxr9w7o1TTc4lq8GRYfdXXyPu4ASqT+ANddEXaqh89UVuiD
3YeeZY4OCQRv2g7ST1GBlKtrozVKglnlVEFMEBWI4/NrHuMkmPZgZD8PpgJ+
+5PCnPckGJ+eEZiep4LMg8NfybMkeCOKz9kZTYUvL/2LZNdIUKtjs6iYS4WR
2dJvc4oIsM/15o3wqHAXDEqqDyFwpTbbQrmPCndYn+1XLBCIEvdZdh6gQkFL
o6ihFQIX4pcteCNUyLG1deA6IBCQS15p+pcKST5nxPI8EbgzdlfLHkeDsKsP
HaMjENCWUmAKJGgQ0n1R/FkkAgU6oV1JUjQIopiXirAQuBlgymyXoYHfrT7x
83EI3Fhu6zLH08ClaqXUPw0ByhYD7QkFGjiuPXUqykAg3SSVySLSwG5fLG48
C4GUKIZ2A4kGR1opzox8BIj5jUxXMg3o+FHcjUIEkl5ovf5KoYG5fTG3rxgB
+ak47cytNDDLCHbezEUgUXaWuVeZBvuG90pYlyPwH4JMCkQ=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQnc/R+3BjNpPDLL/GX4+5RBzuRB9mSmpkhvM91/9U
FprOAufztJXVa35kg/PT7b9OiFLmhPNPza+qbPHihvPFDQSqUxfwwvm/Fy03
SjjHD+c/WbScsVNUEM6/cLwuNM5OCM7nuBfW4hAsDOeb8Gy3r6sXgfPXaEtc
OzFdFM5fMe/P9f5VYnD+TM3MtE1XxOH8a0uvnX/4SgJhvtWZozkSUnD+PkVX
9RIHaTj/wK99yR0hMnD+ttcHdH7Uy8L5P84evlAyXQ7O1z/hx+h7TB7O/9q1
7tyFcgU4v0LLrKuRSREhf5WR58EMBF/il+9vF1UlOP/v8WiFF+sQ/LsL13Jb
uijD+clf6lMmnEfwHwdNa56apgLnq0bn3bjxC8HnvXNsllKrKpz/PiNZWUpa
Dc4vz2uQlFiO4B+UjXcNMVCH89luNprbHUXwP/KoTtcL0ECErw/P3jPPEPxE
1pKAwmJNOH9d+lzJkL+aSP7nWvlkkhac/2jPj6XVctqI9LReK/PAVgS/xEcu
ydlLB84/kjjpxJkrCD5fs9dX5mxdOP+fTHO/43cEf0NCbfzeBj04P3bD7q/P
RPUR8hVVP8UWIvgJHxz+HHuH4HNsaa63ljOA8wFDsnEh
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0Xk4lAkABnAdZJFiXE2ajGEux/fNp/SI9b1FaUpuqQePNWtipFqtY9lM
i2a1FkvOUskxRaGDSttSbepZK1Rkn1K5U0pybMpRa/94n/e/3/vHy5bs95Iu
VFFR2T6f/1tHnHKKz8hzPHu529+wRBMhvxXUPaWj6MVej7g+lZrw9XI5Wk0f
ptPMpNUZVzXRWsM6VEDn0CNZ12Zm/9ZEakhqdDpdRldG72pqmNDEK4db71Po
Wlq66IrqE2ctGAr8rRV0I83tD30YM6gFoojfkkx30MQ2WWabiTYe2pEOh1cM
0i4f7qir+y9H/CZhP2PXKD0iPpmVqNCBclGsNO/yJK1c2nz3S6kudvoIZKXm
0/TOQCfvrk4G7lxJ1c+3/0J/PdyWK5/QQ4LTi/JNQQvRU0RKDvIMUHxMYNjH
UMXPnIlK7DAE+4f7T8aOLYFnZbZOXKQRUjL8BhJ3aMBZ/qmzTrkCYqv1TooB
LUT2FC2vvMdEjp37+DnpMqzZzdxi0L8S/Y5nosq1daD6MrxpymgVhEoP5lpv
XTiLr5q42bMQwhvtX1DDgFpdXs7W2NWQ9Jx5HKSlD4+YwUff+JkgIzA1MtbN
AG/WiX8XvjZB1YdgUdt5Q5D5p5v7UtiY9pYW9owZYVmstSTf2BTrWwIElDcT
t8+FndjZYAo6YW+3XvVK5O8OfNYSyMGBsQr60pgxkokNFcIJDvITn95J92Bh
9kJRd3OuGYYf245zClajJOldkoe1ORLJHWXKCBOsd03TlTeaQ23xr8FPmGw0
jdae5YVxUXL98YSsno1a18SfshbwsC6BWXB8rykm2D6itHIeiGd7HmQzOVCZ
0e1gb+fDcVX789c3OAineb78IT42R6yZ6w43gyT/CHU+QwDpyfNjlLY5fnEt
y5ZZCDEkI+Ldqs3RfXern/9dISTOVXoaAVz0LZqdqoiwwKTKhsOmn7loe3St
5oO6JQ41t6p2VfGwliP+mH3Zcv6/AwHvPfkIcmIrjTytwL1l6tI6zodv+5sv
J95awcygxcm1WIC4ZUFfheVaw84tXZ/nLIR/ESNJzYaAS47Lp+JJIWz7rLSG
nxOoi9aOHCy2wFB9EKt3IwnYvalXOFlikx9/QpRF4rbGn8b3xi0hm1ELNn9J
YldDtce3eVZQdXdbFb9WBJ+l5UZNttY4oegYdk8WYUt44XjrgDVuvlLsaflH
BO+KsmJRCoGBGPW3xVwKFwcZ19RSCYy2jZwd4FHQNk2+35VGgLVPSbkLKPx1
PHhKcZTAXE5H47QFBYc01vanJwnUR5/OjBNRMNtf8DGplsCNXv+pIw4UJtek
uXf0EjAvyi2J96LgGTkTUjFAwNa3IHWBD4XqqvB4+RCBlIQSOeVLIYwrVvJH
CPgl13332o/CM0O1mYMfCZyi3jdcCqQgmaPbjy4hIdF0tN8QRiGzcCpwTp3E
A/dP/47JKNy0u/AqVIPETZcqD4M9FIxjWJ8dlpIIEJrkifZR6Hw3yx/SJdE5
O52Z+z2Fxem1NZ56JO6FtktqoyjYWEQ4/qFPwsYu/Ex4zLwf2uWdZUSCWxh1
ihk376tmv5hZMe8zsjafi6fwrnSrbPdKEhflMqOmH+f3Ni6cfGBM4oUxu9Qm
gcK2nutyexaJXoZ3U6Ocwn/jtw+a
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -2.302585092994046}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-2.302585092994046, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        5.703782474656201, 5.703782474656201}}, {{3.2894072757057793`*^-7, 
        16.11809532201759}, {5.703782474656201, 5.703782474656201}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\[Lambda] (\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\) cm)\"", 
         TraditionalForm], None}, {
        FormBox["\"Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-2.302585092994046, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.710635609128961*^9, 3.710635752351063*^9, {3.7106357839597483`*^9, 
   3.71063583853299*^9}, 3.7106358696474447`*^9, {3.710635910754033*^9, 
   3.710635918627823*^9}, 3.7106362373992233`*^9, 3.710636276964999*^9, 
   3.710636346157333*^9, 3.7106364836109257`*^9, 3.710636892378202*^9, {
   3.710637493546974*^9, 3.710637509041052*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 675},
WindowMargins->{{222, Automatic}, {-8, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 234, 4, 57, "Input"],
Cell[817, 28, 452, 10, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306, 43, 176, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[1507, 49, 1236, 35, 94, "Input"],
Cell[2746, 86, 613, 11, 50, "Message"],
Cell[3362, 99, 1721, 52, 132, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5132, 157, 175, 2, 43, "Subsubsection"],
Cell[5310, 161, 1684, 42, 134, "Input"],
Cell[6997, 205, 1171, 22, 60, "Input"],
Cell[CellGroupData[{
Cell[8193, 231, 621, 18, 82, "Input"],
Cell[8817, 251, 263, 7, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9129, 264, 694, 21, 86, "Subsubsection"],
Cell[9826, 287, 438, 11, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10301, 303, 150, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[10476, 309, 810, 17, 41, "Input"],
Cell[11289, 328, 797, 15, 50, "Message"],
Cell[12089, 345, 504, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12630, 359, 649, 15, 41, "Input"],
Cell[13282, 376, 801, 15, 50, "Message"],
Cell[14086, 393, 416, 8, 35, "Output"]
}, Open  ]],
Cell[14517, 404, 2357, 61, 190, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16911, 470, 290, 10, 59, "Subsubsection"],
Cell[CellGroupData[{
Cell[17226, 484, 569, 17, 70, "Input"],
Cell[17798, 503, 317, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18152, 515, 496, 14, 95, "Input"],
Cell[18651, 531, 209, 5, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18909, 542, 202, 3, 43, "Subsubsection"],
Cell[19114, 547, 9460, 252, 1067, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28611, 804, 123, 1, 43, "Subsubsection"],
Cell[28737, 807, 7935, 205, 877, "Input"],
Cell[CellGroupData[{
Cell[36697, 1016, 832, 17, 78, "Input"],
Cell[37532, 1035, 25465, 504, 314, "Output"],
Cell[63000, 1541, 27006, 531, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90043, 2077, 1222, 21, 120, "Input"],
Cell[91268, 2100, 47903, 930, 307, "Output"],
Cell[139174, 3032, 47696, 928, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186907, 3965, 1085, 20, 99, "Input"],
Cell[187995, 3987, 40833, 781, 314, "Output"],
Cell[228831, 4770, 44505, 842, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273373, 5617, 712, 15, 57, "Input"],
Cell[274088, 5634, 44175, 836, 314, "Output"],
Cell[318266, 6472, 46234, 870, 312, "Output"]
}, Open  ]],
Cell[364515, 7345, 1488, 42, 246, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366040, 7392, 188, 2, 57, "Subsubsection"],
Cell[366231, 7396, 1633, 45, 201, "Input"],
Cell[CellGroupData[{
Cell[367889, 7445, 644, 12, 38, "Input"],
Cell[368536, 7459, 595, 11, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[369180, 7476, 162, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[369367, 7482, 746, 19, 124, "Input"],
Cell[370116, 7503, 364, 11, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370517, 7519, 1471, 39, 118, "Input"],
Cell[371991, 7560, 240, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372268, 7573, 1050, 30, 182, "Input"],
Cell[373321, 7605, 153, 3, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373523, 7614, 169, 2, 43, "Subsubsection"],
Cell[373695, 7618, 6815, 183, 1130, "Input"],
Cell[380513, 7803, 7857, 212, 1252, "Input"],
Cell[388373, 8017, 2620, 75, 360, "Input"],
Cell[390996, 8094, 12392, 329, 1830, "Input"],
Cell[403391, 8425, 7887, 203, 912, "Input"],
Cell[411281, 8630, 1814, 48, 229, "Input"],
Cell[CellGroupData[{
Cell[413120, 8682, 997, 18, 99, "Input"],
Cell[414120, 8702, 48855, 966, 311, "Output"],
Cell[462978, 9670, 46844, 934, 310, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
