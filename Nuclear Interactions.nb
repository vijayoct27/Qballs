(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    365023,       7536]
NotebookOptionsPosition[    361659,       7420]
NotebookOutlinePosition[    362049,       7437]
CellTagsIndexPosition[    362006,       7434]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "PhysicalConstants`"}]}], "Input",
 CellChangeTimes->{{3.7026599174107428`*^9, 3.702659920282866*^9}, {
  3.707578062616406*^9, 3.7075780627309227`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "obspkg"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"PhysicalConstants`\\\\\\\"\\\"}]\\\
)\[NoBreak] is now obsolete. The legacy version being loaded may conflict \
with current functionality. See the Compatibility Guide for updating \
information.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.707578065594265*^9, 3.7105062105315323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic Collisions in Lab Frame", "Subsubsection",
 CellChangeTimes->{{3.70439758295687*^9, 3.7043975846021852`*^9}, {
  3.7046500341470222`*^9, 3.7046500373350277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m", " ", 
        SuperscriptBox["vi", "2"]}], "\[Equal]", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "m", " ", 
         SuperscriptBox["vf", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], "M", " ", 
         SuperscriptBox["v", "2"]}]}]}], ",", 
      RowBox[{
       RowBox[{"m", " ", "vi"}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}]}]}], ",", 
      RowBox[{"0", "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", "vf", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"M", " ", "v", " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]}]}], "}"}], ",", "vf", ",", 
    RowBox[{"{", 
     RowBox[{"\[Psi]", ",", "v"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7043956982810183`*^9, 3.70439578376477*^9}, {
  3.704395820560055*^9, 3.704395852925693*^9}, {3.704509543602092*^9, 
  3.704509563726329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], ":", 
  " ", "\<\"Inverse functions are being used by \[NoBreak]\\!\\(\\*RowBox[{\\\
\"Solve\\\"}]\\)\[NoBreak], so some solutions may not be found; use Reduce \
for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7043958260514793`*^9, 3.704395853329617*^9}, 
   3.704509568536331*^9, 3.704571395293263*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vf", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "m", " ", "vi", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["vi", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["M", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "M"}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7043958260598097`*^9, 3.7043958538832006`*^9}, 
   3.704509569081953*^9, 3.704571395829649*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second solution is physical one", "Subsubsection",
 CellChangeTimes->{{3.7043980437290154`*^9, 3.7043980559534397`*^9}, {
  3.704574584179956*^9, 3.704574588758279*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efin", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "m", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "m", " ", "vi", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["vi", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["m", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["M", "2"]}], "+", 
              RowBox[{
               SuperscriptBox["m", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"m", "+", "M"}], ")"}]}]], ")"}], "2"]}], "/.", 
    RowBox[{"vi", "\[Rule]", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", 
       FractionBox["\[Epsilon]", "m"]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7043960422641973`*^9, 3.7043960544458313`*^9}, {
  3.704396240710936*^9, 3.704396279919651*^9}, {3.704396340045801*^9, 
  3.704396370510132*^9}, {3.704396445968672*^9, 3.704396514333053*^9}, {
  3.7043967352607117`*^9, 3.704396742762102*^9}, {3.7043968693853273`*^9, 
  3.7043968697025843`*^9}, {3.704397182522834*^9, 3.704397182658051*^9}, {
  3.704398005085311*^9, 3.7043980412580748`*^9}, {3.70439878158025*^9, 
  3.7043987979006968`*^9}, {3.704399752419772*^9, 3.70439975350599*^9}, {
  3.704509994202764*^9, 3.7045099942736397`*^9}, {3.704572323167429*^9, 
  3.704572323462879*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"etransfer", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox["Efin", "\[Epsilon]"], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704396546902505*^9, 3.704396607194059*^9}, {
  3.704396761924859*^9, 3.704396782931272*^9}, {3.704396814323419*^9, 
  3.704396879598176*^9}, {3.704396967581319*^9, 3.704396984124893*^9}, {
  3.704397018870875*^9, 3.704397048373542*^9}, {3.704397080568088*^9, 
  3.7043970810537663`*^9}, {3.704398800183436*^9, 3.704398802788703*^9}, {
  3.704399755475451*^9, 3.7043997683233967`*^9}, {3.704399805605715*^9, 
  3.704399809694181*^9}, {3.70439989540063*^9, 3.704399909864231*^9}, {
  3.7044000245512333`*^9, 3.704400071471487*^9}, {3.704400135746211*^9, 
  3.704400144247656*^9}, {3.7044004096083508`*^9, 3.70440045654058*^9}, {
  3.704400519616852*^9, 3.704400542127236*^9}, {3.704400627018744*^9, 
  3.704400630721491*^9}, {3.704571410513069*^9, 3.704571411851252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"Integrate", "[", 
    RowBox[{"etransfer", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", ">", "0"}], ",", 
        RowBox[{"M", ">", "0"}], ",", 
        RowBox[{"m", ">", "0"}]}], "}"}]}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7044022745721273`*^9, 3.704402275170223*^9}, {
  3.7046431189752283`*^9, 3.704643136431507*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["M", "2"], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", "+", "M"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
   3.7046464293566523`*^9, 3.7046500467900877`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Proper calculation (lab frame angle not exactly isotropic, unlike CM angle) \
yields \[Zeta]= ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["M", "2"], "+", 
     SuperscriptBox["m", "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]], "~", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}]],
  CellChangeTimes->{{3.704643123515564*^9, 3.704643137762341*^9}, 
    3.7046464293566523`*^9, 3.7046500467900877`*^9}],
 "for heavy nuclei"
}], "Subsubsection",
 CellChangeTimes->{{3.7046500515776463`*^9, 3.704650119513261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   FractionBox[
    SuperscriptBox["M", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"m", "+", "M"}], ")"}], "2"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.70440410874854*^9, 3.70440411616311*^9}, 
   3.704404547012455*^9, {3.7045096674135942`*^9, 3.704509670484754*^9}, {
   3.7045123769536*^9, 3.7045123821119337`*^9}, {3.704512611686779*^9, 
   3.704512614126163*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["How many elastic collisions before lose O(1) of energy?", \
"Subsubsection",
 CellChangeTimes->{{3.705885897668036*^9, 3.7058859056366777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.5"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "100"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7058859103272743`*^9, 3.7058859324218063`*^9}, {
  3.705885976319331*^9, 3.7058859764544487`*^9}, {3.705886027126842*^9, 
  3.705886033957623*^9}, {3.705943088548449*^9, 3.7059430887606573`*^9}, {
  3.705943195355322*^9, 3.7059432031155157`*^9}, {3.705943902371518*^9, 
  3.705943902503972*^9}, {3.707845046068416*^9, 3.707845046199988*^9}, {
  3.707845185226728*^9, 3.7078451884638042`*^9}, {3.7078458212813377`*^9, 
  3.707845821374362*^9}, {3.708289196874199*^9, 3.708289201169088*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7058860342969112`*^9, {3.705943196581669*^9, 3.70594320370866*^9}, 
   3.7059439028797827`*^9, {3.707845046696259*^9, 3.707845051529893*^9}, {
   3.707845185883759*^9, 3.707845188745452*^9}, 3.70784582172502*^9, {
   3.708289169244665*^9, 3.708289201698689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "41.76187795018794`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.705885932763235*^9, {3.705885973524386*^9, 3.705885977018015*^9}, {
   3.705886027829247*^9, 3.705886034303774*^9}, {3.705943196590994*^9, 
   3.7059432037176113`*^9}, 3.705943902888917*^9, {3.707845046704797*^9, 
   3.707845051539077*^9}, {3.707845185892404*^9, 3.7078451887539253`*^9}, 
   3.707845821733531*^9, {3.70828916925389*^9, 3.708289201707345*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Zeta]", "c"], "\[Equal]", "0.1"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", "12000"}], ",", 
      RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], ",", "c"}], "]"}]], "Input",\

 CellChangeTimes->{{3.705886049855261*^9, 3.705886050221634*^9}, {
  3.705943107644319*^9, 3.705943116657132*^9}, {3.705943191643855*^9, 
  3.705943193162631*^9}, {3.705943472991119*^9, 3.70594347313236*^9}, {
  3.705943905592835*^9, 3.705943905655376*^9}, {3.70784505351272*^9, 
  3.7078450536885*^9}, {3.710501953729549*^9, 3.710501953840839*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\)\[NoBreak], so some solutions \
may not be found; use Reduce for complete solution information. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.705886050718212*^9, {3.705943108367778*^9, 3.705943119066016*^9}, 
   3.7059431937456837`*^9, 3.705943473521803*^9, 3.705943905939335*^9, {
   3.7078450539696283`*^9, 3.7078450550749893`*^9}, 3.708289178506966*^9, {
   3.7105019444601927`*^9, 3.710501954261179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", "14.383478270034349`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7058860507249393`*^9, {3.705943108380752*^9, 3.705943119074711*^9}, 
   3.7059431937544947`*^9, 3.705943473530431*^9, 3.7059439059484653`*^9, {
   3.707845053977713*^9, 3.7078450550841503`*^9}, 3.7082891785156183`*^9, {
   3.7105019444699907`*^9, 3.710501954269981*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dedxelasticmeson", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["50", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxelasticnucleon", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Epsilon]", 
         FractionBox["10", 
          RowBox[{
           RowBox[{"(", 
            FractionBox["n", "Z"], ")"}], "\[Sigma]"}]]], ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedxnonelastic", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["n", "Z"], "\[Sigma]"}], ")"}]}], ",", 
        RowBox[{"\[Epsilon]", ">", "10"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"\[Epsilon]", "\[LessEqual]", "10"}]}], "}"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513538766163*^9, 3.7045135539076567`*^9}, 
   3.704514583862818*^9, {3.704653197664641*^9, 3.70465322775366*^9}, {
   3.7046569486914463`*^9, 3.7046569600981073`*^9}, {3.704657075972364*^9, 
   3.704657092396399*^9}, {3.704657123457366*^9, 3.7046571242309227`*^9}, 
   3.704657404385747*^9, {3.7046574439806223`*^9, 3.704657444087554*^9}, {
   3.704657726936661*^9, 3.70465772711018*^9}, {3.704658280463488*^9, 
   3.70465828562953*^9}, {3.704660621160759*^9, 3.7046606273574343`*^9}, 
   3.70466077608735*^9, {3.70588605545405*^9, 3.7058860617022257`*^9}, {
   3.705886186054516*^9, 3.705886227407016*^9}, {3.7075780760162067`*^9, 
   3.7075780830795107`*^9}, {3.708289209258444*^9, 3.708289224114139*^9}, {
   3.70834400503961*^9, 3.708344005374948*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "In units of ",
 Cell[BoxData[
  FormBox[
   FractionBox["MeV", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "5"}]], "cm"}], ")"}]], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.704574619732512*^9, 3.70457463963356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "4"], " ", "Barn", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", " ", "Fermi"}], ")"}], 
      RowBox[{"-", "2"}]]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "2"]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704514588859489*^9, 3.704514592946843*^9}, 
   3.704657484832375*^9}],

Cell[BoxData[
 RowBox[{"0.0025`", " ", 
  SuperscriptBox["ElectronVolt", "2"], " ", 
  SuperscriptBox["Mega", "2"]}]], "Output",
 CellChangeTimes->{
  3.704513724181877*^9, 3.704514595082625*^9, 3.704571537201365*^9, {
   3.704657485405818*^9, 3.7046574934856033`*^9}, 3.704657544678402*^9, 
   3.704658335364869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["ElectronVolt", "2"], " ", 
     SuperscriptBox["Mega", "2"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], ")"}], 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{"Mega", " ", 
     FractionBox["ElectronVolt", "Centimeter"]}]}], "]"}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.704657566969379*^9, 3.704657599499071*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5.`*^10", " ", "ElectronVolt", " ", "Mega"}], 
  "Centimeter"]], "Output",
 CellChangeTimes->{{3.7046575981931477`*^9, 3.7046575997617064`*^9}, 
   3.704658338614678*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elastic and Nonelastic stopping powers (\[Sigma] in barns)", \
"Subsubsection",
 CellChangeTimes->{{3.704657690998494*^9, 3.704657702060732*^9}, {
  3.705886102361073*^9, 3.7058861116458282`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "8"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.08"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxnonelastic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.08"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "0.1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", 
       SuperscriptBox["10", 
        RowBox[{"-", "1"}]], ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Inelastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticnucleon", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.08"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "1000"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elasticmeson2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dedxelasticmeson", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "\[Rule]", "0.08"}], ",", 
            RowBox[{"Z", "\[Rule]", "6"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
          RowBox[{"M", "\[Rule]", "12000"}], ",", 
          RowBox[{"m", "\[Rule]", "140"}]}], "}"}]}], "]"}], 
      RowBox[{"(", "0.0025`", ")"}], 
      RowBox[{"(", "5.`*^5", ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "10"]}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Nuclear Elastic\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Thick"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.704513112032195*^9, {3.7045134498770247`*^9, 3.704513482349444*^9}, 
   3.704513579191454*^9, {3.704514413242275*^9, 3.7045144170409307`*^9}, {
   3.7046532603069563`*^9, 3.704653260443033*^9}, 3.704657552055846*^9, {
   3.704657744526149*^9, 3.7046577454312477`*^9}, 3.704658448553891*^9, 
   3.7048353739347363`*^9, 3.705884750609273*^9, {3.705942322879837*^9, 
   3.705942322988016*^9}, {3.7075780918725777`*^9, 3.707578100560158*^9}, {
   3.707765834171659*^9, 3.707765838128194*^9}, {3.707773007648993*^9, 
   3.707773029575079*^9}, {3.708288669218328*^9, 3.708288683881666*^9}, {
   3.708292232863494*^9, 3.708292233475561*^9}, {3.710500059078541*^9, 
   3.71050008383671*^9}, 3.710501558599949*^9, {3.710507271816463*^9, 
   3.710507300759535*^9}, {3.710514739041901*^9, 3.710514739054528*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Canvases for stopping power plots", "Subsubsection",
 CellChangeTimes->{{3.705932188927627*^9, 3.70593219683154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"canvasphoton", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasphoton2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Photon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "7"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvasnucleon2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nucleon Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SuperscriptBox["10", "9"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaspion2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "7"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Pion Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"canvaselectron2", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     SuperscriptBox["10", "20"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1", ",", 
       SuperscriptBox["10", "8"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]], ",", 
        SuperscriptBox["10", "5"]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Electron Energy (MeV)\>\"", ",", 
        "\"\<Stopping Power (MeV/\!\(\*SuperscriptBox[\(10\), \
\(-5\)]\)cm)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.704513918893631*^9, 3.7045139420762377`*^9}, {
   3.7045142304986773`*^9, 3.704514230761878*^9}, {3.704574665161747*^9, 
   3.704574687830915*^9}, {3.704833813057259*^9, 3.704833814220786*^9}, {
   3.7058853430377703`*^9, 3.705885370645385*^9}, {3.705885643600559*^9, 
   3.705885676648418*^9}, {3.707578106777104*^9, 3.707578116768587*^9}, {
   3.707764744887583*^9, 3.707764800231929*^9}, {3.707764857842807*^9, 
   3.707764873779258*^9}, {3.7077649086124487`*^9, 3.7077649627712927`*^9}, {
   3.707765222579644*^9, 3.7077652254806004`*^9}, {3.7077656542511387`*^9, 
   3.707765663814499*^9}, 3.707765752849141*^9, {3.707766356610561*^9, 
   3.7077663631847*^9}, {3.7077664759080963`*^9, 3.707766514837055*^9}, {
   3.70776655353336*^9, 3.707766575501569*^9}, {3.707769725410735*^9, 
   3.707769728402549*^9}, {3.707770810316902*^9, 3.707770812393553*^9}, {
   3.7077711602882023`*^9, 3.707771180296599*^9}, 3.707771213610237*^9, {
   3.707771280615444*^9, 3.707771287541771*^9}, 3.707771381689966*^9, {
   3.707771573369876*^9, 3.707771618427503*^9}, {3.707773409492894*^9, 
   3.707773555950324*^9}, {3.708289097445088*^9, 3.708289099987447*^9}, {
   3.710501180558084*^9, 3.71050118797084*^9}, {3.710501224676174*^9, 
   3.71050126171336*^9}, {3.7105012919076242`*^9, 3.710501322219295*^9}, {
   3.7105073702031*^9, 3.710507432411334*^9}, {3.710514981672676*^9, 
   3.710514995717244*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"photonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton", ",", "compton", ",", "photonpp", ",", "photonhad"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"photonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasphoton2", ",", "compton2", ",", "photonpp2", ",", "photonhad2"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.70588566480058*^9, 3.7058856669276857`*^9}, {
  3.707578609739561*^9, 3.707578620794757*^9}, {3.707765933511084*^9, 
  3.707765939291894*^9}, {3.707766187762607*^9, 3.707766192966907*^9}, {
  3.707773323544589*^9, 3.7077733320633698`*^9}, {3.707774910511572*^9, 
  3.707774914940811*^9}, {3.707775144508655*^9, 3.7077751535802813`*^9}, {
  3.710501151684119*^9, 3.710501151817232*^9}, {3.710507729703883*^9, 
  3.710507729815445*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 16.11809565095832}, {
      18.420680368020108`, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVzns01AkbB/C5GDTJpeSe329mfsJocv+J1HxLFy8nl2xqqSyOclJvkk2W
hE2OtNalLfG6ZlsRpV6XXFtEqJHdimwht0Vlc93ajHnn/eM53/M5z3nO9+EF
nNwbxGIwGEHy+X8+vLrw3t1UKp6p+0u//50hwl/M2nfukIrvLk2+q1Ij8Hug
uZ7gqFRc+WOy8waKgNVsyD9RSVJxetVwl8SGQHpscf/zUqn4a/sw89NOBGZV
x2pFEql4eYvdhlYPAp45vOyLH6Xixfhgie4hAuq1Wb6bbJfF5zJ9t187TSDU
uXdz2v5l8Vh81+mlcwS6X64xmIpcFsfocHa/TySQMnf5dXbjsvh7lftrirII
TMd11M8PLYt79b1Oxd0gsEddMWcPWyY+dnQxc+1tAiqi84dku2Xi7D06jOh6
ApeOnBoI6JGJD5Q3pLf3E5icL2usm5OJV4Vwd0y9JVC07Vt37koG3EWXusYm
CCg8qzAPFDHwvLw+NnSRQMt74UfNMAYKjRcLFZRJbFu/7tTZLwz0Z9522kqQ
+DjNztJTZcIhoNfNkk8iv3qquZ5kIrlsRamuEYll5xpN5i4m1HpCl7qEJGpD
vGqSUpm4KvCz+NWWhFVFkizLiAWuQlequQsJvuPiDw3ubOTrKn6f+G8SPQpv
qvwC2HDo8NQoCiUR+7RlkPktG6qxnIj6MBIDh9Msd2WxkfHNB+rtGRJZcRte
SEbZMPBwC1qKIbG6PcBgKFIB/CofveQUEuy93SWsIg6kHVHOp0tJtJkeKQiq
5GCkrOGBahmJS0zptcdtHHy6amRSXC6/rxAmpExyoBHnp/uiQv6f+kU/PXNF
XJ9ZoaZTQwISR02rWkWYPFN5ubuVRLRLyTn/Z0q4/werKvwPEvPbEzweLq1A
s9/5a+McHuz+MyrLVONioo43uF2Jh+8WnO6c4nMRoD77JUeZB0YxS1XgzMXZ
npkmj5U8qKyK7UrI4ELk21ZbrM6DUe93u1yFK/HGYvgGpc+Dd0io48v9Kqj9
6Jbva85DTYavyft7qggricoy3cfDrutE74VbGmD+c1Dyr2s8OLuu8SjrWYN4
s7U/Jj7lwUakPXzZRAvTJw6nGLP4qJ4xEF7cr4OQUVl7zkY+qHGrZLpSD8pK
1LtffPi4HufeMqi0Dl/ueTcdjefjpuxERaEVAdbob019RXx0e7sdVG0jEeT4
05vKdj6088Yd+gZ46A8+O+AwzseIAyvBcJaPtJHXBWdZAtyY/tn3oQGF14n2
j04SAtzJcFl10toI88++DlezF+CuR4RrpP96RMXs1An3EsDW33hBlmSMn/JT
k/SOC6AY2BeZkWuCK+oi/9XxAjyJ1kiO7zTFgxIl3aFMAQYSXSNihoUQo+Cw
c5kA4ePK3YvzZrB+lWuf+FAA2UG3+52GIrS5xUjyngvwsvVKWKnNRny1bWTL
3XEBCnYENv7pbw7LMyNlGZ8FeO1zPSxziwU6Cj64ZHMpmDY0b45qt8Aw2cR/
pEch1Myia+UhS3Sv+yq+0YzCodWGjwsnLPE0sFpLZzOFnRyP5D/PWyH/1vx5
e1cKfxU4XTimaY0DKq/GrvhQEFdXT83lWmM6aXAkNphCUt9JbTNbG9zpyxnc
GEEhMqy4IvhXGwxtcrx54QIFs6rCuFEXWwh/MxU6pVHo47zVVh2yRdftvXsb
cuV7SZ7+1hAablsd+hmlFCaYVdmlJ2hk+/88R8t90/aJvm4ojfJge6UTcpM5
n/Tnw2kcvNVo8EpureOeBiUxNER1OxUqblNgcdnrtNJp6KRWNvuVy/t2HjGc
rqHx6fM5xQcVFK5GRuf61tEoMfl8bFpur7J0w44GGsJxu07BPQoSzSbDomYa
xoPDESlyt4xoEz5PaEx+sEsNvE+hPK6DaBukMaO/vkalksLxysE862EaXt46
rdvkNp1cIApGaTwaeNd5Ru4iDz4ZPUnDs3WpfUjuLCKKtJqjcbOeE/vfKgoH
vNLy8xZo1Gn8/c2k3GsTfyFXfaKx+LfyZsNqCqnTv5MTSzRWlx4bSpR7D38q
f5+Mxj7PK6X1cnO9GbwWph0+PL0cOiP34yStAgsFO2wfyzdfX0MhoWEDL1fR
Drc2KUz5yP0//He8Xg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVkWs0lAkAhl1XynWkyDBmzDAzzMyH8RHWvNiNpYxq2+lmJCkyzbQnlxZb
0Ulu2zlySW2tTqM7bVdKQlbMLEo303ZjVagMpZpInLU/3vP8fc7z0tcrliUY
6OnpLZnZ/+wOvZlim18ZxMla+oFeRsHl3dMHs7VZIpFnc0lTBQWeh+7vDdEW
iVYM8IUxhynYymqcZmgPi7KjzVIrlBRYJnv722irRY+Z7TqLixT0mo9I5mgb
RAVdgV8mb1MQFtux0UTbKRp2Yuv3zLLBpIm/3Fj7VHTu5rRFQZYNGn+/+Nc2
5oiI66CiJaXPhaX5wzavDTqRVcmmwFNxtlgTFeiSVDwl8s/8aCIOm4dz80NK
3WsMsDr9iEqG+ejJDmpjiL/By2Jq2Ru2HR4FnO38FDQbCc11P/Uy7TFU27Vv
E9UC7Fi0B1AXoHsFs7n6iRUk1MrQcQMH2I/bK226KcjU2l9xn3IAqbl+xF85
F6bPNns1DVDxuNxPR2yZh6eBp6X1HY5I3qH1s5Xaoeq84S6PVid0H4squcZb
gJ4QYc30WRoYo4OaSCYVu1KaB5XLnTHpsDajxtoJtTtjor/edsapPVnCO89o
oB961WgUQsfRws0yxZAz9jZOnlQ10tEzJouQ3KWDMfa1PNCbAUN5oWNtFwPX
BEV6sgsMpKw6UJl1ywU/s/YHi3kuiIr/haesZkLK3Z3Xf9QFtOz08zjJQthC
gwhPJybW3IgUBRW7IkEisyZKmHicZP6rMs0NVbwl5/uNWRBz3/65U8Ge+a1B
HZ3DgsC0cuS6hAPxlO1ruY4F469yhmI5F/W6qZzwFFfQYj2MCyLcEXZq7ceH
o65Q9jV9MPL0gGnSiWSbeDc4pik0Oi4Pbd47Ysz63KDP/dQWPpePq+bBK678
yAYnKjHBYIKPzsoMJqWdjbDcz+Ne7wV4EhAi54ZykCjnd8bJCNAGP94Yq+Xg
pIui/NVrAtLDPnlpQi4chg5ttI/1xL11cSvPnObiwoZvLfTveSLxmaHefqo7
Qt5uIaqivDARL2T4HHTHrOz8lZ9bvNA0IY7IM/eA2tl70jjYG7sOTgyXF3qg
evvyVFWDN+Lf229aZcJDa6/0kz8hROZK1mBHBg+a6PHRxBoh9qkb/534zAPt
bta7RQwf9PwQ2q+R8ZFvul31qNQHyAmqT+rlYyRS38HVmsTx1nazujUC5B1J
3eayh4RoXmDC5TsCnFB5STl7ScQET4jr7wrQ+mE0XJBPIlNW6998XwC9iM1O
Ab+RqGshrDo1AqTrpOplZST4Ctb1F70CbBSH03KOk3BUWVjbvBMgVN+ho+8W
iamGrc/9ZhFY5/HoykA7iaJld+4HmBLYISk7OqwmZ7rx1EGzCdTXWKaNd5FY
aPP20ndmBLxWG9GtekikJiXkR1sRcL6kTRMNkBi2XS1MtCMQ9PxM3PdDM35n
r3KS7QmsNU1cHPmGxOzg+TT5AgIVsf10yQgJtuyBaQqVgKWZplOuIxHfEtW7
05mAh29pXco4iTFJzYMcOoGI9UuPZXwhka2d8/ceBoHcqx3pudMkKu3UlwuZ
BKpe5K0v0vMF/5zbmX0sAi0Wi5bsN/DFjdDcymJXAn0LDf0qjHyx+J+XpaVu
BKY3NDP++MYXT+ShBQfYBP4D2vEGkg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkpXQl
Z8PkR7FHlOJQbmwe0zWzhrXK9JNS+TFkPbLo1zX0w3ZdsY61P16P1/9PbtTO
kGjKxMRk5fv+f5nFilxuAoW6tU8C12QyMOQfnuSdSsGQO+EpL2RANXE2xuYw
hSO+651lGgbs660jnqspuBvOzGPVM/CTQrHuZi2F61pzG0MLA1rfO/eM5ym0
ZCWW8rsZqLGXbhPdpnA+opf3+SMGylupfSUvKdRbVUmvTjdHtuvJ8hiJGdQJ
H20qWmWOcF2Pjmo2Q6LH3u+EPeagFH5f+HRNwwfahzKFbgZCYhxPa98wEHP6
Yly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZyms8r89NloPCoIYpbMBhoP
uHCrbOH8TduA1XFb1F11uMjT2OHL+5aGwWY7WEyF9xpu2ENz76Jb6YA93I3W
M+qesZDyLMiv+S4LZswSbs/D+ZDxlAMN7+bjesD1C+3mbDRsT5XPMzqC0xq9
wGEaB/m7iurd5nLQlbFUc5bFBa/gFBoXcqE4GeS1XMDDUZGD/wSPh36/FvFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbHnjj6teIUrfnlQvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUXzjgjuZDzyqD0j2g
D+Oc2prqgSXxbV+/SF+EUPVi9TvlIpScHszLUQlRM8brm8wRYpRqv5ZX4Im+
zv0Hm7I9MTPpyFJuoBeMUZ2/JqzxQuX2arG40wtpXPVo2B0vcASJ29jrRHhp
Y+LcvFqEIlZP+VcdIkQwO4x3e0WYsq3aWxEmRuONUJvbn4mxsds1t6hfDObR
5VeUg2KcKbPzkW31RkhBu6o01huvi0/pI0e8kR3M3HVC5w3++ge6iHgJGub+
bLYqSYIwx9zUWXoJujVzuu6OSbC39unKimQphuTW3/65U4qs2KEPq/+WYtgt
iaV+K0WBaEWhPJVgqOFQq9d+gqzmSF/DBMHaaL0q/gDB2I42vaeR4MLcSHG1
ikDuKK6NmyI4sUdUYZ9BsFQ13W7AjMYaUf/uyTyCV0u0w1esaJzTOrNvlRFE
NIwXF7JpFFa1JCt+I5Boj416+NGYDBEINJcINJsmNTEBNBKoYw/uXSGYxYzd
UBlII2iLYtXaNoLhOJ/LtsE0jOyZHGkXQaXrwxMToTTi1JvaqUcEVlWe/m3R
NPo+vpYue0KQElL61jSWRsC4kCh1BDpTsx984mksCKM0f40QXN7c51CXSKPX
7ntlp55gPzvtRfE+Gn7X5nhYviF4fPtpVUcKjR+TVUP+4wShaZ9utFDROPz7
J6ub3jsI7ztdVaXTeJt5znTsvUPZ4YKUxkwaMWKnJgFFw8LnjfBVFo2eofyE
bdNo7Bve/JifQ2N5oYF7kkHjcenN0q15NP4DId7s3A==
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, 0.}, 
     PlotRange -> {{-0.9210339996043925, 19.3417143676245}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999494223*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Ban8CVUWW4h/AJ0WUVQ=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
h8L/AKmNGtw=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVjms0lHkAh3m1KmNUInQ1I2OMCfMfXtoufiFaSbtaEm1lksnlVC4pjO5J
m1atLkzlUlo7zHbYwtpab7uOIpGkLCUzp7WDUjlNuc3Uth+e85zn28OR7Aze
RhkYGKz6zP++MHVlFieewki1SaSwTMeofcITxOkU4rxVP0zJ1jGy8evR009Q
cH8sLAmK1zFWleyNQ3IKn6SptWcCdcyvUuk398ooNI03tHYLdYzSq7Vbf5NC
R8DozSQTHVNq5R4laqHQKxcoTPsnmIt3qT15byi8/zLn8PIrE0ymQ8HFaDcj
cNPDPC/bTDDhmg4NVWeE1InB4hjjcYaSeu9b8nASHHXTdo/2jjDB0fPKlSPG
yNJvmDMr9x2z6cjB9u0TJlAfsstfYqVhxhzvOg8NmqG9Ulz0c1QLU50r8Gfl
zYDSPFT5IeWRl/3lxh7TczPxQDaHlVU+4LX/mckHVZ0lWkvPRVukvvcq7v6D
n99jhdAiiej9O71Xar+/d12nDZ7GNTT7vqawlJvSU6WbA0kvh3LznIyquPTN
s/Xz8G2i0FjvyUL2rh8r+Ra2sPluPzsuZxq4JwtRvZCD3zRdJW39M5ArsvYZ
53JxwbVZEdY3E+MvJZmltB1irm5xvW46C0udbZaxPBdiyLHlUto0a0jaJxtG
utljcWKZPW/KbGRkN35h68fDzn+dXEqc5iKpVZtxdqUDImKPLMgRzMdm3js6
OZwPm5O3V/EEtnBROep9Yx0x4DdiNrKYgy7Offq+VIDcrPxV+zy4SE1F5a00
J4hV7PodAXbQhtkWbk0X4hozVGG5eiHWyT3lupRFYBsaK6/52aN0mPvk4zFn
RIa91VSs5+FJ296jNZkuOOXhdz4m1AF6Sdvv8WtccUO449iJWD4yOPJXYa2f
W2H4cmu8I95MN7CvCxQhL6slwjlGgI2sB/rOxyIkZsSxJelOqG5aN70lhIA3
nkwCP3+wclfUp6gI2rK/zis8tQjBJ5tl+dvF2HQwitVX5IzM1axd5zVi3NG/
GFYVuKDK4oZRQIIbzBvlpnYbXNFebP6wc9gNLiFjXRVdrlBvZl99vtMdy2dq
f6lZL8IgP8FGPuoO/2fruUkqEdRV39913UtjeUxC29QtBEHbtLLYNBrl1k+P
+kgIbllsIiUyGjaNvksyogjOJ4kuWR2koeVZ//R2O8Ea0d+JH4/TKPunLr0z
gaBWaT///gUas7aYOlw9THD6yu1kKUPjdWhpBkoJPgYLBMV/0ogwniFOUxDE
U2d6u+tpNFWl9V8vJ/CPlAYENdIosQha51BBoJ9vZuv+kEZ4u5ZvVksQI49o
pl7QuLPGu+PpPYInXzUcWNpHQ6wvP27ZQuA75kynaGgUKy291j4gWBBGFQ+8
pCFjDSj+ekTw2FKR0qalQZpy9iueEXg3mAtNRmgU7h1ze/GcoCJZpvYZo8Hm
bx2cqyY48WhtYI2eRn8mHXKqj2D0UK3h8CcaIXSRyT0NQTSxqxFQHqjvm3rb
aJCgQ50dHzXJA6KzSbuXvSJYcfoDp8DYAwW+PYI9rwn+A5ayAjY=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Photon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Compton\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Photonuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.707775154196404*^9, 3.708288699384252*^9, 3.708289132454711*^9, 
   3.7083440159996634`*^9, 3.71035062726978*^9, 3.7103507648687773`*^9, {
   3.7104999975458317`*^9, 3.7105000050343943`*^9}, 3.710500090563671*^9, 
   3.710500446215251*^9, 3.710500578854472*^9, {3.710501135635563*^9, 
   3.7105011526186132`*^9}, 3.710501190757636*^9, {3.71050131163406*^9, 
   3.710501325006729*^9}, 3.710506823743883*^9, 3.710507306070498*^9, 
   3.710507730555719*^9, {3.710514973072543*^9, 3.710514999882174*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"electronall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron", ",", "electronpauli", ",", "electronpauliflat", ",", 
    "electron", ",", "electronflat", ",", "electronbrem", ",", "electrondpp", 
    ",", "electronhad"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"electronall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaselectron2", ",", "electronpauli2", ",", "electronpauliflat2", ",", 
    "electron2", ",", "electronflat2", ",", "electronbrem2", ",", 
    "electrondpp2", ",", "electronhad2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.705886294227656*^9, 3.705886309689898*^9}, 
   3.705886354455186*^9, {3.7059295081654882`*^9, 3.70592952681656*^9}, {
   3.706591208668486*^9, 3.70659120946497*^9}, {3.707578151211833*^9, 
   3.707578154097561*^9}, {3.707578534107463*^9, 3.7075785360290823`*^9}, {
   3.707770599686041*^9, 3.707770620060073*^9}, {3.707773274966692*^9, 
   3.707773314613207*^9}, {3.707774917389535*^9, 3.7077749200210876`*^9}, 
   3.707775155723225*^9, {3.710500580655548*^9, 3.710500580781083*^9}, {
   3.710507723168262*^9, 3.710507723303005*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 13.815510557964274`}, {
      18.420680368020108`, 13.815510557964274`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxF0Xs0lHkYB3DkloRBNMTc3pdxyTuoTqtlnlNWRthk2bOphq7URqLYMiIH
Q5HpJkVjBqWplJTr6liEyopJRK1cKnKNxp1p3z3H2feP97znc77f5/m95/fS
9obsOKCkoKAQhD//vYcXSnozLBbZEd3jUQwyBXiq/Mfjdovst3k1kSNGFNDV
8RO2cxbZh8hH2jwpFLhFtkmu9F9kk2/a3S9gUKDZupWblLrI/lI+XxFkTQHE
m7qCNrjI1nyTYPi3IwUahaUB20Vy9kQqSeDiT4HUzPDEdjUF2JwQofcthwJd
6/PWbTipCG4FlVibLhX88+tUHAXKMDKw0b4jjQpKnCvPdSLUQInpO1cho0K8
BaJsc0MDpk3Vte950UDfiaSe/nAl9F6KE5dm0yCgyufMQVcdUHF8ubOhhwZ3
FJdtuNVOgqZ8n95iKh0UO1UPurvrgbbAJvKCDx3cpIe9DLv14XmWwqHYJDpc
+8ij8X83ACvbeAV5CR2mUvoPc7sMocCa8/nrBzr89GthiF8IGTYHcpK01BmQ
W9IyUvnJCMRdncP9lgxYbifaXvfLGqgPU1Ifc2MAt7E5+FuvCahGFaYKjjCg
dtFXNdGXAn3RajFb+AxIuX3znjCcCgZP9jbczmOAw+6gBk8HGlxWCTWcqmJA
yJ4P1MIJGtQkL3yz6WBAVohKe145HXodVq7ZOMEA78a25x4nGDD3zkc5SR0B
zeLvBa7WCJQ72LXFmiBQ+eDt+JsJBH6bXbD0sUdgSrYr1OAeCqsaS8f7XBAw
dxN4fgk3gy+t5f1b/RDoHjwWGMIyhxLmln1ZRxHIXJ0f7jpgDlvkgztmoxHw
8r3QVfSACf80/8ixECCQ+oEWLw2ygE2jz2oFIgRqIvcnxdlbwtB6J3bDIwTm
b8rPJM5agsbDmi5KDQIVOs5FTo+swC+mfXykBYGwiz84809ZQ0auxJ7fg0AR
t5MUv34tRO8JLcsZw7+3TNrSOrwWuK9rnaYWELBFTo8VF9nAqHNmfNwKFGQd
TRz3oxgUbUvdumE1Cl9N02X8Yxh0B4DVedwj+7jCZ2GEB/PN3ZQiiP7nkTGZ
0ykMbB3Id/tw99mVCk/zMDhldqgqnYxCd0SMW2kM4fd/uk7K4jCw5PboeRuh
0KFIyrZNxMBkcihShudtLh1uwckYhO3XcjYwRkF6TjQpSSHyV81B2f1pGGyf
w1RP43njKrttyGXCz4TV2VnXCT+18J4yEBGuCDYWeecSLi3q25Z2G4PhKPm5
qyYoPJ65O9UowSB1b0Q0irvQMVy0vICwpF55+uxjwrleV9wXyglnX909vfEp
BkNL+7LeoeITf2HgkBAUomGKwnXqqPujWsJXDxRPj9bj96H5wjMW9yVJtNjq
JeG0MRePwCYMUto53vO4z6/TnsltIfYn/dEu7mnFYF1yf+wsBYWEp0IP07cY
eJFsSdFUFM4uC5zZ+Q4D44i4O5F4fsaVlZPeRfSjUmY8Wnvw+1jqR0qrZnQ+
EfkJw6QcjwEMzIy14BINheO7vDyThzB4sfnhPoSOQrCIPFs3ioFHwlCaKp4f
+dyTs2yCcKCVxBMmCe8/dnw2aobYF/DEIbdsHoOXS/v2zCn9PCUn8vvCT1Fk
RRb01PHBh4GCdTVHWqLE+j+XfLxv7qvMAmXx+63l+DxTTZcnU2FB71L/lsVJ
6UU1Yh5x7zS3Xc4Cb3GZZBJ3TrAT75UGYbpALD2qSTi7SJWpqcWC6ppQniuK
gmnbYZ5EmwXf1+pdKzZDIXOmSepKYkF5xkDnPJ4bGdsz+3UJZzim8+L1WSBf
6q/2n5cyDFhg39E1cgPB//9ZLrPakNivn1fD8ycT8xfrzV/LjYi+zuA5ZtYa
4vwLml95m0wJ/wvB2MmI
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDP13hGdvUVB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AOtzU8M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIGD9fuUhHMLmB0edK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AEXub2M=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0fk71AkAx3FESMwIyZExh9uYL+o7Qr4ftZVlG11WjodCNbmmw/3ooFxR
IVLJaps2HkZrawsdSCVXT9SGlaTsMsk4thybsO0P7+f1B7yZQaJtexTk5OQ2
f+t/29c/jNLJKHYR8vU0C0aGqN9PzF9MkiVSZRFqYeZaUsr20su0dbIsalg8
97hmjZQ6YFI7z5JdpkLp7+N6U6UULczeUUsmoSI/lPUzmR+ot+qj3mqy+1Rs
oXOlxGuY2hTYuldZ1kalLgR6NtSOULPKjpFKsl6qI/hlY0zTOFVbePPRYc4o
peWq1HpQYYqiqb9qtAuZot7oVAQ3DHyh/ATO7P05cxRtZMIjR7JA3dBdl2dV
oYBbH+lzBZEK6ExyaWR5LgbrTbBRbo8iup3K2yZdloDjI2FFJShDeufZmX2G
GujxeiTQ0ViCdi9OveQ1HTsEOht2Ry+F3oyeWKt9GXZ1+Bvl02kgu+4VOYq1
oVc61l9TR0fPeYcpImI5es0uNKpMaCLsqMxBJ2AFhsLvFXk4a6H9quBcDVcf
r3hf/ww+qA3W2FCXB8cQS6urlA/U62DWwD+hQtMIl4/7Nvup6qI0JXHV8zcM
0J7qjxs6r8CVzNBwkdQYLS+8VF6k66Hzn3B37w4mhP43Uvzr9LEoMnPlnWcs
CMqTPvfQDBHlU1Cc+ISNs47O0w6+KyEIjueKJRzc3KQdGH7GCIyk2EqUmMBI
f1/1uV4G/B54UC45puDfDnNyO2WMnv3qR8QxZsg6UhBCspnwtPz46zGROU6W
Hk81amaCp1o8es/bAqLcGd+JYBaUvkayRNstMd/HNa9VY4MRaK10yt0Kd1t/
rEuoZEPcX/dJ0dYa+2I1VFnuHKyMEXVNWXJRnXLC49E4B/KWk41u2jaY3ZYG
zywTWAiEexT+tUFY/dGFFo4pNqVOz9hN8HAs274KLaYQRtq07Q4nkMKIZf4c
YoYStuj83x8I8DTjTs6qmcNAemmvXqAtmh8qX0KpOX4LWash/8IWOcsy46Nd
LbDuYwRxTWCHuSetW68NWUAlKWPndIMd/BwKex8kW6LZ2H5WydUe/urmuzos
rSCJ2x7ddN8ep5JLK/54boXHbwMmHYlVKL9TVdGw3xpdW2bGhBWrINp88noZ
nQtGR+L4RtZqcMRvtx6RcJGhGtfUnbcayhdtnlIbbDDqIW9gqkni9ITj6q/D
Nkgvij7MTiGhpNrpJU7h4XqTXYBFGonuArO/vNJ5ePxpzI2XQaLcNP6QSiYP
cu6hRk6nSWz5zvBsRDYPsVMBzdvySVw8FtTEL+Rhr6cbI/kXEtypUce2Sh7W
yxu09j8hsWNA2XjyNQ+7rLtvDz4lYXLI50ZJHw9HvfOvjDSTmJErd/Z9x8Pd
ClrMzDMSRUYCn7pBHux8FZn0ThJSn7zcjG8fjG/JYqhBEmuF2QpnFxFw6Svb
vUFKooRX871UkYC/qvAHj2ES9Ol32a6LCVwIfM/0HiUxkGLP+KxCgLa0qy1y
ikSauNPJR4OANT+vKmqGxHjoQvJNGgH3oK1XE76Q8LEzb1HTJJBa3RqbOk/C
+mH8zlotAtcG0oOy5PjIT79arKtDoEFj4+ZcBT4WPFsHDywn0L9mkcMFRT6E
up+5LboE5kPqWT8t5qOjzzCarUfgP6lyEmo=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx3lYzHkAx/H6RcuEFElKc3TOqNFM3348Yn8fFa1jskW7PW2PVJqxGhSV
JLvsVs6eEKKLEXK062rK0YaHNDRlOkxpDSUkOUrzRGmatX+8n9fz5kZvCIml
TExMfvjW/+aPXbCLK6dw032o3sTxAdPhH57gvZWCVZ1kFdvyIZM2dFU6cS+F
arpb+WFcLWN7eXzE+zwKSSfSLapYauaKTBb88DwFJxYnKmtMHVPK1LcZblK4
tzvrc7V9PVNi67NaVEchYezXrBHhI6aghtp89COFmFFxuorzGibTrahASsxw
1Wwhi9/QyIR3NXdRVWYIoYZjLBxbGErm95tvwyjsN8psNRXPmRDp9Auln80x
1sC+VZr0hlmZvqNxzVcWCueE/R3kp2cG+TXC928noDGjU/ozd5gpzxEEWhy1
QsRto/XjUAouJ1W6cUcmwVfni9Zgc/z+lDXQXmWDD8G347cXs6Bo+8f9mM4W
4iBXbW/7BGx5E+hX1WKHPlKYXrjWCnN5yTrlsD3K1teyD2dPgjJua+Q0w3R4
XtMoBrNtsC/+4GX3yRzs90w97XXTFrys4yh35qJSeujukqd2yBFN9R/i8VB0
MUPV1GqPoZ7ozBLaCXJn+2VCE0fMFdrNs5jtjJRm/2epphxEN35nGkVcUJQi
PqkxcLBtn2o0Z6Errov7z2Rb8rCpXr/t8AI3XExks0dbOiHStZ9ODHdHvnp6
a6eTM2a28w0Ba/mIy1xRVObtgidcNa2WCWCjGmjxFbliyxZcrkydASU7LsQj
wA36MM7xmK0e8DIuRlOAO5bnzc4bTvZENmJ85eCjpI+nHdkpRGeuZPP6YAG0
mpSMisyZsN5c7Or24wwYojU35BIv0PLaKYtWe2AbN+9dWP23716ZypV64uNE
E5eqpSJMUwl6eqKFiLB4ZGh5LIK+UlXATpqJ8gfLJ9aFitHs0N2ePscLFjnz
7ya3i8F/rc0RVnshJKs27dgab8S3r5IES0TIXGIRn9vljVNFJ7BMLYJycpnZ
4gSCJtmiZtOfxGhUWDe09BH06ksU2VoxOiLHn362wQfGKyeTjqzwxlv3BLu8
Lz4Yk2b+NljnjQ7lnhqvFBrGMZyjbyIIgmL1aWtTaciv7ZbwIgkqJ68Un0qj
0SbrpyKiCHI3iQptd9BQ3r+/7lEsgUTUunFkN4249HX+5esJrpe6OKrzabQY
b3z4czvBgeLbibJbNC4OhC5gnyIYCREIFHdoOJy5NRR2hkBOHXredpfGnlD+
pYNnCQKjZIuDVDRiy4anmf9FYHCcwPFpoGG/sbj3nZLg17xfaqlOGjvf9+bf
qCHQLqrePvcVDX1BeLD+AUHAoJBO7qIRvfSeuVBNwA6jFN09NOZdyE1QaAge
25xL1uhp9K/5PnDXEwK/amsP1mcaq6aeHb7zL8GlxLQO/0Ea9TVWV77qCPY2
LVtaYaBxzvWVw4YXBF/+uG7aZ6QxRRvUePYlgVTsVCGgZiE949rOF68Jmjv2
yVePmoVPhDfPoZtg/oEBbpH5LES+3PsptIfgPw4O/eg=
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -6.907755278982137}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-6.907755278982137, 13.815510557964274`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {13.815510557964274`, 13.815510557964274`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-6.907755278982137, 
      13.815510557964274`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.71051500794175*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.759322600806605*^-7, 11.512925464970229`}, {
      18.420680368020108`, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
CVs6b9l/wLHgffr9gxaD0sV2tP8FcSQALw==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIHDwcXe+dddJRwedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AEcqbL8=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvVJ1Tpu1nIGD0dyUX8qdDAcedK3vmKaP4It/ONT1
0QHBb9lbxTA5DcGXWjlJcFsngq/4X2qDxhoEXy3C5EDbRQQ/9Pza7LQvCH6T
544OQylDOF9Bz9jYxx7Bf27AV/kiEcFfa1ZlUNCO4M+JcmuuXIXg/3nRlHzp
DIIfVRWwVewTgv9Is27RHREjOD/zjg1jnxWCn/Az+21fPILfaPK7RLAJwV9Q
JJ1XvxzBf3luNlP+KQTfQG8th9cHBP/Fd705JaLGcP7J+wKnFSwQ/JWnmrN3
xCL4my6HLb/YgODruM8qsFqM4C/Zm7e67wSC7xa0uDHlNYL//GXGSVVBEzj/
x+t588zMEHxjHlP+kxEIfo5+zEe3OgT/fMHjPLeFCP4imduVUw8j+CWnk7+d
f4Hg58/w4evhNkWEZ8ax6caGCH5P2II9MSEIvsL6V3lXyxD8TVzHJlnOQfDz
WhiD5Pcj+BqM55o+PEHwg19wOQpymcH5y98un7VZB8H/9fVqqmMQgl8uk3Im
oBTBT1mbdGD9dAQ/wPGT6q89CH7q54dqx+4j+K4TJ6sbfUbwVfVdNeaxmcP5
AO2Fbis=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
JS3xqCbxNxpvNMM=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 1, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
QEs=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVx30w1HkAx/HtpzTZ1P5IEmp3Wa2N3d+Kb3sT9uM5iZOYcT0Zwkq6PJSe
trs8pqNrSk9Wp1NdpuKudMtVHn5OIiQUylWoudvkumraY1Vb1/3xnte8BXFb
IxIoDoez/HP/WzojoECQQqE7x0vbdIZmR/zWpC3ZQ6Hqr2pWUUqz6ndXE3mF
FGK4poErimnW+or5upcaChbMVx1rC2m2WqVa1X6Rws3IyvAtOTRbqewaNN6g
0PrcUHhvN81WWHvEy+9QaFcHtH6RTrOnWqkdJ19RuHvuiZdpLM3mLyo7lehu
gkE9b/Fpb5pdo7uvoxpM8Pro9mk9kzyWUvl+s6xnKuz6vK+7p/LYiET7S5UT
phi9eCbIcG0WuyE3qzfpvRkeFXnzPWvM2EnnVunLF7PgqzM0194yZWuKJUHc
kzTujibHf59FsaIzbY9nHrfESMn6r+dyjY3fPjIbH26wws7Lkea3VPrG8sF6
ccljazzbSue1P9Q17noe5NswYIMAKjvNj+5u9BRmPtZ+sMVYSawP8e5Vajfv
iZlvtEf9vD8YpXBUWZR65Ip4Dh9jsZYV773+VQoPnkaNowCaQPXCpN+NymL5
PL93QiFo7Y82/oMU3o3F5VcQB1SVdThNiqfDU2rjxVU4QltxbkqBlIu43ulT
Yt1FCFXE0EMLZ2NvUds0fqAT1vPkR7ZcpZHRpd97LGARgo8eyI6utkSM01uy
bY0YAv98vdUjK8iGnY3+yc5oqn27r/a9NR4KOkmnSgKrZQp9y7gNdu3Clbrd
ixH1gj963s4O+mj+6Y17XBByYfim3n4BVmsUmg+Zrph6vGB9sRkfFW+E/R/3
SxH9Mr3kmK0A/d0782rzZdjf2bY8bL4Qxrju6ymhDC41vVakSh2wV6D5O7rr
83vnnlrOOOIVjyNqWCnHIftwc0tXEdZx7xoH+uTYZPFPQ6DSCTW3V/PuRLnB
/tDEM0a5CNxin+bMYTe0Cu4F50aKEXGwQ12StARRc3V1t+OdkR/CTT2hW4L6
I4lnW+Ik0M751WRFmjtsRb+1SzIXo7fcomfgjTuilNsTAne4YCTG/KcnWz2Q
cSPZPDLDFS/EaTYagwfyQt3G23OlGNF+18rsJMhQJUQYcmQIS9Crk3cThN5S
1G8ukKFuzga3c2oCZ9FM8VCRDCcy5D9YZxEMPa02thyTIVT+IP3jAYKQDZwL
xRUyXKsULegsJXCIKv0k7ZDh8Fl2m6qRILk8qd9tBoOPERJJeRPBQHhvYQqX
QQp1dGiwmSCA4+lz3pxBUKxqRVgbAT9mdqWNBQPjgll8jx6CfruaLI4tg02a
tR3UMwLfkyauXS4M+oNb9nn+SfBL0Jan02UM/CelJFNHYD/Rf8JHzmBhNFU+
OkZgiLpIaT0Y9FldyOzWE/xsuepBqTcD3xYLF7MJAtvm6wf7wODyNvWI3yTB
gXRHv9l+DArvfbmy1kgQ3zNRlR3EwJB9bcqbTwQ9+2I31gUzSHRzqJVQS6Fk
OuaNhzC4P1KUEj91KaqG3LtkYQx8Do8LykyXYv6hspxN4Qz+A8xG8cA=
         "]]}}}}, {
    Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.9210339996043925, -11.512925464970229`}, 
     PlotRange -> {{-0.9210339996043925, 
      19.3417143676245}, {-11.512925464970229`, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.759322600806605*^-7, 18.420680368020108`}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.759322600806605*^-7, 
        18.420680368020108`}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Electron Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 18.420680368020108`}, {-11.512925464970229`, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Bremsstrahlung\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Direct Pair Production\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Electronuclear\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7077751564986563`*^9, {3.708288703646954*^9, 3.708288706662043*^9}, {
   3.7082890846611853`*^9, 3.708289103904118*^9}, 3.708292241078926*^9, 
   3.708344019348248*^9, 3.710350767435655*^9, 3.710350878845716*^9, {
   3.710500000577157*^9, 3.710500002830846*^9}, 3.710500092736535*^9, {
   3.710500299780178*^9, 3.7105003122443237`*^9}, 3.710500448121483*^9, {
   3.710500573631678*^9, 3.710500584754574*^9}, 3.710500653235572*^9, {
   3.710501132157668*^9, 3.710501156335404*^9}, 3.710501206751102*^9, 
   3.710501330586116*^9, 3.710506826231454*^9, 3.710507309891577*^9, 
   3.7105077243157873`*^9, 3.710515008451922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nucleonall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon", ",", "protonpauli", ",", "proton", ",", "nucleon", ",", 
    "elasticnucleon"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nucleonall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvasnucleon2", ",", "protonpauli2", ",", "proton2", ",", "nucleon2", 
    ",", "elasticnucleon2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.704513803952091*^9, 3.7045138230540257`*^9}, {
   3.704513948536606*^9, 3.704513948814498*^9}, {3.704653721000185*^9, 
   3.70465372112542*^9}, {3.705885699054138*^9, 3.705885718124003*^9}, {
   3.706591220601418*^9, 3.706591220745357*^9}, {3.707578161324291*^9, 
   3.707578163393965*^9}, {3.707578739435869*^9, 3.707578739881011*^9}, {
   3.70777326604653*^9, 3.707773268884601*^9}, {3.7077749261809998`*^9, 
   3.707774950189661*^9}, 3.707775158698888*^9, {3.708288718620987*^9, 
   3.708288719939405*^9}, {3.710507740401231*^9, 3.710507750424079*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 16.11809565095832}, {
      16.11809532201759, 16.11809565095832}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9a2x3u4iFqgw29G0hfbSs8Pql0X/5/8C13VYug==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz4UjY66x3YUQLSD/pmB
7Xw/Qfdr+wJ+FEAxmtOHQu2MP21hSTw+hRRAcCW+/iLtnD/FNQS+tJMUQA9r
MzoT7aw/dt55waGwFEDfDe5XC+28P9cvZch76hRAR1/LZgftzD+a0jvWL14V
QPsHOm4F7dw/Hxjp8ZdFFkC+m7LDcyTuPxjLexNWOxhADw3VxjJk9j/jurpM
1A8aQBSqRqDngPY/JSIXgwEXGkAaR7h5nJ32P2aJc7kuHhpAJIGbLAbX9j/p
VywmiSwaQDj1YZLZSfc/7vSd/z1JGkBi3e5dgC/4P/gugbKnghpAta0I9c36
+T8No0cYe/UaQLpKes6CF/o/TgqkTqj8GkDA5+unNzT6P5BxAIXVAxtAyiHP
WqFt+j8SQLnxLxIbQN6VlcB04Po/F90qy+QuG0AIfiKMG8b7PyIXDn5OaBtA
W048I2mR/T82i9TjIdsbQOBtUduMsP0/GNPZ0eriG0BkjWaTsM/9P/ka37+z
6htAbMyQA/gN/j+7qumbRfobQHxK5eOGiv4/P8r+U2kZHECcRo6kpIP/P0cJ
KcSwVxxAIGajXMii/z8oUS6yeV8cQKSFuBTswf8/CZkzoEJnHEBWYnHCGQAA
QMsoPnzUdhxAXqGbMmE+AEBPSFM0+JUcQG4f8BLwugBAV4d9pD/UHEAwr/ru
gcoAQDjPgpII3BxA8j4FyxPaAEAZF4iA0eMcQHZeGoM3+QBA26aSXGPzHEB+
nUTzfjcBQF/GpxSHEh1AQC1PzxBHAUBADq0CUBodQAK9WauiVgFAIVay8Bgi
HUCG3G5jxnUBQOPlvMyqMR1AjhuZ0w20AUBnBdKEzlAdQFCro6+fwwFASE3X
cpdYHUASO66LMdMBQCmV3GBgYB1AllrDQ1XyAUDrJOc88m8dQFjqzR/nAQJA
zGzsKrt3HUAaetj7eBECQK208RiEfx1Anpnts5wwAkBvRPz0FY8dQGAp+I8u
QAJAUIwB496WHUAiuQJswE8CQDHUBtGnnh1A5EgNSFJfAkASHAy/cKYdQLY0
Fa3/agJA+xGQcUesHUApNWJW
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      16.11809565095832}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {16.11809565095832, 16.11809565095832}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 16.11809565095832}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.710515019525516*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkZelK
zobkR7FHlOJQbmwe0zVZw9pk/aZUfgxZjyz6dQ39sF1XrGPtj9fj9f+TG7Uz
JJoyMTFZ+b7/X2axIpebQOHs2ieBazIZGPIPT/JOpWDInfCUFzKgmjgXY3OY
whHf9c4yDQP29dYRz9UU3A1n5rHqGfhRoVh3s5bCda25jeEiA1rfO/eMv1K4
lJVYyu9moMZeuk10m0JzRC/v80cMlLdSe0teUqi3qpJenW6ObNeT5TESM6gT
PtpUtMoc4boeHdVihkSPPd8Je8xBKfy+9Omahg+0D2UK3QyExDie1r5hQHH6
Qly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZymc8r89NloPCoIYpbMBhr3
u3CrbOH8TduA1XFb1F11uMDT2OGr+5aGwRY7WEyF9xpu2ENz74Jb6YA93I3W
M+qesZDyLMiv5S4LZswSbs/D+ZDxlAMN7+bjesD15nZzNhq2p8rnGR3BaY1e
4DCNg/xdRfVucznoyliqOcfigldwCo0LuVCcDPJaLuDhqMjBf4LHQ7/fRfFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbH7jj6teIUrfn5QvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUN+93R8uhZ5VB6R7Q
h3FObU31wJL4tq9fpC9CqHqx+p1yEUpOD+blqISoGeP1TeYIMUq1X8sr8ERf
576DTdmemJl0ZCk30AvGqM5fEtZ4oXJ7tVjc6YU0rno07I4XOILEbex1Iry0
MXFuWS1CEaun/ECHCBHMDuPdXhGmbKv2VISJ0Xgj1Ob2Z2Js7HbNLeoXg3l0
+RXloBhnyux8ZFu9EVLQriqN9cbr4lP6yBFvZAczd53QeYO//oEuIl6Chrk/
ma1KkiDMMTd1ll6Cbs2crrtjEuypfbqyIlmKIbn1t3/ulCIrdujD6r+lGHZL
YqnfSlEgWlEoTyUYajjU6rWPIKsl0tcwQbA2Wq+K308wtqNN72kkaJ4bKa5W
EcgdxbVxUwQndosq7DMIlqqm2w2Y0Vgj6v9iMo/g1RLt8BUrGue1zuxbZQQR
DePFhWwahVUXkxW/EUi0x0Y9/GhMhggEmksEmk2TmpgAGgnUsQf3rhDMYsZu
qAykEbRFsWptG8FwnM9l22AaRvZMjrSLoNL14YmJUBpx6k3t1CMCqypP/7Zo
Gn0fX0uXPSFICSl9axpLI2BcSJQ6Ap2p2Q8+8TQWhFGav0YILm/uc6hLpNFr
972yU0+wj532ongvDb9rczws3xA8uf20qiOFxtlk1ZD/OEFo2qcbLVQ0Dv/+
yeqm9w7C+05XVek03maeNx1771B2uCClMZNGjNipSUDRsPB5I3yVRaNnKD9h
2zQae4c3P+bn0FheaOCeZNB4XHqzdGsejf8ANn7s4g==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz74v8n2r1jgP7SD/pmB
7Xw/WhG1/YmS4D8xmtOHQu2MP71ioARkzOA/cCW+/iLtnD98BXcSGEDhPw9r
MzoT7aw/BEskLoAn4j/fDe5XC+28Pw7WfmVQ9uM/R1/LZgftzD8j7DPU8JPn
P/sHOm4F7dw/UhiesTHP7j++m7LDcyTuPwjYGV+RPvc/Dw3VxjJk9j84lxVE
ipD+PxSqRqDngPY/PTSHHT+t/j8aR7h5nJ32P0PR+Pbzyf4/JIGbLAbX9j9M
C9ypXQP/Pzj1YZLZSfc/YX+iDzF2/z9i3e5dgC/4P8Wzl+3rLQBAta0I9c36
+T/vmyS5khMBQLpKes6CF/o/cWrdJe0hAUDA5+unNzT6P/U4lpJHMAFAyiHP
WqFt+j/61Qds/EwBQN6VlcB04Po/BBDrHmaGAUAIfiKMG8b7PxiEsYQ5+QFA
W048I2mR/T9CbD5Q4N4CQOBtUduMsP0/BfxILHLuAkBkjWaTsM/9P8eLUwgE
/gJAbMyQA/gN/j9Kq2jAJx0DQHxK5eOGiv4/UuqSMG9bA0CcRo6kpIP/P2No
5xD+1wNAIGajXMii/z8l+PHsj+cDQKSFuBTswf8/5of8yCH3A0BWYnHCGQAA
QGunEYFFFgRAXqGbMmE+AEBz5jvxjFQEQG4f8BLwugBAg2SQ0RvRBEAwr/ru
gcoAQEX0mq2t4ARA8j4FyxPaAEAHhKWJP/AEQHZeGoM3+QBAiqO6QWMPBUB+
nUTzfjcBQJPi5LGqTQVAQC1PzxBHAUBUcu+NPF0FQAK9WauiVgFAFwL6ac5s
BUCG3G5jxnUBQJshDyLyiwVAjhuZ0w20AUCjYDmSOcoFQFCro6+fwwFAZPBD
bsvZBUASO66LMdMBQCeATkpd6QVAllrDQ1XyAUCrn2MCgQgGQFjqzR/nAQJA
bC9u3hIYBkAaetj7eBECQC6/eLqkJwZAnpnts5wwAkCy3o1yyEYGQGAp+I8u
QAJAdW6YTlpWBkAiuQJswE8CQDf+oirsZQZA5EgNSFJfAkD4ja0GfnUGQLY0
Fa3/agJAynm1ayuBBkBHEGxH
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Nucleon Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7105077510641537`*^9, 3.71050809481042*^9, 
  3.7105150199768467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pionall", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion", ",", "pionpauli", ",", "pion", ",", "meson", ",", 
    "elasticmeson"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pionall2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "canvaspion2", ",", "pionpauli2", ",", "pion2", ",", "meson2", ",", 
    "elasticmeson2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.707774953653801*^9, 3.707774970470236*^9}, 
   3.707775160738758*^9, {3.708288762336705*^9, 3.708288763886136*^9}, {
   3.710500387190267*^9, 3.710500388107522*^9}, {3.710501409448793*^9, 
   3.710501411172181*^9}, {3.71050778547287*^9, 3.710507795473349*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 20.72326583694641}, {
      16.11809532201759, 20.72326583694641}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
//LN/WHOF5g0/tevE7UincSM8/8BSpAhfA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxFl3k4Vdsbx4/DOaZM5xhTGUKGEnJORNZLhkpUiiRRKrlRSVLGhFCUMUKD
SkS6LgmZu0lJhgilTJki495SoeO3f8/jufuv/Xyed/qud71r7b0VXE7bHKNS
KJR/uSiU/z8vK73+UyjHQbFxHz5xO49WSYqp+pxTJpjdPnwvYaRqR9DnQ+vN
OKg4uHL9/drBqpDv1y1HjnLQxYovFMmTX6tK7E3YD8I4KP/Lovipnu6qyVc/
5A9mcJBnldznrf6fqlQ2ZAtK1XDQr4SsSN/ED1WO6Y6zzf0cdGCFX2yqVHNV
vJBo31XuRVTWuGv7t9HXVW/8Xtabrl5Etv1ybaVbqqtYtur3SlwWESjeVjEV
SKzy+LcryitkEaG4sSbuytvo/vo4n7X3F1Giwkbb5QpPkbDAL8v0vkXUrLZ8
vMy8Bt0vs5V9QqHA+bg+1Wsb6pCRV57oVVEK2AWb553taUDePS7zW7QowL51
nv3OtBWJJJVPyQMFogepkx5b21DODsmhPzspoN/aihXodqDe53XNxacpMDTm
vKOkoRNZJWplauRRwNqd/7lnQi/6tv1qGl8VBQ6/jTi/1rIPhXENxA42UmCx
c1pOcKEPlZ5K9r87QfjHOfUWbO9HtsrTngEcCiT3xOWrjfSjqc/bXfcLc4G+
U6iXfMgAUtnG2cXU5IKDzhGUhxmD6MXiPvOpzVygGyT2LV9zCDkW5Rs0WHGB
+GxW/+bCIZSw+phKxEkuyDxfWPGgYBhROPXzc7lcYMtFGXl4aQSlFSpPd5Rz
QVpnQWLt2Ahiu18cKnzHBUbaL7pK944ij48670+NccET97b8NNnv6FNBSuZX
DSqUa917aR05hrz/wtOqDKggmD/Spd41hkTlreJuWVLBM/rRwSfrx5H5NUqA
nTsVFkMU6mYbxlHB8eO73+ZQYVmIA/fd6QmUixo7/5RRYXZul+kRg0mUJcU6
qt1Ahd9jMdn8oZPo1mvq+ZuTVKiu1clToE+h8DV3brnqcoOuOtAkw6ZQ8CKP
SqoZN3xrmC87em8K+Xe45zXYcUNcwpHgvoop5Bmh/6+uLzccWr/+VeDMFHIY
/jBMreSG48OHH/XYT6O9VQZn2E3cYPaWoYk8p9HO5Ptzf/Vygyxf4o+f4dPI
1MJT6D2VB1bK5stHFEwjzSzBDXcteOD0Srf+GCqGVC96lbfY8wCnIrxEUwJD
q/d9MqOf4IGnnuY3zNdgSJo3y/5kNA8Y6Au8ntiGIepxkyCD9zxgMSibc+EK
hhaMsnlPf+WB3xl7WHo3MfRTUjTuPs4Dhh3veyIzMTRW2/WAX5IGfsDdP/wC
Q0N3TNdtXkMD8dAVOvONGOrzeVzkqUcDxq/R69mfMdSu4lvX4UCDKr+4xF4c
Q82cHhtBDxrUZOVnnFzEUH27+RejQBqky3rE3xHAUXW4+OTDuzTgyytQm5HD
Uc5Qnrj3AA0kUw3UMsxxlFEpeSfrBw2Sso3Phe/E0d2kwDWf6XR4W5cfLmuP
o0Rzy00manTobHIMP+qGo+urCl6e20SHX7qm6bKeOLoyK22VbUkHPoO8jqjz
OArKHHIWPUUHhZU7r9y+jKMLQVYjWy7SIco1oc84Gkdn7Qq9zsfSQTtcVvxh
PI7c6CGXuwvooCZtduzJHRzZuK58nPuTDrvefY4aeYqjt7OlaWW8vLBDpaF6
fwmOTCLso99K8cJBzbz6lHIcbXiUcPLbRl7YZY94r9XgKFdP2+mnBS+oeK/i
GL/BkVJdozXdnhcWDibte1uPI/FRfi2lC7zwRK7gmn0LjqL9suQ3RPKCv0Wk
0KE2HPEImomZ3OSFbxE32UYfcRSQ9pVr9yNemN0U1ox34mhGIxhzLuGFiz8U
717qwpFH+cr+U294oWLXbZdvPTga2FHWGviRF0zfhHeofsVR28nZwrRfvGDj
k16kP4Qja07Cwxw+PjB6Phop+A1Htde1k55L84GtCL3r+QiOjOSawt+o8kHn
U6qz2XccFeV5nO/Q44MjdweL/x7DkSYIuA1t5YPP38qvzY7jKLM5y/6HPR+o
BzwNXTmJo1WHzbbx/MUH2WuVNilN4Shp+qs+05cPqOq51oLTOBIOCVZXvMIH
Sl2Gjq0EhzNWyWqn8MHODevmAzAcce6XCUI2ocdx+ws+HEfnN+xfsH7OB3e4
vhmfJ3jq5ezYwTo+yJ2bFKoj2G1vYpfHJz7gDZt+yiG4d0C70X+ED+T/rK+W
nsGR/bmmyqu/+eCSdn65FMHNtJN5Kfz8cF3bUnuB8N+aJJD+SIYfyivzH9QS
XK3yKLZYjR8sdoYm/7+efrHZpVp9fhjMtb0uQnCBRf+Ztm38oKzzL28MoVf9
Y7DLwH5+aMk+c2mWWM99t1V78L/44WrrmvPmBC//XbaF6scPTbGNLheJfsRf
2a8rdpUfzlQEl98j+iWw/KeSfCo/6BYlzj2ZwFFITqLE+hxCX2xmXAbR37lN
OnSjUn6Yp92fuUz036u+aXbHW354IvEu0YbYn9EDJ4cPdPJDpdO7PoFRHH0O
ePTGd44fLviI6cMwjvYKmT+PFBCADKn+5ZWDOHp3uz87ebkADAQ8s1cbwFF5
5aqoZ5sEIC95d0RdL45uUW5YTfsJAL/XyTKDT8S8xukYUaIEgI8/LX59BzGv
Cs2aImkCUHEzoJdJzGugiaDoujIB8Pl10DavGUdOYZda3OYFQG3Zu0SD18S8
pmL9KoKCAGPZb+uI8xGVf+THwHJBOJf5ttryXxyVdJtJH94kCLZ6NRprK3DE
0Bdw2u8rCJEfF3yPF+Do1Xj8yLafguAt3rXIl4ajtfsyKBr4MmgzrT3U7oqj
f09KMEaoQiCmMNfiegRH+8PCV2cxhODISb5TuDMxX/lu5qt1hKBbNoHDtR9H
PYLromXPCIFqsvSVue3EflQ/k1o2KQSOh8cDIzRx9Fvtteb4qDAwp5j+bj8w
NHHY7APXgjBsEx6ZTJjG0EDKS19JIREIS/flvBgn7j/+6hq0XgQywmtLVIYw
9GikxCH+rAho2A3rSHdgyC47J3zjgghs/LFh8dVzDGV6iktm0kXhfb7rTp0i
DKVHt7ppiYjCMc/pTRkFGEqq2S1sJi8K1wNd4lMeYyhE13r/KRNRsN9m873x
Nob2i1tMVoeLgiOWhkWEYmivFt3EMkYUNB/kHjkcjCHrHa8S25JFQWqF/rRJ
IIZMw7ZsGn0kCu7brk6vOo8hrRl0mVkvCnOHag4YuWNIQ3Sx43arKEyffhTp
6IYhlbWV6qpfiPjEp4OhxzC04qhhs+G4KJi1BeRPOGOI74OerKuIGGjvvba4
0RZD3FM/T05JiUHXcIj8AxsMcQSLq/3kxcDa86qb9C4MzWxhucZoi8FwSl+v
giWGep5q55fsEYO/g8svPjXGUGfTFPcWRzHIkHYZ8UIY+vA9z67hqBhckBnb
u3kzht6u1lzoOycGsdbdSbgehooS1C0Eb4rB4M94r29aGJoSvGzFnS4GiT9y
qhTXY0g9rGfPfJYY/Dh2xOL4Ogzd9k489L1YDDwzKNYi6sT7a2zCtb9KDF6b
Vk56qWJI9Ni2k59fi0GUdaNYnwqGwmw5vvUdYjAvJSnTtRpDlQ32wS97xOAs
J3WVuyKGfpk9DS8bFgP5iWWD3AoYcme7JTz+KQZbZT9O267CkI1US26UFAPu
h+5+GCiDoeiYtU9D5Rhw4FSZ9RFpDNXyRjz3X8OAlZPqGnulMKT/y6DWfSMD
9lTr/7OPeL97eSa9O4IYMHLh/pkT4hjK/TbVcsCCAZ3TD5IjmRiS//Swx3If
A7SF09GwGIYcdlOGtjgzwLFlvGMNwYl1DmMGxxkQ8dOPy1sUQ43Gz7ANpxng
Hvektl4EQ7ylIr81zjNAuPO29nqCQefE4uqLDJg8IrnjjjCG/HJqaCsiGCBm
lSgnQ3Chotwy8RgGfPCyeHZXiDgPqb6MZckMeJLJkNQhWJX5QZrnLgO6+qO2
Ny/DkEuUptxCJgOmLi84+BF8i/uK8szfDHAKPrxTi+A2/36NsSIG/ExyX48J
Ykh4ZrPOQCUDopIvUqsJ3upxU+9LLQP2JRY1pRAcMoAZfWhkwEu57tsXCS53
tDJ7186AH5EXzp4hePZDlmVNNwPyZSrsThOsZUW1KR9iwEbbm1a+BJ945Whf
OMGA7Xq5B2MIfrC52Cl3lgEn/HZF5xP85ZnYsQwOA1Y3x3f3ECyp6eF+i86E
PM2N+5cTendl1p5JFGZChmgJ5TDBV1cpXIiWZAKnzPzTU4JrkvyDwlYxwepK
/RCD6AdHuD0sQIUJmmuH1gYRrBehFeWtyQSBP+N//yD4zOLVOA82E5im2Glf
or855weTjxoxIeJyqRc/sR8Dk+iOozkT9jTVPn9IsH3vTM4OOyakGG1dyU3s
b7z9znxTJyZ8WHDYXENwfXN2saErEyxTxh/FMTBk9MKpZq0PE2Rq3rruJubn
gv7zt0pBTFDhhJZuIearIJ/5fkU4YV+Z5mgiiSHl+2+6liUxIfTUu6ijxHwK
P1bT/OcOEw4aWyreI+b319OrQXuymOCtmbl2bDlxHl/tkEstYQIvxzj5yUpi
PhqfnN78ggmjLrX4ajnivHUIV/fWMeGJcF75I3kMeY40H1rzmQnRbTsj/3+e
HDDt/Lf9TFBq9Q27poyhLfPxXKfGiHyS4z2WxPespJDt/cI/TBD0rXuAE+e1
XOtTv7G8OGQpKLdP6BD3p/4m3UFVcchpbTITY2EoxiQtLFJbHNrktowabyTm
b+9B5SYTcZi7z1fUYEDM+4U+V8dj4mB94Ff4dTPifFaNjPjkiIOu8zH/Jwcw
ZPhm+6blT8Vh9orkgTwnoh/vH1+tKBOHs0463ZWHifV/PanB0yAOi5810+nE
/XibjnnETYpDhlFr5cZzGPpmNTf5WFcCKM3Fo+LxGGqxOwA7N0vA+GgEz/cb
GCpzLo/FzCTgSITSaEMKhq6fCdLW3ycBc3vCO5/fw5DuDerZWl8JEI8ziFUl
7v+LXwRmeyslIL+Ck2nTRuzfo7b2A68lIP3xxeUfPxH99E4vbm+SAMdGzhe3
bmK9y9i+73olwL4sii93mLjvDQ8vFFMlQSmykKd4jrivbxVTY8wlYZef27km
RRzFHjgqsrlREnpb0yDUD0eRa9ZPFbdLgm6GupR1MI4u4b+bdXokQbbfoFkh
nPjeiIqJV52ShGGT2qT+OOJ7oqxUQpwhBXLyjHWN2TiSlhVb8d1WCtzYHSvW
fcbRvc4K1ZQuKUDlFn8Ct8ygj1SlikuDUpAt5tvyetsMEtW4uvvEuBSkDe+U
lto1g4L87fwM/kiBzMR4/ivHGeS4YrK+a4U0rP911uSwzwyScpI/regoDX9N
jMuF5syga30hzx53SkPAooQqR+IH8v1mYVLZIQOJdx0sXWZ/IENFn65nC7KQ
v8e0WGfsJ3rm7u+8/M9KqFXaLpid9xtFe8bnq4rLwz9j/woNus8jxWt3oUhJ
Ad6f6Z9cN7KAErSlt8wpKkKiLSZWuIKD5r67hGexV4P0xCk9tuEiMtSU2Syo
pwQ7je7sH2NQwKWFl+uwrjJcDPswxLlAgcDoNzR5cxVYuMjqduqiwNnGmcAb
ZmvgVkz7QNMGLnBWwdneDqqw1sI66XoUF6zvVftjekIN+C+Vls1/4YJPCu/Y
746rQ6pGy7YAZSr4+kJ+uZ8GDBwq0R7xpMKMvfzdI/5rwcwniZNbSIU9qXqp
Cz7rgK5R4tk7Q4WsacV2ToQmMA86zhjrcUN784XLxeHr4bv5vdtK57jhj0tz
qYeVFqg96exRfMYNgQqpY/aNWiDBxwmUm+SGSVGKcuUObYgR5dI6ocIDjoJN
fzratOFWfEhlxSEeKKrbI9pgqwP5dtonn9/gAcEE45c+vToQ9urw4K0GHrC5
Vh+Q4rYBNuhZiPBy0yDcUtAzeXgDOHi39NzcQINn4oXc28/owqPV3kcFj9Og
5R7jfce0LjRzwjbjiTTocxZ62H2aBbMePQZ2L2lAn+yO5/JiwZu0wRyPGhqo
B/0TrORNsrVQyCkLHxbULbHXrT2OJy6wYC6jIffTa+K/UkN5+zU/kktLZzf+
E8AC8+AO/r9radC97Y1yaxALXgu1tlx5RQPqpxTmbDAL1NCUnFAdDVTc3Llk
Qkne/tNw0uAyyafChbucIljANZvVtPUtDRIket9eusIC6hKXZOSXZESxYIPd
VgmdRhp82RCa+foaCyJpPtrX6mlAebk3cTSGtCvZqIQIxbPg2SJ/aUITDbb2
/TytlciC9ljH/ZT3NPDwrDu4J4n0j11MtfS5yYK2JXvhdQ/9lFQWFC3Ff1xp
tKb8FguOtTqc/dNKg4VcEYmeO6S/vGEflXqPBeU1ZxJj2mhgVl8wpfSAtJ9w
COu2eMiCLs+Y7AstNLg+YvvuRBYLupe44MKa0mvZLIi7LqKR3kmDdt7fWf88
ZkGpSxRVq4MGc0lvb7Q+YUH8kn2Vyq3Q2TySTZ6dPCNTwIKHwkonvb7QwNUU
ORsWskBVldPY85FG/EeJWjkXEf1e4r9dvm4KKWGB4m0+KftuYn6mn6o+LGVB
5lL8bPBlyTflpH256D6e75UskAlM77LppYHRXVVM6AWp10VzrkfrJVk/oqK+
Yc8rFqxeis/dcbvM5zULHsjjjTEDNGj+fCo7pY4F0kv5Zk5Acnk9WU96Tuxy
TwMLXmawa9qHaGB4pd+L2syCmiU+JP3skHILC7bEORQc/UqDsKxw660fSP9H
bHtD93aSp/bOS+V3kqx39g4+202yI9WzT6aPBYObuB/WfKdBcJxxk2E/C957
VEYbjtAgQ55Z4TzIgm3+z9TPTtCgLm8gJ2SYBc1L9gmjopsPR1jQIcKraD9D
A0ZjRPib72Q+9sH93t/HWbB9Kd5hTN1FeIrkIP+FndoYmf++QOPmvTMsaDFW
p1tN06A25a7G+VmSR1XPyKT+IvQt8aoYNe+bcyTb/OhrTFpgwcclPeEHUtVu
cFiQ8TKoOO0ncX5f2IQlUNjwYIkn1gj2xFHZ/+lXvP5SP5aHDZ9lFkrk52lg
N+OfeJ3O/i//FQfdyWg+Mr68emxblADpP6XyMOPKMvZ/9ZSuHVyMECbZHpdw
CBcl/aP3NxaGMUiurgoXCRUneUYZnbgkyYbOJVaN/llzUZoNau5bzeW46eA6
Geh5TI8NC6Kq848ZdEi1Zdcf2cQGpX77TV3L6NBYNqHsYsiGXqaUO8Yh7ifF
rOBDRmxYvWRnRzp/dgLS/87e5tgDpiTTFIzN7beSrBfxO91uOxnvMZ4/v3cH
aU/fc8JujzUb5pf0fHiumL97F6mPT/6z4C4bNkz4V0sckKGDYXiCq/Vekj3H
LF/ssCPjM2x4VljaE+vv2LOzlJcOH0vKfbY5kP7L5M69t3AkGS6vW2vuxIY0
5vlnBgp0OPt9MNz0EGnP3H2nz8SFzN9ZbGdofJTML7xKJBm5kv4mYa+nN7uR
7DN6cYfhCTJ/zi69rE0ebLi1xN1FU1z6p8j8jJXZjhs9yXjz0MPFLC826K1r
tG9Tp4PfiAxD15vM9/fOFg8dHzboL9n7nl19rXWBDfHyGv1KG+lgfWwm4IQf
Wa9c3EknI4DcD/Wa18NdQWR88lnt21KXyHo8q9NsdoeyYXxJj1cLD1/UZbJ+
76VTFTURpL+V9kcvzhVSf2mvsapeNBtUBV40OW2lg2rs464z14l5XOIkJJHw
OJb0554M2joYT+rxvPPtz6ob5Hq6rWye2ieT9Xb8KXOLTyHzPc9VXvUujdSn
4hjTSrtD1k8U/B2J0sl4apmLke990v/0iXd4QQZZ74sMO3ssk4zfXnfXSSWb
1FdygV/80GMyn7Lq2bqUJyTHd3wJas1jgyP2tSbgGB0oEea6QgVkvVPsf0bM
C0n9nwdl7gYXkfFbb4TuLS0h9RSZjvPPlJJ6lGbsqtZVkP5xD6q9j1eR/u8/
9m/e3Uz6/5V6oJ7aT9rbt70KNhwkWcDEuyB+mNRT8Ojm97wRUu9AusVK+hjp
H83rYbd6gsxfvbg80neKjHdzRS+SMDYcWFp/m0S2T/MM6R8Y0JA3PkuyT8WL
g4d+k/1apTSUFDhPxke17txR/Idc76+Q51zTi6TdVWd1sTp143/xH/qiPY7y
bPwvv3HcrMId+sb/9P0PnVusHA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwVxX0803kAB/D1E10mLZGUsc3DZsQ221fsVz6pricUq66jI8QiR8y51OTq
7tYDdTp1MdFLp/MSr3vRhZeS6qUHSspa9KSsSyvKQ7ke1HR3f7xfb25sang8
xWAwlv7n/4snL97DTabw7Sd+9N1qNgwLI9J8t1PILzqliDnNhnrsrwRWLoVH
GdEdK5vYsK+dsv6VloLnKqtl8y+xcUqpDLt2kkKWZ2OLVzsb1YEd901nKWQe
Sd5zRc9Ghb1so/gGBZUZJ2RDDxtHr1LfFw5RSHmg6SoYZEPDLz2aIDVDXO7q
F2MsJ0QY9Uaq2QwhA0PWbWucQCmDdsg7J4Jb5R4R/9gJ4Qnsqup3FmgTHhou
ee2MqJ926jZ9tITR0YWaP8bBB4+r3q/6rRGqkTo4v+WivkC4hFk4DVXmM9MS
J7nA7Xhrj9Vv0/HESkknWbgi56Hl295mO0wV7lmqn+WGsvvnBEU99uBUGmJE
QndkPV8S1NztAKuaPwaD+HzQvMyeuk+zMdg+r6nZX4C6zdujZ5nYOJkG07C/
B/K2/ForsOVgvZddTt5KIXj7j6HelYvXS3nWszZ4okA8c+EYj4e4V1pWVJQX
xgZiNRXEBdcq+hTM9DmgvR3mMee6wqq/2DJV5Y1Y3aQJMVI3SA7s67iU6oPs
vFZzzpfucC8/8eIiRFB1jGYfXswH9/LZE+oLIkS7vyEZEQLYjwRQL5eL4dPr
YVqU5IHPIWvj9Tox7nHbSbtSCH0KnyoMkyArC7VN2zxRro0JZD2QYHQd51jc
di/E7gurj4v0hUI7V/spcw6mVfX4iu75omKE1zW+2xtnu3RhtTFSdN3a+nOD
xgeKK9mVUwxSmGJvnUkOEaHvwsEyp80yZHO1L9d1iBCfE3nb8qUMQyyGW3Ow
GN0pF5lbkgjWM2+auu+IsSgx/+neNwT1bQrWjTUSlPLt3u1Q+YFZsKAls1eC
N8PUScG4H8L3X1cXbfJFwEBe3ArNXGhWMLccMfoipbJ97TJzf9TZnjZbniZF
Sfp3/R8P+ENXZtPZPSLFmc+3G/ZODYAhesqJR6kytJ3ryM3fH4B+QZqD9r0M
Oo2EETxDDkPdvquirQRt04P/fHJYjtD4UXXSNgLSUhfnWChHk22UpFxNUJ7u
7LBWK8cRlbjEfidBTufrH9tK5QgR300f30sg+6Xo65oKORqr3ZzaiwnKLI0T
dzTKcfD3CxnK8wRZE3ZFOvTIMR4uFJZdJHhWM8BSPJYjmTr0+H4LweoNa67k
GeRYEqNcHtpK4HNeIGY8k8PkZM2RdRL0qW9aGAflSNRGXqf+Jgh773jqNING
17LLP9B9BM0VGuUgRWPRB2+SaSTw+mrYUWBOw3kdVfZigGBSfcvu4sk07thV
Zt4aJTinSvpmlw2NoMs2XpbvCIQuepsmWxo1GWrDwg8Ehbp5rf/MoJF7e2Vw
g4lAJZ7mmzibxvtdjRNGPhP09m57fpxNI0Hi0iCk/BCa/7TkoTMNvSEveeNE
PzQFhipm8GgsOPiWW2rhB4+hhi9WudL4F7p964E=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz6PUyZ5bg0MQLSD/pmB
7Xw/6Cfh+uQbDEAxmtOHQu2MP0D8m3xbKgxAcCW+/iLtnD/wpBGASEcMQA9r
MzoT7aw/Uvb8hiKBDEDfDe5XC+28PxWZ05TW9AxAR1/LZgftzD+a3oCwPtwN
QPsHOm4F7dw/pWnb5w6rD0C+m7LDcyTuP8tngJVFyxFADw3VxjJk9j+WV7/O
w58TQBSqRqDngPY/2L4bBfGmE0AaR7h5nJ32PxomeDserhNAJIGbLAbX9j+c
9DCoeLwTQDj1YZLZSfc/oZGigS3ZE0Bi3e5dgC/4P6zLhTSXEhRAta0I9c36
+T/AP0yaaoUUQLpKes6CF/o/Aaeo0JeMFEDA5+unNzT6P0MOBQfFkxRAyiHP
WqFt+j/F3L1zH6IUQN6VlcB04Po/ynkvTdS+FEAIfiKMG8b7P9WzEgA++BRA
W048I2mR/T/qJ9llEWsVQOBtUduMsP0/y2/eU9pyFUBkjWaTsM/9P6y340Gj
ehVAbMyQA/gN/j9uR+4dNYoVQHxK5eOGiv4/8mYD1lipFUCcRo6kpIP/P/ql
LUag5xVAIGajXMii/z/b7TI0ae8VQKSFuBTswf8/vDU4IjL3FUBWYnHCGQAA
QH7FQv7DBhZAXqGbMmE+AEAC5Ve25yUWQG4f8BLwugBACiSCJi9kFkAwr/ru
gcoAQOtrhxT4axZA8j4FyxPaAEDMs4wCwXMWQHZeGoM3+QBAjkOX3lKDFkB+
nUTzfjcBQBJjrJZ2ohZAQC1PzxBHAUDzqrGEP6oWQAK9WauiVgFA1PK2cgiy
FkCG3G5jxnUBQJaCwU6awRZAjhuZ0w20AUAaotYGvuAWQFCro6+fwwFA++nb
9IboFkASO66LMdMBQNwx4eJP8BZAllrDQ1XyAUCeweu+4f8WQFjqzR/nAQJA
fwnxrKoHF0Aaetj7eBECQGBR9ppzDxdAnpnts5wwAkAi4QB3BR8XQGAp+I8u
QAJAAykGZc4mF0AiuQJswE8CQORwC1OXLhdA5EgNSFJfAkDFuBBBYDYXQLY0
Fa3/agJArq6U8zY8F0DJ1GtS
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, 0.}, 
     PlotRange -> {{-0.8059047496538432, 16.924000071671436`}, {0., 
      20.72326583694641}}, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {20.72326583694641, 20.72326583694641}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {0., 20.72326583694641}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707775161205503*^9, 3.708288764403833*^9, 
  3.708289255457758*^9, 3.7082892968292437`*^9, 3.708292244979699*^9, 
  3.708344025227751*^9, 3.7103508964247837`*^9, 3.710500107105405*^9, 
  3.710500388661186*^9, 3.710501170077609*^9, 3.710501339207707*^9, 
  3.710501411887267*^9, 3.710501564921658*^9, 3.710506830697893*^9, 
  3.710507795969468*^9, 3.710508126060598*^9, 3.710515028583988*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[{{3.2894072757057793`*^-7, 11.512925464970229`}, {
      16.11809532201759, 11.512925464970229`}}, {}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
S/N/9fWSp9ZmcWv+r3//BzzBUvw=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
xitLPfgoNq5+gRTxPhX/wvv+TQ9WtFttMH88zy78YCv92X4NjDjjY6psPc8W
TzWpCG5fA1N7LAcce/6xbRKrw9M818Lm5lENatQ/dqyFuN/V3rXwWKOrV7T2
P/YL+nOB7f7rYICw5bkz73nsupuyX7+PrYOPumQKngXw2B0uknfajjKhYvdm
w1/KPLbwSNtFSgAT7uMF3PmmyGPrRDw+rR7EhI58tpaM9N0SzIR7+RyQYevk
dYIJt/B0C7xoPPaV5RrbE0NJLimZ1H8czoRrtk4KZzB47LZt7zXqI4h4XebH
2PI8NvVHGm3yNBOmv3yfqyPDY2t6elMUo0jePmU8sj6GCTP47Bsr1eocx4QP
DxjotUjx2KmM9o9nzjLhAz4X5zwpzjnPhLTjzTJxIjz2z7VRd6sSmXCA1uEZ
JsFjYxV2lwaSSV3dRjNS8iITagnBA6OCPPbWjqmjqy8xoXC+u9xmKo/t4/dh
v+0V0j5lPt0i+BoTivD150k+hmnpTKjN929atFGrLIMJN94fYeZzuWxuwQLG
r0wynopxB5V6k2BX4qE1w2Vvrn46qn6b1L0co9u23GHClXGjzVHzXHZSv/0n
r3skPz2hVZKYx4Q/poJWrB/lshtFZu49zmdCHb8y7MEklz175ePl+gdM2MTX
F2tmRE0+YsLvfDZ9ccRf8SkTfl0+uujrEJftYQZcjJ8zoc+bgptRE1z2uXpp
K5dCJvTm80O330aRxUxoFehx07Sfy64be6Z9p4QJa/n+k6dj5N6XkbqS9G7B
wVdM6LB7UWRCN5e9MUt7XPI1WY/bqtlfqyvI/HHl1Z9t35H+BZY3SoOrmLA+
1tYwvZXLrm3xzUv7wIS7+fE4XvBqWTUTWvPtFWZlYn59ZsLby/cssP/BZRuf
7Qyg1jLhLT67Krxw1agj9vFjsmJ+B5cdfS/WemsDE+bw9VzWHmPvRpJH7ebk
nzSTbBCYOTHZRsZ3ovp1KHYw4WGqQaxcLZd9+oLJF+NOJpSjF1AbG7jsHBVa
uUs3E/5d/blVqprL/vCo635kLxPK8/U/Gwuv3elnwutZt4hfx1y2bE1c7PtB
JvTkx2Pt3xs0OEz6Ow7puEmNkhwRxt2hN86EU3y+JVazwY7DhKDUuPbFOy67
Mi1r+fFJkge0/RXTp5nQhM+Lk5cFXZsl2eZvR80VLllP7L70ZZf/MaESbf5S
+0suu+S1TXQqxoLKfP6jJf7rApUFM/j2S5MqDFMEWdDxTjLF/BmX7cAJu5Qk
zPpf/LOO60YScNK/DA1tOy9G2o9q3sk5K8H6Xz71xP3zcVIsqMDnPRMMx1hp
FtzHt0/YW/M8Wpb0R+zYBVF0kjkawOuMHGmvnTD19pQCwa8FHDfnEPs+ctLP
3YAFK22G7OhxXHa6Pav6oBEL9i76/m3uApddU/pHw82YBQW/S9grF3DZ1KX3
TrtuZME+vs6Kd2lxhqR9pl1tyj4zUhdSNTHfs5XUDeJmsh22k7rP8JM5O0uS
s229HGytWfA9v56Gl0uf7NrJglV8xlVaxHfasCCUH+fFhhL7HZvqYW1HzJfP
fkMWry0dyH5ybAQXWuxhQdGpN5bZ17nspuKy4G2OLLiRby+x5NjXLU5kPBiz
coW5MwumiHUzSr257MDB7lgzVxYEfP3urswOUzeyvuYiB2OTQyyI8+NLLV5w
FXiQ8Uyjq8Y2eJL+wQOnLI29WDCZH//+ToN7Rj5kvrbCUYqhLwt+4MeXXZTn
pO9HxjOPOlDEDGDBQXf29Sd7uezQfkXZdUFkvIc76nzWBLPgAF/veHGuavUJ
FpxinIlIMuWyrd054V6hpH0Z3XlNTjgL9vPnr/O2qrc1gvS/Gqh3Q/4MyYJq
1212RZHzDqgTxM/HkPHaz/iWv40j7a30mgL+nSXtS9pNtA0SWPCv/vpynaXE
Pqbkt/onsSCHz1cAIzU/hexXYCRia/dFsl+/zD7e4sssOMPvp83K5tmeqyw4
xNcteaWeF9NYcIIf72WBxuJP18n6NJ2S64UyyfyXxGfiQTbpTy112xhyiwUv
8O2Pen2aeJrDgtP8fD8VWXlDd8l6t3/IctbMI/stPiFKd80n69XQDvyQ9oDU
L37/GVH/iPA/Jo+5Dc6xsTjzdZJPyXy+rMf95s/J+lu6FbNOF5L1bb0cZVdS
TNZTaDYsyikh+1HnOLBXlpP5L9xGQYfZpP3Xps4Nu2pJ+//S91VTO0m9cdu7
08bdJIuZBj292Ev2+zT32uCjfnKeXdlbFgkPkfYJIj4Oan/I+GheKT5klOzH
0wO8vjJO6Pz+vzHygms5pP3J8M+PhidJDi5/vd91hrRfrN5z5eQcyefrd1gW
8cj5TEe+pIzNk7rHGrUiHar+/+bd0JHgc0hQ/3/xTS5MqmYK6/+vv/8D+DH+
wQ==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwV0H881HcAx3G+6sRRSsbVXHcnP+7ouHP3+VaueYdoqbZojyRzpTgkZelK
zobkR7FHlOJQbmwe0zVZw9pk/aZUfgxZjyz6dQ39sF1XrGPtj9fj9f+TG7Uz
JJoyMTFZ+b7/X2axIpebQOHs2ieBazIZGPIPT/JOpWDInfCUFzKgmjgXY3OY
whHf9c4yDQP29dYRz9UU3A1n5rHqGfhRoVh3s5bCda25jeEiA1rfO/eMv1K4
lJVYyu9moMZeuk10m0JzRC/v80cMlLdSe0teUqi3qpJenW6ObNeT5TESM6gT
PtpUtMoc4boeHdVihkSPPd8Je8xBKfy+9Omahg+0D2UK3QyExDie1r5hQHH6
Qly/NRORWRndsf9aYvcNbuGx2bMwzm8VPh+eiZymc8r89NloPCoIYpbMBhr3
u3CrbOH8TduA1XFb1F11uMDT2OGr+5aGwRY7WEyF9xpu2ENz74Jb6YA93I3W
M+qesZDyLMiv5S4LZswSbs/D+ZDxlAMN7+bjesD15nZzNhq2p8rnGR3BaY1e
4DCNg/xdRfVucznoyliqOcfigldwCo0LuVCcDPJaLuDhqMjBf4LHQ7/fRfFB
NydMjERl1xAn+BotlWLZQsiErGXMxQuR4XvJ4/gyZ0R1m5tukTij5lHdq5El
LkjLb5vOCXTB5Ypdr2uDXbH7jj6teIUrfn5QvoMT7Aa5yz8kOdwN1XSZy5Sc
D89BvjEgno/ksa7Rjp0C/MG9RW4pBGB7J7ts2OGOlBTUN+93R8uhZ5VB6R7Q
h3FObU31wJL4tq9fpC9CqHqx+p1yEUpOD+blqISoGeP1TeYIMUq1X8sr8ERf
576DTdmemJl0ZCk30AvGqM5fEtZ4oXJ7tVjc6YU0rno07I4XOILEbex1Iry0
MXFuWS1CEaun/ECHCBHMDuPdXhGmbKv2VISJ0Xgj1Ob2Z2Js7HbNLeoXg3l0
+RXloBhnyux8ZFu9EVLQriqN9cbr4lP6yBFvZAczd53QeYO//oEuIl6Chrk/
ma1KkiDMMTd1ll6Cbs2crrtjEuypfbqyIlmKIbn1t3/ulCIrdujD6r+lGHZL
YqnfSlEgWlEoTyUYajjU6rWPIKsl0tcwQbA2Wq+K308wtqNN72kkaJ4bKa5W
EcgdxbVxUwQndosq7DMIlqqm2w2Y0Vgj6v9iMo/g1RLt8BUrGue1zuxbZQQR
DePFhWwahVUXkxW/EUi0x0Y9/GhMhggEmksEmk2TmpgAGgnUsQf3rhDMYsZu
qAykEbRFsWptG8FwnM9l22AaRvZMjrSLoNL14YmJUBpx6k3t1CMCqypP/7Zo
Gn0fX0uXPSFICSl9axpLI2BcSJQ6Ap2p2Q8+8TQWhFGav0YILm/uc6hLpNFr
972yU0+wj532ongvDb9rczws3xA8uf20qiOFxtlk1ZD/OEFo2qcbLVQ0Dv/+
yeqm9w7C+05XVek03maeNx1771B2uCClMZNGjNipSUDRsPB5I3yVRaNnKD9h
2zQae4c3P+bn0FheaOCeZNB4XHqzdGsejf8ANn7s4g==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA0EPBdBWJnz44rYj86ZPxv7SD/pmB
7Xw/hwQT+fx28b8xmtOHQu2MP9VbnfUPWvG/cCW+/iLtnD92CrLuNSDxvw9r
MzoT7aw/smfb4IGs8L/fDe5XC+28P1lEXIoziu+/R1/LZgftzD9ELqcbk+zr
v/sHOm4F7dw/GQI9PlKx5L++m7LDcyTuP2CpncaEDcS/Dw3VxjJk9j8PKKAw
IUHTPxSqRqDngPY/JZxmlvSz0z8aR7h5nJ32Pz4QLfzHJtQ/JIGbLAbX9j9g
+LnHbgzVPzj1YZLZSfc/tcjTXrzX1j9i3e5dgC/4P1xpB41Xbto/ta0I9c36
+T9WVbf0xs3gP7pKes6CF/o/X4+apzAH4T/A5+unNzT6P2rJfVqaQOE/yiHP
WqFt+j9+PUTAbbPhP96VlcB04Po/piXRixSZ4j8IfiKMG8b7P/z16iJiZOQ/
W048I2mR/T+hlh5R/frnP+BtUduMsP0/qtVIwUQ56D9kjWaTsM/9P7MUczGM
d+g/bMyQA/gN/j/DkscRG/ToP3xK5eOGiv4/5I5w0jjt6T+cRo6kpIP/PyOH
wlN03+s/IGajXMii/z8rxuzDux3sP6SFuBTswf8/MwUXNANc7D9WYnHCGQAA
QEGDaxSS2Ow/XqGbMmE+AEBgfxTVr9HtP24f8BLwugBApHdmVuvD7z8wr/ru
gcoAQFZbSGMZAfA/8j4FyxPaAEDael0bPSDwP3ZeGoM3+QBA4bmHi4Re8D9+
nUTzfjcBQPI33GsT2/A/QC1PzxBHAUB1V/EjN/rwPwK9WauiVgFA+nYG3FoZ
8T+G3G5jxnUBQAK2MEyiV/E/jhuZ0w20AUARNIUsMdTxP1Cro6+fwwFAlVOa
5FTz8T8SO66LMdMBQBlzr5x4EvI/llrDQ1XyAUAistkMwFDyP1jqzR/nAQJA
ptHuxONv8j8aetj7eBECQCnxA30Hj/I/npnts5wwAkAyMC7tTs3yP2Ap+I8u
QAJAtU9DpXLs8j8iuQJswE8CQDpvWF2WC/M/5EgNSFJfAkC9jm0VuirzP7Y0
Fa3/agJAYWZ93xRC8z/KDoy4
         "]]}}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-0.8059047496538432, -6.907755278982137}, 
     PlotRange -> {{-0.8059047496538432, 
      16.924000071671436`}, {-6.907755278982137, 11.512925464970229`}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{3.2894072757057793`*^-7, 16.11809532201759}, {
        46.051701859880914`, 46.051701859880914`}}, {{3.2894072757057793`*^-7,
         16.11809532201759}, {11.512925464970229`, 11.512925464970229`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"Stopping Power (MeV/\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(-5\\)]\\)cm)\"", TraditionalForm], None}, {
        FormBox["\"Pion Energy (MeV)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[Bold], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 16.11809532201759}, {-6.907755278982137, 
      11.512925464970229`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Coulomb (electron)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Coulomb (nuclei)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Inelastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Nuclear Elastic\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707775161205503*^9, 3.708288764403833*^9, 
  3.708289255457758*^9, 3.7082892968292437`*^9, 3.708292244979699*^9, 
  3.708344025227751*^9, 3.7103508964247837`*^9, 3.710500107105405*^9, 
  3.710500388661186*^9, 3.710501170077609*^9, 3.710501339207707*^9, 
  3.710501411887267*^9, 3.710501564921658*^9, 3.710506830697893*^9, 
  3.710507795969468*^9, 3.710508126060598*^9, 3.7105150289992533`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton.pdf\>\"", ",", "photonall"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron.pdf\>\"", ",", 
    "electronall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion.pdf\>\"", ",", "pionall"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon.pdf\>\"", ",", 
    "nucleonall"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPphoton2.pdf\>\"", ",", 
    "photonall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPelectron2.pdf\>\"", ",", 
    "electronall2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPpion2.pdf\>\"", ",", "pionall2"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/NewUser/Documents/Qballs/SPnucleon2.pdf\>\"", ",", 
    "nucleonall2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.70777510737917*^9, 3.707775131585671*^9}, {
  3.7105134353191557`*^9, 3.7105134551898746`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["$$$$$$$$$$$$$", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.7060593812350616`*^9, 3.706059385481599*^9}, {
  3.710502245744701*^9, 3.7105022486474657`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xhad", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", " ", "\[Sigma]inel"}]], 
       RowBox[{"Log", "[", 
        FractionBox["\[Epsilon]", "10"], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]inel", "\[Rule]", 
         RowBox[{"0.1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]el", "=", 
   RowBox[{"Convert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"n", "*", "\[Sigma]"}]], "*", 
       RowBox[{"Sqrt", "[", "10", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", 
         RowBox[{
          SuperscriptBox["10", "32"], 
          SuperscriptBox["Centimeter", 
           RowBox[{"-", "3"}]]}]}], ",", 
        RowBox[{"\[Sigma]", "\[Rule]", 
         RowBox[{"1", "Barn"}]}]}], "}"}]}], ",", "Centimeter"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7059417325703278`*^9, 3.705941734089673*^9}, {
  3.705942481098905*^9, 3.7059424812484827`*^9}, {3.705943959443667*^9, 
  3.705943961182448*^9}, {3.7059471483075314`*^9, 3.705947148786978*^9}, {
  3.705947207793386*^9, 3.7059472079054747`*^9}, {3.7105020479850693`*^9, 
  3.7105021791007*^9}, {3.7105035793080053`*^9, 3.7105035816738653`*^9}, {
  3.7105081398855143`*^9, 3.7105081400187187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Xhad", ",", "\[Lambda]el"}], "}"}], "/.", 
   RowBox[{"\[Epsilon]", "\[Rule]", 
    SuperscriptBox["10", "6"]}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.705945716937483*^9, 3.705945755799615*^9}, {
   3.705946410532455*^9, 3.705946427577038*^9}, {3.7060325196014433`*^9, 
   3.7060325225371637`*^9}, {3.7105018300920277`*^9, 3.710501862804953*^9}, {
   3.710501914016526*^9, 3.710501914279923*^9}, 3.710501970585722*^9, {
   3.710502187533626*^9, 3.710502190284931*^9}, {3.71050222788789*^9, 
   3.7105022335907393`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.1512925464970226`*^-6", " ", "Centimeter"}], ",", 
   RowBox[{"3.162277660168379`*^-8", " ", "Centimeter"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.705947315261444*^9, {3.706032501127593*^9, 3.706032550030827*^9}, 
   3.70603258285816*^9, 3.706063987222834*^9, {3.710501833567007*^9, 
   3.710501863138879*^9}, {3.71050191454672*^9, 3.7105019261077623`*^9}, {
   3.7105019624907217`*^9, 3.7105019709577627`*^9}, 3.7105021905907393`*^9, {
   3.710502229253213*^9, 3.710502233935169*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Electrons and Photons", "Subsubsection",
 CellChangeTimes->{{3.706059348466249*^9, 3.70605935380217*^9}, {
  3.7060593908497257`*^9, 3.706059390969508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SqrtBox[
        FractionBox["Elpm", "\[Epsilon]"]], " ", "\[Epsilon]"}], "X0"], ")"}], 
    RowBox[{"-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "\[Epsilon]c", ",", "\[Epsilon]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Epsilon]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]c", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706059448735363*^9, 3.70605945549938*^9}, {
  3.706059582918623*^9, 3.706059604588517*^9}, {3.7060599385677767`*^9, 
  3.7060599578500547`*^9}, {3.710502025387974*^9, 3.710502026025921*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox["\[Epsilon]"], "-", 
       SqrtBox["\[Epsilon]c"]}], ")"}]}], 
    SqrtBox["Elpm"]], ",", 
   RowBox[{"\[Epsilon]", ">", "\[Epsilon]c"}]}], "]"}]], "Output",
 CellChangeTimes->{3.710503230070257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "X0", " ", 
       RowBox[{"(", 
        SqrtBox["\[Epsilon]"], ")"}]}], 
      SqrtBox["Elpm"]], "/.", 
     RowBox[{"{", 
      RowBox[{"Elpm", "->", 
       FractionBox[
        RowBox[{
         SuperscriptBox["me", "2"], "X0", " ", "\[Alpha]"}], 
        RowBox[{"4", "Pi"}]]}], "}"}]}], "/.", 
    RowBox[{"X0", "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"4", "n", " ", 
         SuperscriptBox["Z", "2"], " ", 
         SuperscriptBox["\[Alpha]", "3"]}], 
        SuperscriptBox["me", "2"]], ")"}], 
      RowBox[{"-", "1"}]]}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"me", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}], ",", 
      RowBox[{"Z", ">", "0"}], ",", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71050229377032*^9, 3.710502315426525*^9}, {
  3.710502366708797*^9, 3.710502408158175*^9}, {3.710502442707308*^9, 
  3.7105024651848383`*^9}, {3.710502548326982*^9, 3.7105025784284887`*^9}, {
  3.7105026593550663`*^9, 3.710502733624035*^9}, {3.7105027706367683`*^9, 
  3.7105027969248466`*^9}, {3.710502839714679*^9, 3.710502870062058*^9}, {
  3.710503249266605*^9, 3.7105032496872683`*^9}, {3.710503332245306*^9, 
  3.710503356627955*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["\[Epsilon]", "n"]]}], 
  RowBox[{"Z", " ", 
   SuperscriptBox["\[Alpha]", "2"]}]]], "Output",
 CellChangeTimes->{3.710503529556312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xem", "=", 
  RowBox[{"Convert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"], " ", 
        SqrtBox[
         FractionBox["\[Epsilon]", "n"]]}], 
       RowBox[{"Z", " ", 
        SuperscriptBox["\[Alpha]", "2"]}]], "*", 
      RowBox[{"(", 
       RowBox[{"200", " ", "Mega", " ", "ElectronVolt", "*", "Fermi"}], 
       ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Z", "\[Rule]", "6"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        FractionBox["1", "137"]}], ",", 
       RowBox[{"n", "\[Rule]", 
        RowBox[{"0.8", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Mega", " ", "ElectronVolt"}], ")"}], "3"]}]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", 
        RowBox[{"\[Epsilon]", " ", "Mega", " ", "ElectronVolt"}]}]}], "}"}]}],
     ",", "Centimeter"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710503389615067*^9, 3.7105034464378557`*^9}, {
  3.710503565401925*^9, 3.710503575052148*^9}}],

Cell[BoxData[
 RowBox[{"2.479589668292241`*^-7", " ", "Centimeter", " ", 
  SqrtBox["\[Epsilon]"]}]], "Output",
 CellChangeTimes->{3.710503575268528*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 675},
WindowMargins->{{222, Automatic}, {-8, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 234, 4, 57, "Input"],
Cell[817, 28, 452, 10, 70, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306, 43, 176, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[1507, 49, 1236, 35, 94, "Input"],
Cell[2746, 86, 613, 11, 50, "Message"],
Cell[3362, 99, 1721, 52, 132, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5132, 157, 175, 2, 43, "Subsubsection"],
Cell[5310, 161, 1684, 42, 134, "Input"],
Cell[6997, 205, 1171, 22, 60, "Input"],
Cell[CellGroupData[{
Cell[8193, 231, 621, 18, 82, "Input"],
Cell[8817, 251, 263, 7, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9129, 264, 694, 21, 86, "Subsubsection"],
Cell[9826, 287, 438, 11, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10301, 303, 150, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[10476, 309, 810, 17, 41, "Input"],
Cell[11289, 328, 797, 15, 50, "Message"],
Cell[12089, 345, 504, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12630, 359, 649, 15, 41, "Input"],
Cell[13282, 376, 801, 15, 50, "Message"],
Cell[14086, 393, 416, 8, 35, "Output"]
}, Open  ]],
Cell[14517, 404, 2357, 61, 190, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16911, 470, 290, 10, 59, "Subsubsection"],
Cell[CellGroupData[{
Cell[17226, 484, 569, 17, 70, "Input"],
Cell[17798, 503, 317, 7, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18152, 515, 496, 14, 95, "Input"],
Cell[18651, 531, 209, 5, 59, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18909, 542, 202, 3, 43, "Subsubsection"],
Cell[19114, 547, 9404, 251, 1067, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28555, 803, 123, 1, 43, "Subsubsection"],
Cell[28681, 806, 7935, 205, 877, "Input"],
Cell[CellGroupData[{
Cell[36641, 1015, 832, 17, 78, "Input"],
Cell[37476, 1034, 25393, 503, 314, "Output"],
Cell[62872, 1539, 26752, 527, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89661, 2071, 1124, 20, 120, "Input"],
Cell[90788, 2093, 43039, 851, 307, "Output"],
Cell[133830, 2946, 44155, 870, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178022, 3821, 983, 18, 99, "Input"],
Cell[179008, 3841, 40636, 778, 314, "Output"],
Cell[219647, 4621, 42811, 815, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262495, 5441, 660, 14, 57, "Input"],
Cell[263158, 5457, 44104, 834, 314, "Output"],
Cell[307265, 6293, 45493, 858, 312, "Output"]
}, Open  ]],
Cell[352773, 7154, 1488, 42, 246, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354298, 7201, 188, 2, 57, "Subsubsection"],
Cell[354489, 7205, 1633, 45, 201, "Input"],
Cell[CellGroupData[{
Cell[356147, 7254, 593, 12, 38, "Input"],
Cell[356743, 7268, 545, 10, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[357337, 7284, 162, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[357524, 7290, 746, 19, 124, "Input"],
Cell[358273, 7311, 364, 11, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358674, 7327, 1471, 39, 118, "Input"],
Cell[360148, 7368, 240, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360425, 7381, 1050, 30, 182, "Input"],
Cell[361478, 7413, 153, 3, 40, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
